{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/components/Login/Login.jsx\";\nimport React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"assets/img/front-logo.png\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\nimport { apiPath } from \"api\";\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { EMAIL_REGEX } from \"__helpers/constants\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ReactNotifications from 'react-browser-notifications';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {// this.setState({\n      //   [event.target.id]: event.target.value\n      // });\n    };\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var spinner = document.getElementById('loadingSpinner');\n\n      if (spinner && !spinner.hasAttribute('hidden')) {\n        spinner.setAttribute('hidden', 'true');\n      }\n    };\n\n    var userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    var tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    var currentTimeStamp = new Date().getTime();\n    var timeFlag = false;\n\n    if (!userInfo || !tokenTimeStamp) {\n      userService.logout();\n    }\n\n    userService.logout();\n    _this._isMounted = false;\n    _this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      formErrors: {\n        username: \"\",\n        password: \"\"\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: userInfo && userInfo.accessToken ? userInfo.accessToken : [],\n      tokenTimeStamp: tokenTimeStamp ? tokenTimeStamp : currentTimeStamp,\n      timeFlag: timeFlag\n    };\n    _this.clientAuthToken = null;\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleCloseDialog = _this.handleCloseDialog.bind(_assertThisInitialized(_this));\n    _this.showNotifications = _this.showNotifications.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case \"email\":\n          emailValid = value.match(EMAIL_REGEX);\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n          break;\n\n        case \"password\":\n          var error = \"\";\n          passwordValid = true;\n\n          if (!value.trim().length) {\n            passwordValid = false;\n            error = enMsg.passwordRequired;\n          } else if (value.length < 6) {\n            passwordValid = false;\n            error = enMsg.shortPassword;\n          }\n\n          fieldValidationErrors.password = error;\n          break;\n\n        default:\n          emailValid = true;\n          passwordValid = true;\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.emailValid && this.state.passwordValid;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        username: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var data, showNotification, response, notifiaciton;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                event.preventDefault();\n                data = {\n                  username: this.state.email,\n                  password: this.state.password,\n                  grantType: \"password\",\n                  scope: \"user\"\n                };\n                showNotification = {};\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(this.state.apiPath, {\n                  method: \"POST\",\n                  // mode: \"no-cors\", // cors, *cors, same-origin\"\n                  headers: clientTokenHeader(),\n                  body: JSON.stringify(data),\n                  data: JSON.stringify(data)\n                }).then(function (response) {\n                  if (response.status === 400) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                  } else if (response.ok) {\n                    var accessToken = response.headers.get(\"Authorization\");\n\n                    if (accessToken !== undefined) {\n                      var userData = window.btoa(data.username + \":\" + data.password); // userData = window.btoa(userData);\n\n                      // userData = window.btoa(userData);\n                      var user = {\n                        authdata: window.btoa(userData),\n                        accessToken: accessToken\n                      };\n                      localStorage.setItem(\"user\", JSON.stringify(user));\n                      window.location.replace(baseRoutes.dashboard.path); // this.props.history.push(baseRoutes.dashboard.path);\n\n                      // this.props.history.push(baseRoutes.dashboard.path);\n                      return;\n                    }\n                  } else {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                    var error = new Error(response.statusText);\n                  } // return response.json();\n\n\n                  // return response.json();\n                  return response.text();\n                }).then(function (response) {\n                  return true;\n                })[\"catch\"](function (error) {\n                  showNotification = {\n                    title: enMsg.loginFailedTitle,\n                    message: enMsg.networkFailedError,\n                    type: \"danger\"\n                  };\n                  return response;\n                });\n\n              case 7:\n                response = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n                showNotification = {\n                  title: enMsg.loginFailedTitle,\n                  message: enMsg.networkFailedError,\n                  type: \"danger\"\n                };\n\n              case 13:\n                if (showNotification !== undefined && showNotification.title !== undefined && showNotification.message !== undefined && showNotification.type !== undefined) {\n                  this.notificationID = store.removeNotification(this.notificationID);\n\n                  if (this.notificationID == undefined) {\n                    notifiaciton = {\n                      title: showNotification.title,\n                      message: showNotification.message,\n                      type: showNotification.type\n                    };\n                    this.notificationID = store.addNotification(notifiaciton);\n                  }\n\n                  userService.showNotification(showNotification);\n                }\n\n                this._isMounted && this.setState({\n                  loading: false\n                });\n                /* set notification config */\n                // this.setState({ showNotification: showNotification });\n                // this.forceUpdate();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 10]]);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-outer-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-cover gray-bg-color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-inner-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-content loginLogoMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginLogoInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Email Address\",\n        type: \"email\",\n        name: \"email\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this2.handleUserInput(event);\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.emailValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this2.handleUserInput(event);\n        },\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.passwordValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n      , {\n        color: \"primary\",\n        className: this.state.loading ? \"buttonSuccess\" : \"\",\n        disabled: this.state.loading || !this.validateForm(),\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }, \"Login\", this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      })))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/components/Login/Login.jsx"],"names":["React","Component","useReducer","Button","FormGroup","TextField","CircularProgress","Link","logo","basePath","baseRoutes","FormErrors","fetch","apiPath","store","userService","enMsg","EMAIL_REGEX","clientTokenHeader","NotificationContainer","DialogTitle","DialogContent","DialogActions","Dialog","ReactNotifications","Login","props","handleChange","event","handleUserInput","e","name","target","value","setState","validateField","componentDidMount","spinner","document","getElementById","hasAttribute","setAttribute","userInfo","JSON","parse","localStorage","getItem","tokenTimeStamp","currentTimeStamp","Date","getTime","timeFlag","logout","_isMounted","state","email","username","password","grantType","scope","formErrors","emailValid","passwordValid","formValid","login","loading","showNotification","open","other","undefined","accessToken","clientAuthToken","bind","handleSubmit","handleCloseDialog","showNotifications","fieldName","fieldValidationErrors","match","inValidEmail","error","trim","length","passwordRequired","shortPassword","validateForm","preventDefault","data","method","headers","body","stringify","then","response","status","title","loginFailedTitle","message","inValidCredentials","type","ok","get","userData","window","btoa","user","authdata","setItem","location","replace","dashboard","path","Error","statusText","text","networkFailedError","notificationID","removeNotification","notifiaciton","addNotification"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\n\nimport logo from \"assets/img/front-logo.png\";\n\nimport { basePath, baseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\n\nimport { apiPath } from \"api\";\n\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { EMAIL_REGEX } from \"__helpers/constants\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ReactNotifications from 'react-browser-notifications';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    let userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    let currentTimeStamp = new Date().getTime();\n    let timeFlag = false;\n    if(!userInfo ||!tokenTimeStamp){\n      userService.logout();\n    }\n    userService.logout();\n    this._isMounted = false; \n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      formErrors: { username: \"\", password: \"\" },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: (userInfo && userInfo.accessToken) ? userInfo.accessToken : [],\n      tokenTimeStamp: (tokenTimeStamp) ? tokenTimeStamp : currentTimeStamp,\n      timeFlag: timeFlag,\n    };\n    this.clientAuthToken = null;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.showNotifications = this.showNotifications.bind(this);\n  }\n\n  handleChange = event => {\n    // this.setState({\n    //   [event.target.id]: event.target.value\n    // });\n  };\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(EMAIL_REGEX);\n        fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n        break;\n      case \"password\":\n        let error = \"\";\n        passwordValid = true;\n        if (!value.trim().length) {\n          passwordValid = false;\n          error = enMsg.passwordRequired;\n        } else if (value.length < 6) {\n          passwordValid = false;\n          error = enMsg.shortPassword;\n        }\n        fieldValidationErrors.password = error;\n        break;\n      default:\n        emailValid = true;\n        passwordValid = true;\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm() {\n    return this.state.emailValid && this.state.passwordValid;\n  }\n\n  componentDidMount = () => {\n    const spinner = document.getElementById('loadingSpinner');\n    if (spinner && !spinner.hasAttribute('hidden')) {\n      spinner.setAttribute('hidden', 'true');\n    }\n  };\n\n  handleChange(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    this.setState({ loading: true });\n    event.preventDefault();\n    const data = {\n      username: this.state.email,\n      password: this.state.password,\n      grantType: \"password\",\n      scope: \"user\"\n    };\n\n    let showNotification = {};\n\n    try {\n      const response = await fetch(this.state.apiPath, {\n        method: \"POST\",\n        // mode: \"no-cors\", // cors, *cors, same-origin\"\n        headers: clientTokenHeader(),\n        body: JSON.stringify(data),\n        data: JSON.stringify(data)\n      })\n        .then(response => {\n          if (response.status === 400) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n          } else if (response.ok) {\n            let accessToken = response.headers.get(\"Authorization\");\n\n            if (accessToken !== undefined) {\n              let userData = window.btoa(data.username + \":\" + data.password);\n              // userData = window.btoa(userData);\n              let user = {\n                authdata: window.btoa(userData),\n                accessToken: accessToken\n              };\n              \n              localStorage.setItem(\"user\", JSON.stringify(user));\n              window.location.replace(baseRoutes.dashboard.path);\n              // this.props.history.push(baseRoutes.dashboard.path);\n              return;\n            }\n          } else {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n            let error = new Error(response.statusText);\n          }\n          // return response.json();\n          return response.text();\n        })\n        .then(response => {\n          return true;\n        })\n        .catch(error => {\n          showNotification = {\n            title: enMsg.loginFailedTitle,\n            message: enMsg.networkFailedError,\n            type: \"danger\"\n          };\n\n          return response;\n        });\n\n      // throw new Error(error);\n    } catch (error) {\n      showNotification = {\n        title: enMsg.loginFailedTitle,\n        message: enMsg.networkFailedError,\n        type: \"danger\"\n      };\n    }\n\n    if (\n      showNotification !== undefined &&\n      showNotification.title !== undefined &&\n      showNotification.message !== undefined &&\n      showNotification.type !== undefined\n    ) {\n      this.notificationID = store.removeNotification(this.notificationID);\n      if (this.notificationID == undefined) {\n        let notifiaciton = {\n          title: showNotification.title,\n          message: showNotification.message,\n          type: showNotification.type\n        };\n        this.notificationID = store.addNotification(notifiaciton);\n      }\n      userService.showNotification(showNotification)\n    }\n\n    this._isMounted && this.setState({ loading: false });\n    /* set notification config */\n    // this.setState({ showNotification: showNotification });\n    // this.forceUpdate();\n  }\n  render() {\n    return (\n      <div className=\"login-outer-cover\">\n        <div className=\"login-cover gray-bg-color\">\n          <div className=\"login-inner-cover\">            \n            <div className=\"logo-content loginLogoMain\">\n              <div className=\"loginLogoInner\">\n                <img src={logo} alt=\"logo\" />\n              </div>\n            </div>\n            <div className=\"green-header\">Login</div>\n            <div className=\"login-content\">\n              <div className=\"Login\">\n                <form onSubmit={this.handleSubmit} noValidate>\n                  <FormGroup>\n                    {/* <InputLabel>Email Address</InputLabel> */}\n                    <TextField\n                      label=\"Email Address\"\n                      type=\"email\"\n                      name=\"email\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.email}\n                    />\n                    <FormErrors\n                      show={!this.state.emailValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"email\"\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <TextField\n                      label=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.password}\n                    />\n                    <FormErrors\n                      show={!this.state.passwordValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"password\"\n                    />\n                  </FormGroup>\n                  <div className=\"action-btns\">\n                    <Button\n                      // variant=\"contained\"\n                      color=\"primary\"\n                      className={this.state.loading ? \"buttonSuccess\" : \"\"}\n                      disabled={this.state.loading || !this.validateForm()}\n                      type=\"submit\"\n                    >\n                      Login\n                      {this.state.loading && (\n                        <CircularProgress\n                          size={24}\n                          className=\"buttonProgress\"\n                        />\n                      )}\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}