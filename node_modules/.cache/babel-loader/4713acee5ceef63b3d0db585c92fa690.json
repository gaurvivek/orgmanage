{"ast":null,"code":"/*\n Highcharts JS v8.2.2 (2020-10-22)\n\n Data module\n\n (c) 2012-2019 Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function (b) {\n  \"object\" === typeof module && module.exports ? (b[\"default\"] = b, module.exports = b) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/data\", [\"highcharts\"], function (q) {\n    b(q);\n    b.Highcharts = q;\n    return b;\n  }) : b(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (b) {\n  function q(b, x, q, v) {\n    b.hasOwnProperty(x) || (b[x] = v.apply(null, q));\n  }\n\n  b = b ? b._modules : {};\n  q(b, \"Extensions/Ajax.js\", [b[\"Core/Globals.js\"], b[\"Core/Utilities.js\"]], function (b, x) {\n    var q = x.merge,\n        v = x.objectEach;\n\n    b.ajax = function (b) {\n      var m = q(!0, {\n        url: !1,\n        type: \"get\",\n        dataType: \"json\",\n        success: !1,\n        error: !1,\n        data: !1,\n        headers: {}\n      }, b);\n      b = {\n        json: \"application/json\",\n        xml: \"application/xml\",\n        text: \"text/plain\",\n        octet: \"application/octet-stream\"\n      };\n      var r = new XMLHttpRequest();\n      if (!m.url) return !1;\n      r.open(m.type.toUpperCase(), m.url, !0);\n      m.headers[\"Content-Type\"] || r.setRequestHeader(\"Content-Type\", b[m.dataType] || b.text);\n      v(m.headers, function (b, m) {\n        r.setRequestHeader(m, b);\n      });\n\n      r.onreadystatechange = function () {\n        if (4 === r.readyState) {\n          if (200 === r.status) {\n            var b = r.responseText;\n            if (\"json\" === m.dataType) try {\n              b = JSON.parse(b);\n            } catch (C) {\n              m.error && m.error(r, C);\n              return;\n            }\n            return m.success && m.success(b);\n          }\n\n          m.error && m.error(r, r.responseText);\n        }\n      };\n\n      try {\n        m.data = JSON.stringify(m.data);\n      } catch (O) {}\n\n      r.send(m.data || !0);\n    };\n\n    b.getJSON = function (q, m) {\n      b.ajax({\n        url: q,\n        success: m,\n        dataType: \"json\",\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        }\n      });\n    };\n\n    return {\n      ajax: b.ajax,\n      getJSON: b.getJSON\n    };\n  });\n  q(b, \"Extensions/Data.js\", [b[\"Extensions/Ajax.js\"], b[\"Core/Series/Series.js\"], b[\"Core/Chart/Chart.js\"], b[\"Core/Globals.js\"], b[\"Core/Series/Point.js\"], b[\"Core/Utilities.js\"]], function (b, q, H, v, I, m) {\n    var r = b.ajax,\n        x = v.doc;\n    b = m.addEvent;\n    var C = m.defined,\n        J = m.extend,\n        K = m.fireEvent,\n        E = m.isNumber,\n        B = m.merge,\n        L = m.objectEach,\n        M = m.pick,\n        N = m.splat,\n        D = q.seriesTypes;\n\n    q = function () {\n      function b(a, c, f) {\n        this.options = this.rawColumns = this.firstRowAsNames = this.chartOptions = this.chart = void 0;\n        this.dateFormats = {\n          \"YYYY/mm/dd\": {\n            regex: /^([0-9]{4})[\\-\\/\\.]([0-9]{1,2})[\\-\\/\\.]([0-9]{1,2})$/,\n            parser: function parser(a) {\n              return a ? Date.UTC(+a[1], a[2] - 1, +a[3]) : NaN;\n            }\n          },\n          \"dd/mm/YYYY\": {\n            regex: /^([0-9]{1,2})[\\-\\/\\.]([0-9]{1,2})[\\-\\/\\.]([0-9]{4})$/,\n            parser: function parser(a) {\n              return a ? Date.UTC(+a[3], a[2] - 1, +a[1]) : NaN;\n            },\n            alternative: \"mm/dd/YYYY\"\n          },\n          \"mm/dd/YYYY\": {\n            regex: /^([0-9]{1,2})[\\-\\/\\.]([0-9]{1,2})[\\-\\/\\.]([0-9]{4})$/,\n            parser: function parser(a) {\n              return a ? Date.UTC(+a[3], a[1] - 1, +a[2]) : NaN;\n            }\n          },\n          \"dd/mm/YY\": {\n            regex: /^([0-9]{1,2})[\\-\\/\\.]([0-9]{1,2})[\\-\\/\\.]([0-9]{2})$/,\n            parser: function parser(a) {\n              if (!a) return NaN;\n              var c = +a[3];\n              c = c > new Date().getFullYear() - 2E3 ? c + 1900 : c + 2E3;\n              return Date.UTC(c, a[2] - 1, +a[1]);\n            },\n            alternative: \"mm/dd/YY\"\n          },\n          \"mm/dd/YY\": {\n            regex: /^([0-9]{1,2})[\\-\\/\\.]([0-9]{1,2})[\\-\\/\\.]([0-9]{2})$/,\n            parser: function parser(a) {\n              return a ? Date.UTC(+a[3] + 2E3, a[1] - 1, +a[2]) : NaN;\n            }\n          }\n        };\n        this.init(a, c, f);\n      }\n\n      b.prototype.init = function (a, c, f) {\n        var d = a.decimalPoint;\n        c && (this.chartOptions = c);\n        f && (this.chart = f);\n        \".\" !== d && \",\" !== d && (d = void 0);\n        this.options = a;\n        this.columns = a.columns || this.rowsToColumns(a.rows) || [];\n        this.firstRowAsNames = M(a.firstRowAsNames, this.firstRowAsNames, !0);\n        this.decimalRegex = d && new RegExp(\"^(-?[0-9]+)\" + d + \"([0-9]+)$\");\n        this.rawColumns = [];\n\n        if (this.columns.length) {\n          this.dataFound();\n          var h = !0;\n        }\n\n        this.hasURLOption(a) && (clearTimeout(this.liveDataTimeout), h = !1);\n        h || (h = this.fetchLiveData());\n        h || (h = !!this.parseCSV().length);\n        h || (h = !!this.parseTable().length);\n        h || (h = this.parseGoogleSpreadsheet());\n        !h && a.afterComplete && a.afterComplete();\n      };\n\n      b.prototype.hasURLOption = function (a) {\n        return !(!a || !(a.rowsURL || a.csvURL || a.columnsURL));\n      };\n\n      b.prototype.getColumnDistribution = function () {\n        var a = this.chartOptions,\n            c = this.options,\n            f = [],\n            d = function d(a) {\n          return (D[a || \"line\"].prototype.pointArrayMap || [0]).length;\n        },\n            h = a && a.chart && a.chart.type,\n            g = [],\n            b = [],\n            l = 0;\n\n        c = c && c.seriesMapping || a && a.series && a.series.map(function () {\n          return {\n            x: 0\n          };\n        }) || [];\n        var e;\n        (a && a.series || []).forEach(function (a) {\n          g.push(d(a.type || h));\n        });\n        c.forEach(function (a) {\n          f.push(a.x || 0);\n        });\n        0 === f.length && f.push(0);\n        c.forEach(function (c) {\n          var f = new G(),\n              k = g[l] || d(h),\n              n = (a && a.series || [])[l] || {},\n              m = D[n.type || h || \"line\"].prototype.pointArrayMap,\n              y = m || [\"y\"];\n          (C(c.x) || n.isCartesian || !m) && f.addColumnReader(c.x, \"x\");\n          L(c, function (a, c) {\n            \"x\" !== c && f.addColumnReader(a, c);\n          });\n\n          for (e = 0; e < k; e++) {\n            f.hasReader(y[e]) || f.addColumnReader(void 0, y[e]);\n          }\n\n          b.push(f);\n          l++;\n        });\n        c = D[h || \"line\"].prototype.pointArrayMap;\n        \"undefined\" === typeof c && (c = [\"y\"]);\n        this.valueCount = {\n          global: d(h),\n          xColumns: f,\n          individual: g,\n          seriesBuilders: b,\n          globalPointArrayMap: c\n        };\n      };\n\n      b.prototype.dataFound = function () {\n        this.options.switchRowsAndColumns && (this.columns = this.rowsToColumns(this.columns));\n        this.getColumnDistribution();\n        this.parseTypes();\n        !1 !== this.parsed() && this.complete();\n      };\n\n      b.prototype.parseCSV = function (a) {\n        function c(a, c, f, d) {\n          function b(c) {\n            k = a[c];\n            l = a[c - 1];\n            p = a[c + 1];\n          }\n\n          function h(a) {\n            w.length < t + 1 && w.push([a]);\n            w[t][w[t].length - 1] !== a && w[t].push(a);\n          }\n\n          function g() {\n            e > u || u > m ? (++u, n = \"\") : (!isNaN(parseFloat(n)) && isFinite(n) ? (n = parseFloat(n), h(\"number\")) : isNaN(Date.parse(n)) ? h(\"string\") : (n = n.replace(/\\//g, \"-\"), h(\"date\")), A.length < t + 1 && A.push([]), f || (A[t][c] = n), n = \"\", ++t, ++u);\n          }\n\n          var z = 0,\n              k = \"\",\n              l = \"\",\n              p = \"\",\n              n = \"\",\n              u = 0,\n              t = 0;\n\n          if (a.trim().length && \"#\" !== a.trim()[0]) {\n            for (; z < a.length; z++) {\n              b(z);\n\n              if (\"#\" === k) {\n                g();\n                return;\n              }\n\n              if ('\"' === k) for (b(++z); z < a.length && ('\"' !== k || '\"' === l || '\"' === p);) {\n                if ('\"' !== k || '\"' === k && '\"' !== l) n += k;\n                b(++z);\n              } else d && d[k] ? d[k](k, n) && g() : k === y ? g() : n += k;\n            }\n\n            g();\n          }\n        }\n\n        function f(a) {\n          var c = 0,\n              f = 0,\n              d = !1;\n          a.some(function (a, d) {\n            var b = !1,\n                h = \"\";\n            if (13 < d) return !0;\n\n            for (var g = 0; g < a.length; g++) {\n              d = a[g];\n              var k = a[g + 1];\n              var e = a[g - 1];\n              if (\"#\" === d) break;\n              if ('\"' === d) {\n                if (b) {\n                  if ('\"' !== e && '\"' !== k) {\n                    for (; \" \" === k && g < a.length;) {\n                      k = a[++g];\n                    }\n\n                    \"undefined\" !== typeof n[k] && n[k]++;\n                    b = !1;\n                  }\n                } else b = !0;\n              } else \"undefined\" !== typeof n[d] ? (h = h.trim(), isNaN(Date.parse(h)) ? !isNaN(h) && isFinite(h) || n[d]++ : n[d]++, h = \"\") : h += d;\n              \",\" === d && f++;\n              \".\" === d && c++;\n            }\n          });\n          d = n[\";\"] > n[\",\"] ? \";\" : \",\";\n          b.decimalPoint || (b.decimalPoint = c > f ? \".\" : \",\", h.decimalRegex = new RegExp(\"^(-?[0-9]+)\" + b.decimalPoint + \"([0-9]+)$\"));\n          return d;\n        }\n\n        function d(a, c) {\n          var d = [],\n              f = 0,\n              g = !1,\n              k = [],\n              n = [],\n              e;\n          if (!c || c > a.length) c = a.length;\n\n          for (; f < c; f++) {\n            if (\"undefined\" !== typeof a[f] && a[f] && a[f].length) {\n              var l = a[f].trim().replace(/\\//g, \" \").replace(/\\-/g, \" \").replace(/\\./g, \" \").split(\" \");\n              d = [\"\", \"\", \"\"];\n\n              for (e = 0; e < l.length; e++) {\n                e < d.length && (l[e] = parseInt(l[e], 10), l[e] && (n[e] = !n[e] || n[e] < l[e] ? l[e] : n[e], \"undefined\" !== typeof k[e] ? k[e] !== l[e] && (k[e] = !1) : k[e] = l[e], 31 < l[e] ? d[e] = 100 > l[e] ? \"YY\" : \"YYYY\" : 12 < l[e] && 31 >= l[e] ? (d[e] = \"dd\", g = !0) : d[e].length || (d[e] = \"mm\")));\n              }\n            }\n          }\n\n          if (g) {\n            for (e = 0; e < k.length; e++) {\n              !1 !== k[e] ? 12 < n[e] && \"YY\" !== d[e] && \"YYYY\" !== d[e] && (d[e] = \"YY\") : 12 < n[e] && \"mm\" === d[e] && (d[e] = \"dd\");\n            }\n\n            3 === d.length && \"dd\" === d[1] && \"dd\" === d[2] && (d[2] = \"YY\");\n            a = d.join(\"/\");\n            return (b.dateFormats || h.dateFormats)[a] ? a : (K(\"deduceDateFailed\"), \"YYYY/mm/dd\");\n          }\n\n          return \"YYYY/mm/dd\";\n        }\n\n        var h = this,\n            b = a || this.options,\n            k = b.csv;\n        a = \"undefined\" !== typeof b.startRow && b.startRow ? b.startRow : 0;\n        var l = b.endRow || Number.MAX_VALUE,\n            e = \"undefined\" !== typeof b.startColumn && b.startColumn ? b.startColumn : 0,\n            m = b.endColumn || Number.MAX_VALUE,\n            p = 0,\n            w = [],\n            n = {\n          \",\": 0,\n          \";\": 0,\n          \"\\t\": 0\n        };\n        var A = this.columns = [];\n        k && b.beforeParse && (k = b.beforeParse.call(this, k));\n\n        if (k) {\n          k = k.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\").split(b.lineDelimiter || \"\\n\");\n          if (!a || 0 > a) a = 0;\n          if (!l || l >= k.length) l = k.length - 1;\n          if (b.itemDelimiter) var y = b.itemDelimiter;else y = null, y = f(k);\n          var t = 0;\n\n          for (p = a; p <= l; p++) {\n            \"#\" === k[p][0] ? t++ : c(k[p], p - a - t);\n          }\n\n          b.columnTypes && 0 !== b.columnTypes.length || !w.length || !w[0].length || \"date\" !== w[0][1] || b.dateFormat || (b.dateFormat = d(A[0]));\n          this.dataFound();\n        }\n\n        return A;\n      };\n\n      b.prototype.parseTable = function () {\n        var a = this.options,\n            c = a.table,\n            f = this.columns || [],\n            d = a.startRow || 0,\n            b = a.endRow || Number.MAX_VALUE,\n            g = a.startColumn || 0,\n            k = a.endColumn || Number.MAX_VALUE;\n        c && (\"string\" === typeof c && (c = x.getElementById(c)), [].forEach.call(c.getElementsByTagName(\"tr\"), function (a, c) {\n          c >= d && c <= b && [].forEach.call(a.children, function (a, b) {\n            var h = f[b - g],\n                e = 1;\n            if ((\"TD\" === a.tagName || \"TH\" === a.tagName) && b >= g && b <= k) for (f[b - g] || (f[b - g] = []), f[b - g][c - d] = a.innerHTML; c - d >= e && void 0 === h[c - d - e];) {\n              h[c - d - e] = null, e++;\n            }\n          });\n        }), this.dataFound());\n        return f;\n      };\n\n      b.prototype.fetchLiveData = function () {\n        function a(h) {\n          function e(e, l, n) {\n            function m() {\n              g && f.liveDataURL === e && (c.liveDataTimeout = setTimeout(a, k));\n            }\n\n            if (!e || 0 !== e.indexOf(\"http\")) return e && d.error && d.error(\"Invalid URL\"), !1;\n            h && (clearTimeout(c.liveDataTimeout), f.liveDataURL = e);\n            r({\n              url: e,\n              dataType: n || \"json\",\n              success: function success(a) {\n                f && f.series && l(a);\n                m();\n              },\n              error: function error(a, c) {\n                3 > ++b && m();\n                return d.error && d.error(c, a);\n              }\n            });\n            return !0;\n          }\n\n          e(l.csvURL, function (a) {\n            f.update({\n              data: {\n                csv: a\n              }\n            });\n          }, \"text\") || e(l.rowsURL, function (a) {\n            f.update({\n              data: {\n                rows: a\n              }\n            });\n          }) || e(l.columnsURL, function (a) {\n            f.update({\n              data: {\n                columns: a\n              }\n            });\n          });\n        }\n\n        var c = this,\n            f = this.chart,\n            d = this.options,\n            b = 0,\n            g = d.enablePolling,\n            k = 1E3 * (d.dataRefreshRate || 2),\n            l = B(d);\n        if (!this.hasURLOption(d)) return !1;\n        1E3 > k && (k = 1E3);\n        delete d.csvURL;\n        delete d.rowsURL;\n        delete d.columnsURL;\n        a(!0);\n        return this.hasURLOption(d);\n      };\n\n      b.prototype.parseGoogleSpreadsheet = function () {\n        function a(c) {\n          var b = [\"https://spreadsheets.google.com/feeds/cells\", d, g, \"public/values?alt=json\"].join(\"/\");\n          r({\n            url: b,\n            dataType: \"json\",\n            success: function success(d) {\n              c(d);\n              f.enablePolling && setTimeout(function () {\n                a(c);\n              }, 1E3 * (f.dataRefreshRate || 2));\n            },\n            error: function error(a, c) {\n              return f.error && f.error(c, a);\n            }\n          });\n        }\n\n        var c = this,\n            f = this.options,\n            d = f.googleSpreadsheetKey,\n            b = this.chart,\n            g = f.googleSpreadsheetWorksheet || 1,\n            k = f.startRow || 0,\n            l = f.endRow || Number.MAX_VALUE,\n            e = f.startColumn || 0,\n            m = f.endColumn || Number.MAX_VALUE,\n            p = 1E3 * (f.dataRefreshRate || 2);\n        4E3 > p && (p = 4E3);\n        d && (delete f.googleSpreadsheetKey, a(function (a) {\n          var d = [];\n          a = a.feed.entry;\n          var f = (a || []).length,\n              h = 0,\n              g;\n          if (!a || 0 === a.length) return !1;\n\n          for (g = 0; g < f; g++) {\n            var p = a[g];\n            h = Math.max(h, p.gs$cell.col);\n          }\n\n          for (g = 0; g < h; g++) {\n            g >= e && g <= m && (d[g - e] = []);\n          }\n\n          for (g = 0; g < f; g++) {\n            p = a[g];\n            h = p.gs$cell.row - 1;\n            var q = p.gs$cell.col - 1;\n\n            if (q >= e && q <= m && h >= k && h <= l) {\n              var u = p.gs$cell || p.content;\n              p = null;\n              u.numericValue ? p = 0 <= u.$t.indexOf(\"/\") || 0 <= u.$t.indexOf(\"-\") ? u.$t : 0 < u.$t.indexOf(\"%\") ? 100 * parseFloat(u.numericValue) : parseFloat(u.numericValue) : u.$t && u.$t.length && (p = u.$t);\n              d[q - e][h - k] = p;\n            }\n          }\n\n          d.forEach(function (a) {\n            for (g = 0; g < a.length; g++) {\n              \"undefined\" === typeof a[g] && (a[g] = null);\n            }\n          });\n          b && b.series ? b.update({\n            data: {\n              columns: d\n            }\n          }) : (c.columns = d, c.dataFound());\n        }));\n        return !1;\n      };\n\n      b.prototype.trim = function (a, c) {\n        \"string\" === typeof a && (a = a.replace(/^\\s+|\\s+$/g, \"\"), c && /^[0-9\\s]+$/.test(a) && (a = a.replace(/\\s/g, \"\")), this.decimalRegex && (a = a.replace(this.decimalRegex, \"$1.$2\")));\n        return a;\n      };\n\n      b.prototype.parseTypes = function () {\n        for (var a = this.columns, c = a.length; c--;) {\n          this.parseColumn(a[c], c);\n        }\n      };\n\n      b.prototype.parseColumn = function (a, c) {\n        var f = this.rawColumns,\n            d = this.columns,\n            b = a.length,\n            g = this.firstRowAsNames,\n            k = -1 !== this.valueCount.xColumns.indexOf(c),\n            l,\n            e = [],\n            m = this.chartOptions,\n            p,\n            q = (this.options.columnTypes || [])[c];\n        m = k && (m && m.xAxis && \"category\" === N(m.xAxis)[0].type || \"string\" === q);\n\n        for (f[c] || (f[c] = []); b--;) {\n          var n = e[b] || a[b];\n          var r = this.trim(n);\n          var F = this.trim(n, !0);\n          var t = parseFloat(F);\n          \"undefined\" === typeof f[c][b] && (f[c][b] = r);\n          m || 0 === b && g ? a[b] = \"\" + r : +F === t ? (a[b] = t, 31536E6 < t && \"float\" !== q ? a.isDatetime = !0 : a.isNumeric = !0, \"undefined\" !== typeof a[b + 1] && (p = t > a[b + 1])) : (r && r.length && (l = this.parseDate(n)), k && E(l) && \"float\" !== q ? (e[b] = n, a[b] = l, a.isDatetime = !0, \"undefined\" !== typeof a[b + 1] && (n = l > a[b + 1], n !== p && \"undefined\" !== typeof p && (this.alternativeFormat ? (this.dateFormat = this.alternativeFormat, b = a.length, this.alternativeFormat = this.dateFormats[this.dateFormat].alternative) : a.unsorted = !0), p = n)) : (a[b] = \"\" === r ? null : r, 0 !== b && (a.isDatetime || a.isNumeric) && (a.mixed = !0)));\n        }\n\n        k && a.mixed && (d[c] = f[c]);\n        if (k && p && this.options.sort) for (c = 0; c < d.length; c++) {\n          d[c].reverse(), g && d[c].unshift(d[c].pop());\n        }\n      };\n\n      b.prototype.parseDate = function (a) {\n        var c = this.options.parseDate,\n            b,\n            d = this.options.dateFormat || this.dateFormat,\n            h;\n        if (c) var g = c(a);else if (\"string\" === typeof a) {\n          if (d) (c = this.dateFormats[d]) || (c = this.dateFormats[\"YYYY/mm/dd\"]), (h = a.match(c.regex)) && (g = c.parser(h));else for (b in this.dateFormats) {\n            if (c = this.dateFormats[b], h = a.match(c.regex)) {\n              this.dateFormat = b;\n              this.alternativeFormat = c.alternative;\n              g = c.parser(h);\n              break;\n            }\n          }\n          h || (h = Date.parse(a), \"object\" === typeof h && null !== h && h.getTime ? g = h.getTime() - 6E4 * h.getTimezoneOffset() : E(h) && (g = h - 6E4 * new Date(h).getTimezoneOffset()));\n        }\n        return g;\n      };\n\n      b.prototype.rowsToColumns = function (a) {\n        var c, b;\n\n        if (a) {\n          var d = [];\n          var h = a.length;\n\n          for (c = 0; c < h; c++) {\n            var g = a[c].length;\n\n            for (b = 0; b < g; b++) {\n              d[b] || (d[b] = []), d[b][c] = a[c][b];\n            }\n          }\n        }\n\n        return d;\n      };\n\n      b.prototype.getData = function () {\n        if (this.columns) return this.rowsToColumns(this.columns).slice(1);\n      };\n\n      b.prototype.parsed = function () {\n        if (this.options.parsed) return this.options.parsed.call(this, this.columns);\n      };\n\n      b.prototype.getFreeIndexes = function (a, c) {\n        var b,\n            d = [],\n            h = [];\n\n        for (b = 0; b < a; b += 1) {\n          d.push(!0);\n        }\n\n        for (a = 0; a < c.length; a += 1) {\n          var g = c[a].getReferencedColumnIndexes();\n\n          for (b = 0; b < g.length; b += 1) {\n            d[g[b]] = !1;\n          }\n        }\n\n        for (b = 0; b < d.length; b += 1) {\n          d[b] && h.push(b);\n        }\n\n        return h;\n      };\n\n      b.prototype.complete = function () {\n        var a = this.columns,\n            b,\n            f = this.options,\n            d,\n            h,\n            g = [];\n\n        if (f.complete || f.afterComplete) {\n          if (this.firstRowAsNames) for (d = 0; d < a.length; d++) {\n            a[d].name = a[d].shift();\n          }\n          var k = [];\n          var l = this.getFreeIndexes(a.length, this.valueCount.seriesBuilders);\n\n          for (d = 0; d < this.valueCount.seriesBuilders.length; d++) {\n            var e = this.valueCount.seriesBuilders[d];\n            e.populateColumns(l) && g.push(e);\n          }\n\n          for (; 0 < l.length;) {\n            e = new G();\n            e.addColumnReader(0, \"x\");\n            d = l.indexOf(0);\n            -1 !== d && l.splice(d, 1);\n\n            for (d = 0; d < this.valueCount.global; d++) {\n              e.addColumnReader(void 0, this.valueCount.globalPointArrayMap[d]);\n            }\n\n            e.populateColumns(l) && g.push(e);\n          }\n\n          0 < g.length && 0 < g[0].readers.length && (e = a[g[0].readers[0].columnIndex], \"undefined\" !== typeof e && (e.isDatetime ? b = \"datetime\" : e.isNumeric || (b = \"category\")));\n          if (\"category\" === b) for (d = 0; d < g.length; d++) {\n            for (e = g[d], l = 0; l < e.readers.length; l++) {\n              \"x\" === e.readers[l].configName && (e.readers[l].configName = \"name\");\n            }\n          }\n\n          for (d = 0; d < g.length; d++) {\n            e = g[d];\n            l = [];\n\n            for (h = 0; h < a[0].length; h++) {\n              l[h] = e.read(a, h);\n            }\n\n            k[d] = {\n              data: l\n            };\n            e.name && (k[d].name = e.name);\n            \"category\" === b && (k[d].turboThreshold = 0);\n          }\n\n          a = {\n            series: k\n          };\n          b && (a.xAxis = {\n            type: b\n          }, \"category\" === b && (a.xAxis.uniqueNames = !1));\n          f.complete && f.complete(a);\n          f.afterComplete && f.afterComplete(a);\n        }\n      };\n\n      b.prototype.update = function (a, b) {\n        var c = this.chart;\n        a && (a.afterComplete = function (a) {\n          a && (a.xAxis && c.xAxis[0] && a.xAxis.type === c.xAxis[0].options.type && delete a.xAxis, c.update(a, b, !0));\n        }, B(!0, c.options.data, a), this.init(c.options.data));\n      };\n\n      return b;\n    }();\n\n    v.data = function (b, a, c) {\n      return new v.Data(b, a, c);\n    };\n\n    b(H, \"init\", function (b) {\n      var a = this,\n          c = b.args[0] || {},\n          f = b.args[1];\n      c && c.data && !a.hasDataDef && (a.hasDataDef = !0, a.data = new v.Data(J(c.data, {\n        afterComplete: function afterComplete(b) {\n          var d;\n          if (Object.hasOwnProperty.call(c, \"series\")) if (\"object\" === typeof c.series) for (d = Math.max(c.series.length, b && b.series ? b.series.length : 0); d--;) {\n            var g = c.series[d] || {};\n            c.series[d] = B(g, b && b.series ? b.series[d] : {});\n          } else delete c.series;\n          c = B(b, c);\n          a.init(c, f);\n        }\n      }), c, a), b.preventDefault());\n    });\n\n    var G = function () {\n      function b() {\n        this.readers = [];\n        this.pointIsArray = !0;\n        this.name = void 0;\n      }\n\n      b.prototype.populateColumns = function (a) {\n        var b = !0;\n        this.readers.forEach(function (b) {\n          \"undefined\" === typeof b.columnIndex && (b.columnIndex = a.shift());\n        });\n        this.readers.forEach(function (a) {\n          \"undefined\" === typeof a.columnIndex && (b = !1);\n        });\n        return b;\n      };\n\n      b.prototype.read = function (a, b) {\n        var c = this.pointIsArray,\n            d = c ? [] : {};\n        this.readers.forEach(function (g) {\n          var f = a[g.columnIndex][b];\n          c ? d.push(f) : 0 < g.configName.indexOf(\".\") ? I.prototype.setNestedProperty(d, f, g.configName) : d[g.configName] = f;\n        });\n\n        if (\"undefined\" === typeof this.name && 2 <= this.readers.length) {\n          var h = this.getReferencedColumnIndexes();\n          2 <= h.length && (h.shift(), h.sort(function (a, b) {\n            return a - b;\n          }), this.name = a[h.shift()].name);\n        }\n\n        return d;\n      };\n\n      b.prototype.addColumnReader = function (a, b) {\n        this.readers.push({\n          columnIndex: a,\n          configName: b\n        });\n        \"x\" !== b && \"y\" !== b && \"undefined\" !== typeof b && (this.pointIsArray = !1);\n      };\n\n      b.prototype.getReferencedColumnIndexes = function () {\n        var a,\n            b = [];\n\n        for (a = 0; a < this.readers.length; a += 1) {\n          var f = this.readers[a];\n          \"undefined\" !== typeof f.columnIndex && b.push(f.columnIndex);\n        }\n\n        return b;\n      };\n\n      b.prototype.hasReader = function (a) {\n        var b;\n\n        for (b = 0; b < this.readers.length; b += 1) {\n          var f = this.readers[b];\n          if (f.configName === a) return !0;\n        }\n      };\n\n      return b;\n    }();\n\n    v.Data = q;\n    return v.Data;\n  });\n  q(b, \"masters/modules/data.src.js\", [], function () {});\n});","map":null,"metadata":{},"sourceType":"script"}