{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/views/Tasks/Tasks.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Link as MaterialLink, CircularProgress, FormGroup, FormControl, TextField, MenuItem } from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { PER_PAGE_OPTIONS, RECORD_PER_PAGE } from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddTasks from \"./TasksPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { taskList as _taskList, reduxLoad } from 'js/actions';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nam4core.useTheme(am4themes_animated);\nvar columns = [{\n  id: \"taskName\",\n  label: \"Task Name\"\n}, {\n  id: \"taskDescription\",\n  label: \"Task Description\"\n}, {\n  id: \"taskPriority\",\n  label: \"Task Priority\"\n}, {\n  id: \"taskStatus\",\n  label: \"Task Status\"\n}, {\n  id: \"createDate\",\n  label: \"Created Date\"\n}, {\n  id: \"\",\n  label: \"Action\"\n}];\nvar ref = React.createRef();\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    taskList: function taskList(projects) {\n      return dispatch(_taskList(projects));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    taskListArr: state.taskList,\n    projectListArr: state.projectList\n  };\n};\n\nvar TasksClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(TasksClass, _React$Component);\n\n  var _super = _createSuper(TasksClass);\n\n  function TasksClass(props) {\n    var _this;\n\n    _classCallCheck(this, TasksClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangePage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  page: newPage\n                }); // setPage(newPage);\n\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.validateField = function (fieldName, fieldValue) {\n      var fieldValidationErrors = _this.state.formErrors;\n      var startDateValid = _this.state.startDateValid;\n      var endDateValid = _this.state.endDateValid;\n\n      switch (fieldName) {\n        case \"startDate\":\n          startDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.startDate = !startDateValid ? enMsg.startDateRequiredMsg : \"\";\n          break;\n\n        case \"endDate\":\n          endDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.endDate = !endDateValid ? enMsg.endDateRequiredMsg : \"\";\n          break;\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        startDateValid: startDateValid,\n        endDateValid: endDateValid\n      }, _this.validateForm);\n    };\n\n    _this.dateUtility = new DateFnsUtils();\n    _this._isMounted = false;\n    var sortedTasks = _this.props.taskListArr ? _this.props.taskListArr.sort(function (a, b) {\n      return a.taskStatus > b.taskStatus ? 1 : -1;\n    }) : [];\n    _this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      reduxLoadFlag: false,\n      openProjects: false,\n      taskListArr: sortedTasks,\n      originalTaskListArr: [],\n      projectTaskList: [],\n      projectList: _this.props.projectListArr ? _this.props.projectListArr : [],\n      projectId: \"\",\n      projectInfo: {},\n      taskId: \"\",\n      search: \"\",\n      taskStatus: \"All\",\n      priorityChartOptions: {}\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_this));\n    _this.handleChangeRowsPerPage = _this.handleChangeRowsPerPage.bind(_assertThisInitialized(_this));\n    _this.confirmModalClose = _this.confirmModalClose.bind(_assertThisInitialized(_this));\n    _this.deleteTask = _this.deleteTask.bind(_assertThisInitialized(_this));\n    _this.filterTasks = _this.filterTasks.bind(_assertThisInitialized(_this));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TasksClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = 'Tasks';\n      var projectList = this.state.projectList;\n      var taskListArr = this.state.taskListArr;\n\n      if (this.props.location.state && projectList && projectList.length) {\n        console.log(\"location... \", this.props.location.state);\n        var projectInfo = projectList.filter(function (pList) {\n          if (pList.uid == _this2.props.location.state) {\n            return pList;\n          }\n        });\n        var projectTasks = taskListArr.filter(function (tList) {\n          if (tList.projectId == _this2.props.location.state) {\n            return tList;\n          }\n        });\n        this.setState({\n          projectId: this.props.location.state,\n          projectTaskList: projectTasks,\n          originalTaskListArr: projectTasks,\n          projectInfo: projectInfo && projectInfo.length ? projectInfo[0] : {}\n        });\n      } else {\n        var showNotification = {\n          title: 'Invalid Project',\n          message: 'Project not found.',\n          type: \"danger\"\n        };\n        userService.showNotification(showNotification);\n        setTimeout(function () {\n          window.location.replace(basePath + baseRoutes.records.path);\n        }, 2000);\n      }\n\n      getTaskPriorityChart();\n    }\n  }, {\n    key: \"getTaskPriorityChart\",\n    value: function getTaskPriorityChart() {\n      var priorityChartOptions = {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false,\n          type: 'pie'\n        },\n        title: {\n          text: 'Tasks Priorities Chart'\n        },\n        tooltip: {\n          pointFormat: '{series.taskName}: <b>{point.percentage:.1f}%</b>'\n        },\n        accessibility: {\n          point: {\n            valueSuffix: '%'\n          }\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.taskName}</b>: {point.percentage:.1f} %'\n            }\n          }\n        },\n        series: this.state.originalTaskListArr\n      };\n      this.setState({\n        priorityChartOptions: priorityChartOptions\n      });\n    }\n  }, {\n    key: \"getTaskStatusChart\",\n    value: function getTaskStatusChart() {}\n  }, {\n    key: \"getProjectTasks\",\n    value: function getProjectTasks() {\n      var projectId = this.state.projectId;\n      var taskListArr = this.state.taskListArr;\n      var projectTasks = taskListArr.filter(function (tList) {\n        if (tList.projectId == projectId) {\n          return tList;\n        }\n      });\n      this.setState({\n        projectTaskList: projectTasks,\n        originalTaskListArr: projectTasks\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(oldProps) {\n      var _this3 = this;\n\n      if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n        var taskListArr = this.props.taskListArr ? this.props.taskListArr.sort(function (a, b) {\n          return a.taskStatus > b.taskStatus ? 1 : -1;\n        }) : [];\n        this.setState({\n          taskListArr: taskListArr,\n          reduxLoadFlag: this.props.reduxLoadFlag\n        }, function () {\n          return _this3.getProjectTasks();\n        });\n      }\n    }\n  }, {\n    key: \"handleChangeRowsPerPage\",\n    value: function handleChangeRowsPerPage(event) {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.startDateValid && this.state.endDateValid;\n    }\n  }, {\n    key: \"openProjects\",\n    value: function openProjects() {\n      this.setState({\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"confirmModalClose\",\n    value: function confirmModalClose() {\n      var _this4 = this;\n\n      this.setState({\n        taskId: \"\",\n        openProjects: false,\n        taskListArr: this.props.taskListArr ? this.props.taskListArr.sort(function (a, b) {\n          return a.taskStatus > b.taskStatus ? 1 : -1;\n        }) : []\n      }, function () {\n        return _this4.getProjectTasks();\n      });\n    }\n  }, {\n    key: \"editTask\",\n    value: function editTask(taskId) {\n      this.setState({\n        taskId: taskId,\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(taskId) {\n      var taskListArr = this.state.taskListArr;\n      var projectTaskList = this.state.projectTaskList;\n      var updatedTaskList = taskListArr.filter(function (tList) {\n        return tList.uid == taskId ? null : tList;\n      });\n      this.props.taskList(updatedTaskList);\n      var updatedPTaskList = projectTaskList.filter(function (tList) {\n        return tList.uid == taskId ? null : tList;\n      });\n      this.setState({\n        projectTaskList: updatedPTaskList,\n        taskListArr: updatedTaskList\n      });\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var value = e.target.value;\n      this.setState({\n        search: value\n      });\n    }\n  }, {\n    key: \"filterTasks\",\n    value: function filterTasks() {\n      var taskListArr = this.state.originalTaskListArr;\n      var searchRes = this.state.search;\n      var taskStatus = this.state.taskStatus;\n\n      if (!searchRes) {\n        if (taskStatus == \"all\") {\n          this.setState({\n            projectTaskList: taskListArr\n          });\n        } else {\n          var updatedFTasks = taskListArr.filter(function (pList) {\n            if (pList.taskStatus == taskStatus) {\n              return pList;\n            }\n          });\n          this.setState({\n            projectTaskList: updatedFTasks\n          });\n        }\n      } else {\n        if (taskStatus == \"all\") {\n          var updatedTasks = taskListArr.filter(function (pList) {\n            if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskDescription.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n              return pList;\n            }\n          });\n          this.setState({\n            projectTaskList: updatedTasks\n          });\n        } else {\n          var _updatedFTasks = taskListArr.filter(function (pList) {\n            if (pList.taskStatus == taskStatus) {\n              return pList;\n            }\n          });\n\n          var _updatedTasks = _updatedFTasks.filter(function (pList) {\n            if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskDescription.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n              return pList;\n            }\n          });\n\n          this.setState({\n            projectTaskList: _updatedTasks\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleTaskChange\",\n    value: function handleTaskChange(value) {\n      var originAaskListArr = this.state.originalTaskListArr;\n      var taskListArr = this.state.projectTaskList;\n      var searchRes = this.state.search;\n      this.setState({\n        taskStatus: value\n      });\n\n      if (searchRes) {\n        var updatedTasks = originAaskListArr.filter(function (pList) {\n          if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskDescription.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n            return pList;\n          }\n        });\n\n        if (value == \"all\") {\n          this.setState({\n            projectTaskList: updatedTasks.sort(function (a, b) {\n              return a.taskStatus > b.taskStatus ? 1 : -1;\n            })\n          });\n        } else {\n          var updatedFTasks = updatedTasks.filter(function (pList) {\n            if (pList.taskStatus == value) {\n              return pList;\n            }\n          });\n          this.setState({\n            projectTaskList: updatedFTasks\n          });\n        }\n      } else {\n        if (value == \"all\") {\n          this.setState({\n            projectTaskList: originAaskListArr.sort(function (a, b) {\n              return a.taskStatus > b.taskStatus ? 1 : -1;\n            })\n          });\n        } else {\n          var _updatedTasks2 = originAaskListArr.filter(function (pList) {\n            if (pList.taskStatus == value) {\n              return pList;\n            }\n          });\n\n          this.setState({\n            projectTaskList: _updatedTasks2\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          search = _this$state.search,\n          openProjects = _this$state.openProjects,\n          taskListArr = _this$state.taskListArr,\n          projectInfo = _this$state.projectInfo,\n          projectId = _this$state.projectId,\n          projectTaskList = _this$state.projectTaskList,\n          taskId = _this$state.taskId;\n      console.log(projectTaskList, taskListArr, search);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"box-with-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AddTasks, {\n        taskId: taskId,\n        projectId: projectId,\n        openProjects: openProjects,\n        confirmModalClose: this.confirmModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormHead white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }\n      }, \"Project Details\"), projectInfo.uid ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"white-text-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 33\n        }\n      }, \"Project Name: \", projectInfo.projectName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"white-text-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 33\n        }\n      }, \"Description: \", projectInfo.projectDesc), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"white-text-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 33\n        }\n      }, \"Created Date: \", new Date(projectInfo.createDate).toDateString())) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }\n      }, \"Project info not found....\"), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        options: priorityChartOptions,\n        className: \"chart-css\",\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        containerProps: {\n          style: {\n            height: \"500px\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        options: priorityChartOptions,\n        className: \"chart-css\",\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        containerProps: {\n          style: {\n            height: \"500px\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }\n      }, projectInfo && projectInfo.uid ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this5.openProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 41\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 49\n        }\n      }), \"Add Tasks\"))) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"full-width setting_cards p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-input-box\",\n        label: \"Search\",\n        placeholder: \"Search\",\n        text: \"text\",\n        name: \"search\",\n        variant: \"filled\",\n        value: search,\n        onChange: function onChange(e) {\n          return _this5.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this5.filterTasks();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 33\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 41\n        }\n      }), \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: (classes.root, this.cust_table_cover),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: (classes.tableWrapper, this.cust_table),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-respopnsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        className: this.tableh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 57\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 57\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 57\n        }\n      }, \"Priority\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        name: \"Task Status\",\n        id: \"\",\n        className: \"full-width-select\",\n        value: this.state.taskStatus,\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(e) {\n          return _this5.handleTaskChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 65\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 65\n        }\n      }, \"New\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"progress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 65\n        }\n      }, \"Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"done\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 65\n        }\n      }, \"Done\"))), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 57\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 57\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n        key: \"TableBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 49\n        }\n      }, this.state.projectTaskList && this.state.projectTaskList.length ? this.state.projectTaskList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (row, key) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: key,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 69\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 73\n          }\n        }, row.taskName), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 73\n          }\n        }, row.taskDescription), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 73\n          }\n        }, row.taskPriority), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 73\n          }\n        }, row.taskStatus), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 73\n          }\n        }, new Date(row.createDate).toDateString()), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-pencil\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this5.editTask(row.uid);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 81\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-trash\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this5.deleteTask(row.uid);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 81\n          }\n        }))));\n      }) : /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        colspan: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"not-found-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 65\n        }\n      }, \"No tasks available...\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: PER_PAGE_OPTIONS,\n        component: \"div\",\n        count: this.state.projectTaskList && this.state.projectTaskList.length ? this.state.projectTaskList.length : 0,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"previous page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"next page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return TasksClass;\n}(React.Component);\n\nTasksClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar Tasks = connect(mapStateToProps, mapDispatchToProps)(TasksClass); // export default Form;\n\nexport default withStyles(dashboardStyle)(Tasks);","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/views/Tasks/Tasks.jsx"],"names":["React","PropTypes","withStyles","GridContainer","enMsg","Button","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Link","MaterialLink","CircularProgress","FormGroup","FormControl","TextField","MenuItem","CardBody","dashboardStyle","userService","connect","moment","PER_PAGE_OPTIONS","RECORD_PER_PAGE","am4core","am4themes_animated","MuiPickersUtilsProvider","KeyboardDatePicker","FormErrors","DateFnsUtils","AddTasks","basePath","baseRoutes","Icon","taskList","reduxLoad","HighchartsReact","Highcharts","useTheme","columns","id","label","ref","createRef","mapDispatchToProps","dispatch","projects","mapStateToProps","state","userInfo","timestamp","campaings","reduxLoadFlag","taskListArr","projectListArr","projectList","TasksClass","props","handleChangePage","event","newPage","setState","page","validateField","fieldName","fieldValue","fieldValidationErrors","formErrors","startDateValid","endDateValid","startDate","startDateRequiredMsg","endDate","endDateRequiredMsg","validateForm","dateUtility","_isMounted","sortedTasks","sort","a","b","taskStatus","value","loading","rowsPerPageT","rowsPerPage","openProjects","originalTaskListArr","projectTaskList","projectId","projectInfo","taskId","search","priorityChartOptions","bind","handleChangeRowsPerPage","confirmModalClose","deleteTask","filterTasks","handleInput","document","title","location","length","console","log","filter","pList","uid","projectTasks","tList","showNotification","message","type","setTimeout","window","replace","records","path","getTaskPriorityChart","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","series","oldProps","undefined","getProjectTasks","target","updatedTaskList","updatedPTaskList","e","searchRes","updatedFTasks","updatedTasks","taskName","toLowerCase","includes","taskDescription","taskPriority","originAaskListArr","classes","projectName","projectDesc","Date","createDate","toDateString","width","height","style","root","cust_table_cover","tableWrapper","cust_table","tableh","handleTaskChange","slice","map","row","key","color","editTask","Component","propTypes","object","isRequired","Tasks"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport {\n    Button,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TablePagination,\n    TableRow,\n    Link as MaterialLink,\n    CircularProgress,\n    FormGroup,\n    FormControl, TextField, MenuItem\n} from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport {\n} from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n    PER_PAGE_OPTIONS,\n    RECORD_PER_PAGE,\n} from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { FormErrors } from \"components/Login/FormErrors\"\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddTasks from \"./TasksPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { taskList, reduxLoad } from 'js/actions';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\n\nam4core.useTheme(am4themes_animated);\nconst columns = [\n    { id: \"taskName\", label: \"Task Name\" },\n    { id: \"taskDescription\", label: \"Task Description\" },\n    { id: \"taskPriority\", label: \"Task Priority\" },\n    { id: \"taskStatus\", label: \"Task Status\" },\n    { id: \"createDate\", label: \"Created Date\" },\n    { id: \"\", label: \"Action\" },\n];\nconst ref = React.createRef();\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // addArticle: article => dispatch(addArticle(article))\n        taskList: projects => dispatch(taskList(projects))\n    };\n}\nconst mapStateToProps = state => {\n    return {\n        userInfo: state.userInfo,\n        timestamp: state.timestamp,\n        campaings: state.campaings,\n        reduxLoadFlag: state.reduxLoadFlag,\n        taskListArr: state.taskList,\n        projectListArr: state.projectList,\n    };\n};\nclass TasksClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dateUtility = new DateFnsUtils();\n        this._isMounted = false;\n        const sortedTasks = this.props.taskListArr ? this.props.taskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1) : [];\n        this.state = {\n            value: 0,\n            page: 0,\n            loading: false,\n            rowsPerPageT: RECORD_PER_PAGE,\n            rowsPerPage: RECORD_PER_PAGE,\n            reduxLoadFlag: false,\n            openProjects: false,\n            taskListArr: sortedTasks,\n            originalTaskListArr: [],\n            projectTaskList: [],\n            projectList: this.props.projectListArr ? this.props.projectListArr : [],\n            projectId: \"\",\n            projectInfo: {},\n            taskId: \"\",\n            search: \"\",\n            taskStatus: \"All\",\n            priorityChartOptions: {},\n        };\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.confirmModalClose = this.confirmModalClose.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.filterTasks = this.filterTasks.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = 'Tasks';\n        const projectList = this.state.projectList;\n        const taskListArr = this.state.taskListArr;\n        if (this.props.location.state && projectList && projectList.length) {\n            console.log(\"location... \", this.props.location.state);\n            const projectInfo = projectList.filter((pList) => {\n                if (pList.uid == this.props.location.state) {\n                    return pList;\n                }\n            })\n            const projectTasks = taskListArr.filter((tList) => {\n                if (tList.projectId == this.props.location.state) {\n                    return tList;\n                }\n            })\n            this.setState({\n                projectId: this.props.location.state,\n                projectTaskList: projectTasks,\n                originalTaskListArr: projectTasks,\n                projectInfo: projectInfo && projectInfo.length ? projectInfo[0] : {},\n            })\n        } else {\n            const showNotification = {\n                title: 'Invalid Project',\n                message: 'Project not found.',\n                type: \"danger\",\n            }\n            userService.showNotification(showNotification);\n            setTimeout(function () {\n                window.location.replace(basePath + baseRoutes.records.path);\n            }, 2000);\n        }\n        getTaskPriorityChart();\n    }\n    getTaskPriorityChart() {\n        let priorityChartOptions = {\n            chart: {\n                plotBackgroundColor: null,\n                plotBorderWidth: null,\n                plotShadow: false,\n                type: 'pie'\n            },\n            title: {\n                text: 'Tasks Priorities Chart'\n            },\n            tooltip: {\n                pointFormat: '{series.taskName}: <b>{point.percentage:.1f}%</b>'\n            },\n            accessibility: {\n                point: {\n                    valueSuffix: '%'\n                }\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        format: '<b>{point.taskName}</b>: {point.percentage:.1f} %'\n                    }\n                }\n            },\n            series: this.state.originalTaskListArr,\n        };\n        this.setState({ priorityChartOptions: priorityChartOptions,})\n    }\n    getTaskStatusChart() { }\n    getProjectTasks() {\n        const projectId = this.state.projectId;\n        const taskListArr = this.state.taskListArr;\n        const projectTasks = taskListArr.filter((tList) => {\n            if (tList.projectId == projectId) {\n                return tList;\n            }\n        })\n        this.setState({\n            projectTaskList: projectTasks,\n            originalTaskListArr: projectTasks,\n        })\n    }\n    componentDidUpdate(oldProps) {\n        if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n            let taskListArr = this.props.taskListArr ? this.props.taskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1) : [];\n            this.setState({\n                taskListArr: taskListArr,\n                reduxLoadFlag: this.props.reduxLoadFlag,\n            }, () => this.getProjectTasks())\n        }\n    }\n    handleChangePage = async (event, newPage) => {\n        this.setState({\n            page: newPage\n        });\n        // setPage(newPage);\n    };\n    handleChangeRowsPerPage(event) {\n        this.setState({\n            rowsPerPage: +event.target.value,\n            page: 0\n        });\n    }\n    validateField = (fieldName, fieldValue) => {\n        let fieldValidationErrors = this.state.formErrors;\n        let startDateValid = this.state.startDateValid;\n        let endDateValid = this.state.endDateValid;\n\n        switch (fieldName) {\n            case \"startDate\":\n                startDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n                fieldValidationErrors.startDate = !startDateValid\n                    ? enMsg.startDateRequiredMsg\n                    : \"\";\n                break;\n            case \"endDate\":\n                endDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n                fieldValidationErrors.endDate = !endDateValid\n                    ? enMsg.endDateRequiredMsg\n                    : \"\";\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            startDateValid: startDateValid,\n            endDateValid: endDateValid,\n        }, this.validateForm);\n    }\n    validateForm() {\n        return (\n            this.state.startDateValid &&\n            this.state.endDateValid\n        )\n    }\n    openProjects() {\n        this.setState({ openProjects: true })\n    }\n    confirmModalClose() {\n        this.setState({\n            taskId: \"\",\n            openProjects: false,\n            taskListArr: this.props.taskListArr ? this.props.taskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1) : [],\n        }, () => this.getProjectTasks())\n    }\n    editTask(taskId) {\n        this.setState({\n            taskId: taskId,\n            openProjects: true,\n        })\n    }\n    deleteTask(taskId) {\n        const taskListArr = this.state.taskListArr;\n        const projectTaskList = this.state.projectTaskList;\n        const updatedTaskList = taskListArr.filter((tList) => {\n            return tList.uid == taskId ? null : tList;\n        })\n        this.props.taskList(updatedTaskList);\n        const updatedPTaskList = projectTaskList.filter((tList) => {\n            return tList.uid == taskId ? null : tList;\n        })\n        this.setState({\n            projectTaskList: updatedPTaskList,\n            taskListArr: updatedTaskList,\n        })\n    }\n    handleInput(e) {\n        const { value } = e.target;\n        this.setState({\n            search: value,\n        })\n    }\n    filterTasks() {\n        const taskListArr = this.state.originalTaskListArr;\n        const searchRes = this.state.search;\n        const taskStatus = this.state.taskStatus;\n        if (!searchRes) {\n            if (taskStatus == \"all\") {\n                this.setState({\n                    projectTaskList: taskListArr,\n                })\n            } else {\n                const updatedFTasks = taskListArr.filter((pList) => {\n                    if (pList.taskStatus == taskStatus) {\n                        return pList;\n                    }\n                })\n                this.setState({\n                    projectTaskList: updatedFTasks,\n                })\n            }\n        } else {\n            if (taskStatus == \"all\") {\n                const updatedTasks = taskListArr.filter((pList) => {\n                    if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskDescription.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n                        return pList;\n                    }\n                })\n                this.setState({\n                    projectTaskList: updatedTasks\n                })\n            } else {\n                const updatedFTasks = taskListArr.filter((pList) => {\n                    if (pList.taskStatus == taskStatus) {\n                        return pList;\n                    }\n                })\n                const updatedTasks = updatedFTasks.filter((pList) => {\n                    if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskDescription.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n                        return pList;\n                    }\n                })\n                this.setState({\n                    projectTaskList: updatedTasks,\n                })\n            }\n        }\n    }\n    handleTaskChange(value) {\n        const originAaskListArr = this.state.originalTaskListArr;\n        const taskListArr = this.state.projectTaskList;\n        const searchRes = this.state.search;\n        this.setState({\n            taskStatus: value,\n        })\n        if (searchRes) {\n            const updatedTasks = originAaskListArr.filter((pList) => {\n                if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskDescription.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n                    return pList;\n                }\n            })\n            if (value == \"all\") {\n                this.setState({\n                    projectTaskList: updatedTasks.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1),\n                })\n            } else {\n                const updatedFTasks = updatedTasks.filter((pList) => {\n                    if (pList.taskStatus == value) {\n                        return pList;\n                    }\n                })\n                this.setState({\n                    projectTaskList: updatedFTasks,\n                })\n            }\n        } else {\n            if (value == \"all\") {\n                this.setState({\n                    projectTaskList: originAaskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1),\n                })\n            } else {\n                const updatedTasks = originAaskListArr.filter((pList) => {\n                    if (pList.taskStatus == value) {\n                        return pList;\n                    }\n                })\n                this.setState({\n                    projectTaskList: updatedTasks,\n                })\n            }\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        const {\n            search, openProjects, taskListArr, projectInfo, projectId, projectTaskList, taskId\n        } = this.state;\n        console.log(projectTaskList, taskListArr, search)\n        return (\n            <div className=\"recordFormRow\">\n                <span className=\"box-with-bg\">\n                    <AddTasks taskId={taskId} projectId={projectId} openProjects={openProjects} confirmModalClose={this.confirmModalClose} />\n                    <div className=\"recordFormHead white-text\">Project Details</div>\n                    {\n                        projectInfo.uid\n                            ?\n                            <div>\n                                <p className=\"white-text-pad\">Project Name: {projectInfo.projectName}</p>\n                                <p className=\"white-text-pad\">Description: {projectInfo.projectDesc}</p>\n                                <p className=\"white-text-pad\">Created Date: {new Date(projectInfo.createDate).toDateString()}</p>\n                            </div>\n                            :\n                            <div>Project info not found....</div>\n                    }\n                    <GridContainer>\n                        <GridItem xs={12} sm={6}>\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={priorityChartOptions}\n                                className=\"chart-css\"\n                                style={{ width: \"100%\", height: \"500px\" }}\n                                containerProps={{ style: { height: \"500px\" } }}\n                            />\n                        </GridItem>\n                        <GridItem xs={12} sm={6}>\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={priorityChartOptions}\n                                className=\"chart-css\"\n                                style={{ width: \"100%\", height: \"500px\" }}\n                                containerProps={{ style: { height: \"500px\" } }}\n                            />\n                        </GridItem>\n                    </GridContainer>\n                    <div className=\"full-width text-right\">\n                        {\n                            projectInfo && projectInfo.uid\n                                ?\n                                <div className=\"recordFormCol widthauto\">\n                                    <Button\n                                        className=\"client newbtn greenbtn\"\n                                        type=\"button\"\n                                        onClick={() => this.openProjects()}\n                                    >\n                                        <p>\n                                            {this.state.loading && (\n                                                <CircularProgress\n                                                    size={24}\n                                                    className=\"buttonProgress\"\n                                                    color=\"secondary\"\n                                                />\n                                            )}\n                                            Add Tasks\n                                        </p>\n                                    </Button>\n                                </div>\n                                : null\n                        }\n                        <div className=\"recordFormCol widthauto\">\n                            <FormControl >\n                                <FormGroup className=\"full-width setting_cards p-10\">\n                                    <input\n                                        className=\"custom-input-box\"\n                                        label=\"Search\"\n                                        placeholder=\"Search\"\n                                        text=\"text\"\n                                        name=\"search\"\n                                        variant=\"filled\"\n                                        value={search}\n                                        onChange={e => this.handleInput(e)}\n                                    />\n                                </FormGroup>\n                            </FormControl>\n                        </div>\n                        <div className=\"recordFormCol widthauto\">\n                            <Button\n                                className=\"client newbtn greenbtn\"\n                                type=\"button\"\n                                onClick={() => this.filterTasks()}\n                            >\n                                <p>\n                                    {this.state.loading && (\n                                        <CircularProgress\n                                            size={24}\n                                            className=\"buttonProgress\"\n                                            color=\"secondary\"\n                                        />\n                                    )}\n                                    Search\n                                </p>\n                            </Button>\n                        </div>\n                        <div className=\"recordFormCol widthauto\">\n                        </div>\n                    </div>\n                    <div className=\"full-width\">\n                        <GridContainer>\n                            <CardBody>\n                                <Paper className={(classes.root, this.cust_table_cover)}>\n                                    <div className={(classes.tableWrapper, this.cust_table)}>\n                                        <div className=\"table-respopnsive\">\n                                            <Table>\n                                                <TableHead className={this.tableh}>\n                                                    <TableRow>\n                                                        <TableCell\n                                                        >\n                                                            Name\n                                                        </TableCell>\n                                                        <TableCell\n                                                        >\n                                                            Description\n                                                        </TableCell>\n                                                        <TableCell\n                                                        >\n                                                            Priority\n                                                        </TableCell>\n                                                        <TableCell\n                                                        >\n                                                            <select\n                                                                name=\"Task Status\"\n                                                                id=\"\"\n                                                                className=\"full-width-select\"\n                                                                value={this.state.taskStatus}\n                                                                data-validators=\"isRequired,isAlpha\"\n                                                                onChange={e => this.handleTaskChange(e.target.value)}\n                                                            >\n                                                                <option value=\"all\">All</option>\n                                                                <option value=\"new\">New</option>\n                                                                <option value=\"progress\">Progress</option>\n                                                                <option value=\"done\">Done</option>\n                                                            </select>\n                                                        </TableCell>\n                                                        <TableCell\n                                                        >\n                                                            Date\n                                                        </TableCell>\n                                                        <TableCell\n                                                        >\n                                                            Action\n                                                        </TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody key=\"TableBody\">\n                                                    {this.state.projectTaskList && this.state.projectTaskList.length\n                                                        ? this.state.projectTaskList\n                                                            .slice(\n                                                                this.state.page * this.state.rowsPerPage,\n                                                                this.state.page * this.state.rowsPerPage +\n                                                                this.state.rowsPerPage\n                                                            )\n                                                            .map((row, key) => {\n                                                                return (\n                                                                    <TableRow\n                                                                        hover\n                                                                        role=\"checkbox\"\n                                                                        tabIndex={-1}\n                                                                        key={key}\n                                                                    >\n                                                                        <TableCell>{row.taskName}</TableCell>\n                                                                        <TableCell>{row.taskDescription}</TableCell>\n                                                                        <TableCell>{row.taskPriority}</TableCell>\n                                                                        <TableCell>{row.taskStatus}</TableCell>\n                                                                        <TableCell>{new Date(row.createDate).toDateString()}</TableCell>\n                                                                        <TableCell>\n                                                                            <span className=\"edit-action\">\n                                                                                <Icon className=\"fa fa-pencil\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.editTask(row.uid)} />\n                                                                            </span>\n                                                                            <span className=\"edit-action\">\n                                                                                <Icon className=\"fa fa-trash\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.deleteTask(row.uid)} />\n                                                                            </span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                );\n                                                            })\n                                                        :\n                                                        <TableRow>\n                                                            <TableCell colspan='7'>\n                                                                <div className=\"not-found-text\">No tasks available...</div>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    }\n                                                </TableBody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                    <TablePagination\n                                        rowsPerPageOptions={PER_PAGE_OPTIONS}\n                                        component=\"div\"\n                                        count={\n                                            this.state.projectTaskList &&\n                                                this.state.projectTaskList.length\n                                                ? this.state.projectTaskList.length\n                                                : 0\n                                        }\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        backIconButtonProps={{\n                                            \"aria-label\": \"previous page\"\n                                        }}\n                                        nextIconButtonProps={{\n                                            \"aria-label\": \"next page\"\n                                        }}\n                                        onChangePage={this.handleChangePage}\n                                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                    />\n                                </Paper>\n                            </CardBody>\n                        </GridContainer>\n                    </div>\n                </span>\n            </div>\n        );\n    }\n}\n\nTasksClass.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst Tasks = connect(\n    mapStateToProps, mapDispatchToProps\n)(TasksClass);\n\n// export default Form;\nexport default withStyles(dashboardStyle)(Tasks);"]},"metadata":{},"sourceType":"module"}