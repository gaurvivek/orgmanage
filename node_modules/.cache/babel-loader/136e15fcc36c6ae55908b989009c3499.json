{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/views/Records/Records.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Link as MaterialLink, CircularProgress, FormGroup, FormControl, TextField } from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { PER_PAGE_OPTIONS, RECORD_PER_PAGE } from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from \"react-router-dom\";\nimport { empList as _empList, reduxLoad } from 'js/actions';\nam4core.useTheme(am4themes_animated);\nvar ref = React.createRef();\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    empList: function empList(projects) {\n      return dispatch(_empList(projects));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    empListArr: state.empList\n  };\n};\n\nvar RecordClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(RecordClass, _React$Component);\n\n  var _super = _createSuper(RecordClass);\n\n  function RecordClass(props) {\n    var _this;\n\n    _classCallCheck(this, RecordClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangePage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  page: newPage\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.dateUtility = new DateFnsUtils();\n    _this._isMounted = false;\n    _this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      reduxLoadFlag: false,\n      openProjects: false,\n      empListArr: _this.props.empListArr ? _this.props.empListArr : [],\n      projectId: \"\",\n      search: \"\"\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_this));\n    _this.handleChangeRowsPerPage = _this.handleChangeRowsPerPage.bind(_assertThisInitialized(_this));\n    _this.confirmModalClose = _this.confirmModalClose.bind(_assertThisInitialized(_this));\n    _this.filterEmps = _this.filterEmps.bind(_assertThisInitialized(_this));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RecordClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Employees';\n    }\n  }, {\n    key: \"handleChangeRowsPerPage\",\n    value: function handleChangeRowsPerPage(event) {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var value = e.target.value;\n      this.setState({\n        search: value\n      });\n    }\n  }, {\n    key: \"filterEmps\",\n    value: function filterEmps() {\n      var allEmp = this.props.empListArr;\n      var searchRes = this.state.search;\n\n      if (!searchRes) {\n        this.setState({\n          empListArr: allEmp\n        });\n        return false;\n      }\n\n      var updatedEmps = allEmp.filter(function (pList) {\n        if (pList.name.toLowerCase().includes(searchRes.toLowerCase()) || pList.email.toLowerCase().includes(searchRes.toLowerCase()) || pList.phoneNo.includes(searchRes.toLowerCase()) || pList.age.includes(searchRes.toLowerCase()) || pList.gender.toLowerCase().includes(searchRes.toLowerCase())) {\n          return pList;\n        }\n      });\n      this.setState({\n        empListArr: updatedEmps\n      });\n    }\n  }, {\n    key: \"openProjects\",\n    value: function openProjects() {\n      this.setState({\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"confirmModalClose\",\n    value: function confirmModalClose() {\n      this.setState({\n        projectId: \"\",\n        openProjects: false,\n        empListArr: this.props.empListArr\n      });\n    }\n  }, {\n    key: \"editEmps\",\n    value: function editEmps(empId) {\n      this.setState({\n        empId: empId,\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"deleteEmp\",\n    value: function deleteEmp(empId) {\n      var empListArr = this.state.empListArr;\n      var updatedEmpList = empListArr.filter(function (tList) {\n        return tList.id == empId ? null : tList;\n      });\n      this.props.empList(updatedEmpList);\n      this.setState({\n        empListArr: updatedEmpList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          openProjects = _this$state.openProjects,\n          empListArr = _this$state.empListArr,\n          empId = _this$state.empId,\n          search = _this$state.search;\n      console.log(search);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"box-with-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddProject, {\n        empId: empId,\n        openProjects: openProjects,\n        confirmModalClose: this.confirmModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormHead white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, \"Employees\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.openProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }), \"Add Employee\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"full-width setting_cards p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-input-box\",\n        label: \"Search\",\n        placeholder: \"Search\",\n        text: \"text\",\n        name: \"search\",\n        variant: \"filled\",\n        value: search,\n        onChange: function onChange(e) {\n          return _this2.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.filterEmps();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }), \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: (classes.root, this.cust_table_cover),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: (classes.tableWrapper, this.cust_table),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-respopnsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        className: this.tableh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }\n      }, \"Age\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }, \"Gender\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n        key: \"TableBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, this.state.empListArr.length && this.state.empListArr.length ? this.state.empListArr.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (row, key) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 39\n          }\n        }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 39\n          }\n        }, row.email), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 39\n          }\n        }, row.phoneNo), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 39\n          }\n        }, row.age), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 39\n          }\n        }, row.gender), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 39\n          }\n        }, new Date(row.createDate).toDateString()), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-pencil\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this2.editEmps(row.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 43\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-trash\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this2.deleteEmp(row.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 43\n          }\n        }))));\n      }) : /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        colspan: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"not-found-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 35\n        }\n      }, \"No projects available...\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: PER_PAGE_OPTIONS,\n        component: \"div\",\n        count: this.state.empListArr.length && this.state.empListArr.length ? this.state.empListArr.length : 0,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"previous page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"next page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return RecordClass;\n}(React.Component);\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar Record = connect(mapStateToProps, mapDispatchToProps)(RecordClass); // export default Form;\n\nexport default withStyles(dashboardStyle)(Record);","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/views/Records/Records.jsx"],"names":["React","PropTypes","withStyles","GridContainer","enMsg","Button","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Link","MaterialLink","CircularProgress","FormGroup","FormControl","TextField","CardBody","dashboardStyle","userService","connect","moment","PER_PAGE_OPTIONS","RECORD_PER_PAGE","am4core","am4themes_animated","MuiPickersUtilsProvider","KeyboardDatePicker","FormErrors","DateFnsUtils","AddProject","basePath","baseRoutes","Icon","empList","reduxLoad","useTheme","ref","createRef","mapDispatchToProps","dispatch","projects","mapStateToProps","state","timestamp","campaings","reduxLoadFlag","empListArr","RecordClass","props","handleChangePage","event","newPage","setState","page","dateUtility","_isMounted","value","loading","rowsPerPageT","rowsPerPage","timeStampVal","Date","toLocaleTimeString","openProjects","projectId","search","bind","handleChangeRowsPerPage","confirmModalClose","filterEmps","handleInput","document","title","target","e","allEmp","searchRes","updatedEmps","filter","pList","name","toLowerCase","includes","email","phoneNo","age","gender","empId","updatedEmpList","tList","id","classes","console","log","root","cust_table_cover","tableWrapper","cust_table","tableh","length","slice","map","row","key","createDate","toDateString","color","editEmps","deleteEmp","Component","propTypes","object","isRequired","Record"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Link as MaterialLink,\n  CircularProgress,\n  FormGroup,\n  FormControl, TextField\n} from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport {\n} from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  PER_PAGE_OPTIONS,\n  RECORD_PER_PAGE,\n} from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { FormErrors } from \"components/Login/FormErrors\"\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\"\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from \"react-router-dom\";\nimport { empList, reduxLoad } from 'js/actions';\n\nam4core.useTheme(am4themes_animated);\nconst ref = React.createRef();\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    empList: projects => dispatch(empList(projects))\n  };\n}\nconst mapStateToProps = state => {\n  return {\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    empListArr: state.empList,\n  };\n};\nclass RecordClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateUtility = new DateFnsUtils();\n    this._isMounted = false;\n    this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      reduxLoadFlag: false,\n      openProjects: false,\n      empListArr: this.props.empListArr ? this.props.empListArr : [],\n      projectId: \"\",\n      search: \"\",\n    };\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n    this.confirmModalClose = this.confirmModalClose.bind(this);\n    this.filterEmps = this.filterEmps.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'Employees';\n  }\n  handleChangePage = async (event, newPage) => {\n    this.setState({\n      page: newPage\n    });\n  };\n  handleChangeRowsPerPage(event) {\n    this.setState({\n      rowsPerPage: +event.target.value,\n      page: 0\n    });\n  }\n  handleInput(e) {\n    const { value } = e.target;\n    this.setState({\n      search: value,\n    })\n  }\n  filterEmps() {\n    const allEmp = this.props.empListArr;\n    const searchRes = this.state.search;\n    if (!searchRes) {\n      this.setState({\n        empListArr: allEmp\n      })\n      return false;\n    }\n    const updatedEmps = allEmp.filter((pList) => {\n      if (pList.name.toLowerCase().includes(searchRes.toLowerCase()) || pList.email.toLowerCase().includes(searchRes.toLowerCase()) || pList.phoneNo.includes(searchRes.toLowerCase()) || pList.age.includes(searchRes.toLowerCase()) || pList.gender.toLowerCase().includes(searchRes.toLowerCase())) {\n        return pList;\n      }\n    })\n    this.setState({\n      empListArr: updatedEmps\n    })\n  }\n  openProjects() {\n    this.setState({ openProjects: true })\n  }\n  confirmModalClose() {\n    this.setState({\n      projectId: \"\",\n      openProjects: false,\n      empListArr: this.props.empListArr,\n    })\n  }\n  editEmps(empId) {\n    this.setState({\n      empId: empId,\n      openProjects: true,\n    })\n  }\n  deleteEmp(empId) {\n    const empListArr = this.state.empListArr;\n    const updatedEmpList = empListArr.filter((tList) => {\n      return tList.id == empId ? null : tList;\n    })\n    this.props.empList(updatedEmpList);\n    this.setState({\n      empListArr: updatedEmpList,\n    })\n  }\n  render() {\n    const { classes } = this.props;\n    const {\n      openProjects, empListArr, empId, search\n    } = this.state;\n    console.log(search)\n    return (\n      <div className=\"recordFormRow\">\n        <span className=\"box-with-bg\">\n          <AddProject empId={empId} openProjects={openProjects} confirmModalClose={this.confirmModalClose} />\n          <div className=\"recordFormHead white-text\">Employees</div>\n          <div className=\"full-width text-right\">\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.openProjects()}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n                  Add Employee\n                </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <FormControl >\n                <FormGroup className=\"full-width setting_cards p-10\">\n                  <input\n                    className=\"custom-input-box\"\n                    label=\"Search\"\n                    placeholder=\"Search\"\n                    text=\"text\"\n                    name=\"search\"\n                    variant=\"filled\"\n                    value={search}\n                    onChange={e => this.handleInput(e)}\n                  />\n                </FormGroup>\n              </FormControl>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.filterEmps()}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n                  Search\n                </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n            </div>\n          </div>\n          <div className=\"full-width\">\n            <GridContainer>\n              <CardBody>\n                <Paper className={(classes.root, this.cust_table_cover)}>\n                  <div className={(classes.tableWrapper, this.cust_table)}>\n                    <div className=\"table-respopnsive\">\n                      <Table>\n                        <TableHead className={this.tableh}>\n                          <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Email</TableCell>\n                            <TableCell>Phone</TableCell>\n                            <TableCell>Age</TableCell>\n                            <TableCell>Gender</TableCell>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Action</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody key=\"TableBody\">\n                          {\n                            this.state.empListArr.length &&\n                              this.state.empListArr.length\n                              ? this.state.empListArr\n                                .slice(\n                                  this.state.page * this.state.rowsPerPage,\n                                  this.state.page * this.state.rowsPerPage +\n                                  this.state.rowsPerPage\n                                )\n                                .map((row, key) => {\n                                  return (\n                                    <TableRow\n                                      hover\n                                      role=\"checkbox\"\n                                      tabIndex={-1}\n                                      key={key}\n                                    >\n                                      <TableCell>{row.name}</TableCell>\n                                      <TableCell>{row.email}</TableCell>\n                                      <TableCell>{row.phoneNo}</TableCell>\n                                      <TableCell>{row.age}</TableCell>\n                                      <TableCell>{row.gender}</TableCell>\n                                      <TableCell>{new Date(row.createDate).toDateString()}</TableCell>\n                                      <TableCell>\n                                        {/* <span className=\"edit-action\">\n                                          <Link\n                                            underline=\"none\"\n                                            to={\n                                              {\n                                                pathname: basePath + baseRoutes.tasks.path,\n                                                state: row.id\n                                              }\n                                            }\n                                          >\n                                            <Icon className=\"fa fa-eye\" aria-hidden=\"true\" style={{ color: \"#fff\" }} />\n                                          </Link>\n                                        </span> */}\n                                        <span className=\"edit-action\">\n                                          <Icon className=\"fa fa-pencil\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.editEmps(row.id)} />\n                                        </span>\n                                        <span className=\"edit-action\">\n                                          <Icon className=\"fa fa-trash\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.deleteEmp(row.id)} />\n                                        </span>\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                })\n                              :\n                              <TableRow>\n                                <TableCell colspan='7'>\n                                  <div className=\"not-found-text\">No projects available...</div>\n                                </TableCell>\n                              </TableRow>\n                          }\n                        </TableBody>\n                      </Table>\n                    </div>\n                  </div>\n                  <TablePagination\n                    rowsPerPageOptions={PER_PAGE_OPTIONS}\n                    component=\"div\"\n                    count={\n                      this.state.empListArr.length &&\n                        this.state.empListArr.length\n                        ? this.state.empListArr.length\n                        : 0\n                    }\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                      \"aria-label\": \"previous page\"\n                    }}\n                    nextIconButtonProps={{\n                      \"aria-label\": \"next page\"\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n                </Paper>\n              </CardBody>\n            </GridContainer>\n          </div>\n        </span>\n      </div>\n    );\n  }\n}\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst Record = connect(\n  mapStateToProps, mapDispatchToProps\n)(RecordClass);\n\n// export default Form;\nexport default withStyles(dashboardStyle)(Record);"]},"metadata":{},"sourceType":"module"}