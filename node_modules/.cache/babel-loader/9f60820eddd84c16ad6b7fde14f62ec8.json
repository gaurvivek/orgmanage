{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/views/Tasks/Tasks.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Link as MaterialLink, CircularProgress, FormGroup, FormControl } from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { PER_PAGE_OPTIONS, RECORD_PER_PAGE } from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddTasks from \"./TasksPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { taskList as _taskList, reduxLoad } from 'js/actions';\nam4core.useTheme(am4themes_animated);\nvar columns = [{\n  id: \"taskName\",\n  label: \"Task Name\"\n}, {\n  id: \"taskDescription\",\n  label: \"Task Description\"\n}, {\n  id: \"taskPriority\",\n  label: \"Task Priority\"\n}, {\n  id: \"taskStatus\",\n  label: \"Task Status\"\n}, {\n  id: \"createDate\",\n  label: \"Created Date\"\n}, {\n  id: \"\",\n  label: \"Action\"\n}];\nvar ref = React.createRef();\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    taskList: function taskList(projects) {\n      return dispatch(_taskList(projects));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    taskListArr: state.taskList,\n    projectListArr: state.projectList\n  };\n};\n\nvar TasksClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(TasksClass, _React$Component);\n\n  var _super = _createSuper(TasksClass);\n\n  function TasksClass(props) {\n    var _this;\n\n    _classCallCheck(this, TasksClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangePage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  page: newPage\n                }); // setPage(newPage);\n\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.validateField = function (fieldName, fieldValue) {\n      var fieldValidationErrors = _this.state.formErrors;\n      var startDateValid = _this.state.startDateValid;\n      var endDateValid = _this.state.endDateValid;\n\n      switch (fieldName) {\n        case \"startDate\":\n          startDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.startDate = !startDateValid ? enMsg.startDateRequiredMsg : \"\";\n          break;\n\n        case \"endDate\":\n          endDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.endDate = !endDateValid ? enMsg.endDateRequiredMsg : \"\";\n          break;\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        startDateValid: startDateValid,\n        endDateValid: endDateValid\n      }, _this.validateForm);\n    };\n\n    _this.dateUtility = new DateFnsUtils();\n    _this._isMounted = false;\n    var sortedTasks = _this.props.taskListArr ? _this.props.taskListArr.sort(function (a, b) {\n      return a.taskStatus > b.taskStatus ? 1 : -1;\n    }) : [];\n    _this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      reduxLoadFlag: false,\n      openProjects: false,\n      taskListArr: sortedTasks,\n      originalTaskListArr: sortedTasks,\n      projectTaskList: [],\n      projectList: _this.props.projectListArr ? _this.props.projectListArr : [],\n      projectId: \"\",\n      projectInfo: {},\n      taskId: \"\",\n      search: \"\"\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_this));\n    _this.handleChangeRowsPerPage = _this.handleChangeRowsPerPage.bind(_assertThisInitialized(_this));\n    _this.confirmModalClose = _this.confirmModalClose.bind(_assertThisInitialized(_this));\n    _this.deleteTask = _this.deleteTask.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TasksClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = 'Tasks';\n      var projectList = this.state.projectList;\n      var taskListArr = this.state.taskListArr;\n\n      if (this.props.location.state && projectList && projectList.length) {\n        console.log(\"location... \", this.props.location.state);\n        var projectInfo = projectList.filter(function (pList) {\n          if (pList.uid == _this2.props.location.state) {\n            return pList;\n          }\n        });\n        var projectTasks = taskListArr.filter(function (tList) {\n          if (tList.projectId == _this2.props.location.state) {\n            return tList;\n          }\n        });\n        this.setState({\n          projectId: this.props.location.state,\n          projectTaskList: projectTasks,\n          projectInfo: projectInfo && projectInfo.length ? projectInfo[0] : {}\n        });\n      } else {\n        var showNotification = {\n          title: 'Invalid Project',\n          message: 'Project not found.',\n          type: \"danger\"\n        };\n        userService.showNotification(showNotification);\n        setTimeout(function () {\n          window.location.replace(basePath + baseRoutes.records.path);\n        }, 2000);\n      }\n    }\n  }, {\n    key: \"getProjectTasks\",\n    value: function getProjectTasks() {\n      var projectId = this.state.projectId;\n      var taskListArr = this.state.taskListArr;\n      var projectTasks = taskListArr.filter(function (tList) {\n        if (tList.projectId == projectId) {\n          return tList;\n        }\n      });\n      this.setState({\n        projectTaskList: projectTasks\n      });\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday(dateValue, server) {\n      var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n      var today = new Date(dateValue);\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var mName = monthNames[today.getMonth()];\n      var yyyy = today.getFullYear();\n      var hh = today.getHours();\n      var min = today.getMinutes();\n      var sec = today.getSeconds();\n\n      if (dd < 10) {\n        dd = \"0\".concat(dd);\n      }\n\n      if (mm < 10) {\n        mm = \"0\".concat(mm);\n      }\n\n      if (server) {\n        return \"\".concat(dd, \"-\").concat(mm, \"-\").concat(yyyy);\n      }\n\n      return \"\".concat(dd, \" \").concat(mName, \" \").concat(hh, \":\").concat(min, \":\").concat(sec);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(oldProps) {\n      var _this3 = this;\n\n      if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n        var taskListArr = this.props.taskListArr ? this.props.taskListArr.sort(function (a, b) {\n          return a.taskStatus > b.taskStatus ? 1 : -1;\n        }) : [];\n        this.setState({\n          taskListArr: taskListArr,\n          reduxLoadFlag: this.props.reduxLoadFlag\n        }, function () {\n          return _this3.getProjectTasks();\n        });\n      }\n    }\n  }, {\n    key: \"handleChangeRowsPerPage\",\n    value: function handleChangeRowsPerPage(event) {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.startDateValid && this.state.endDateValid;\n    }\n  }, {\n    key: \"openProjects\",\n    value: function openProjects() {\n      this.setState({\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"confirmModalClose\",\n    value: function confirmModalClose() {\n      var _this4 = this;\n\n      this.setState({\n        taskId: \"\",\n        openProjects: false,\n        taskListArr: this.props.taskListArr ? this.props.taskListArr.sort(function (a, b) {\n          return a.taskStatus > b.taskStatus ? 1 : -1;\n        }) : []\n      }, function () {\n        return _this4.getProjectTasks();\n      });\n    }\n  }, {\n    key: \"editTask\",\n    value: function editTask(taskId) {\n      this.setState({\n        taskId: taskId,\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(taskId) {\n      var taskListArr = this.state.taskListArr;\n      var projectTaskList = this.state.projectTaskList;\n      var updatedTaskList = taskListArr.filter(function (tList) {\n        return tList.uid == taskId ? null : tList;\n      });\n      this.props.taskList(updatedTaskList);\n      var updatedPTaskList = projectTaskList.filter(function (tList) {\n        return tList.uid == taskId ? null : tList;\n      });\n      this.setState({\n        projectTaskList: updatedPTaskList,\n        taskListArr: updatedTaskList\n      });\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var value = e.target.value;\n      this.setState({\n        search: value\n      });\n    }\n  }, {\n    key: \"filterTasks\",\n    value: function filterTasks() {\n      var taskListArr = this.props.originalTaskListArr;\n      var searchRes = this.state.search;\n\n      if (!searchRes) {\n        return false;\n      }\n\n      var updatedTasks = taskListArr.filter(function (pList) {\n        if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.projectDesc.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n          return pList;\n        }\n      });\n      this.setState({\n        taskListArr: updatedTasks\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          openProjects = _this$state.openProjects,\n          taskListArr = _this$state.taskListArr,\n          projectInfo = _this$state.projectInfo,\n          projectId = _this$state.projectId,\n          projectTaskList = _this$state.projectTaskList,\n          taskId = _this$state.taskId;\n      console.log(projectTaskList, taskListArr);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"box-with-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AddTasks, {\n        taskId: taskId,\n        projectId: projectId,\n        openProjects: openProjects,\n        confirmModalClose: this.confirmModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormHead white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, \"Project Details\"), projectInfo.uid ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"white-text-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 33\n        }\n      }, \"Project Name: \", projectInfo.projectName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"white-text-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 33\n        }\n      }, \"Description: \", projectInfo.projectDesc), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"white-text-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 33\n        }\n      }, \"Created Date: \", new Date(projectInfo.createDate).toDateString())) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 29\n        }\n      }, \"Project info not found....\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }\n      }, projectInfo && projectInfo.uid ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this5.openProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 41\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 49\n        }\n      }), \"Add Tasks\"))) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"full-width setting_cards p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-input-box\",\n        label: \"Search\",\n        placeholder: \"Search\",\n        text: \"text\",\n        name: \"search\",\n        variant: \"filled\",\n        value: search,\n        onChange: function onChange(e) {\n          return _this5.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this5.filterProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 33\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 41\n        }\n      }), \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: (classes.root, this.cust_table_cover),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: (classes.tableWrapper, this.cust_table),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-respopnsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        className: this.tableh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 53\n        }\n      }, columns.map(function (column) {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 61\n          }\n        }, column.label);\n      }))), /*#__PURE__*/React.createElement(TableBody, {\n        key: \"TableBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 49\n        }\n      }, this.state.projectTaskList && this.state.projectTaskList.length ? this.state.projectTaskList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (row, key) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: key,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 69\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 73\n          }\n        }, row.taskName), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 73\n          }\n        }, row.taskDescription), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 73\n          }\n        }, row.taskDescription), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 73\n          }\n        }, row.taskPriority), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 73\n          }\n        }, row.taskStatus), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 73\n          }\n        }, new Date(row.createDate).toDateString()), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-pencil\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this5.editTask(row.uid);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 81\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-trash\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this5.deleteTask(row.uid);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 81\n          }\n        }))));\n      }) : /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        colspan: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"not-found-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 65\n        }\n      }, \"No tasks available...\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: PER_PAGE_OPTIONS,\n        component: \"div\",\n        count: this.state.projectTaskList && this.state.projectTaskList.length ? this.state.projectTaskList.length : 0,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"previous page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"next page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return TasksClass;\n}(React.Component);\n\nTasksClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar Tasks = connect(mapStateToProps, mapDispatchToProps)(TasksClass); // export default Form;\n\nexport default withStyles(dashboardStyle)(Tasks);","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/views/Tasks/Tasks.jsx"],"names":["React","PropTypes","withStyles","GridContainer","enMsg","Button","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Link","MaterialLink","CircularProgress","FormGroup","FormControl","CardBody","dashboardStyle","userService","connect","moment","PER_PAGE_OPTIONS","RECORD_PER_PAGE","am4core","am4themes_animated","MuiPickersUtilsProvider","KeyboardDatePicker","FormErrors","DateFnsUtils","AddTasks","basePath","baseRoutes","Icon","taskList","reduxLoad","useTheme","columns","id","label","ref","createRef","mapDispatchToProps","dispatch","projects","mapStateToProps","state","userInfo","timestamp","campaings","reduxLoadFlag","taskListArr","projectListArr","projectList","TasksClass","props","handleChangePage","event","newPage","setState","page","validateField","fieldName","fieldValue","fieldValidationErrors","formErrors","startDateValid","endDateValid","startDate","startDateRequiredMsg","endDate","endDateRequiredMsg","validateForm","dateUtility","_isMounted","sortedTasks","sort","a","b","taskStatus","value","loading","rowsPerPageT","rowsPerPage","openProjects","originalTaskListArr","projectTaskList","projectId","projectInfo","taskId","search","bind","handleChangeRowsPerPage","confirmModalClose","deleteTask","document","title","location","length","console","log","filter","pList","uid","projectTasks","tList","showNotification","message","type","setTimeout","window","replace","records","path","dateValue","server","monthNames","today","Date","dd","getDate","mm","getMonth","mName","yyyy","getFullYear","hh","getHours","min","getMinutes","sec","getSeconds","oldProps","undefined","getProjectTasks","target","updatedTaskList","updatedPTaskList","e","searchRes","updatedTasks","taskName","toLowerCase","includes","projectDesc","taskPriority","classes","projectName","createDate","toDateString","handleInput","filterProjects","root","cust_table_cover","tableWrapper","cust_table","tableh","map","column","align","minWidth","slice","row","key","taskDescription","color","editTask","Component","propTypes","object","isRequired","Tasks"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,eAPJ,EAQIC,QARJ,EASIC,IAAI,IAAIC,YATZ,EAUIC,gBAVJ,EAWIC,SAXJ,EAYIC,WAZJ,QAaO,mBAbP;AAcA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OACO,qBADP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACIC,gBADJ,EAEIC,eAFJ,QAGO,qBAHP;AAIA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,QAA4D,sBAA5D;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,aAArC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAQ,IAARA,SAAT,EAAmBC,SAAnB,QAAoC,YAApC;AAEAX,OAAO,CAACY,QAAR,CAAiBX,kBAAjB;AACA,IAAMY,OAAO,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADY,EAEZ;AAAED,EAAAA,EAAE,EAAE,iBAAN;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAFY,EAGZ;AAAED,EAAAA,EAAE,EAAE,cAAN;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAHY,EAIZ;AAAED,EAAAA,EAAE,EAAE,YAAN;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAJY,EAKZ;AAAED,EAAAA,EAAE,EAAE,YAAN;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CALY,EAMZ;AAAED,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE;AAAjB,CANY,CAAhB;AAQA,IAAMC,GAAG,GAAGzC,KAAK,CAAC0C,SAAN,EAAZ;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH;AACAT,IAAAA,QAAQ,EAAE,kBAAAU,QAAQ;AAAA,aAAID,QAAQ,CAACT,SAAQ,CAACU,QAAD,CAAT,CAAZ;AAAA;AAFf,GAAP;AAIH;;AACD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QADb;AAEHC,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAFd;AAGHC,IAAAA,SAAS,EAAEH,KAAK,CAACG,SAHd;AAIHC,IAAAA,aAAa,EAAEJ,KAAK,CAACI,aAJlB;AAKHC,IAAAA,WAAW,EAAEL,KAAK,CAACZ,QALhB;AAMHkB,IAAAA,cAAc,EAAEN,KAAK,CAACO;AANnB,GAAP;AAQH,CATD;;IAUMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAyGnBC,gBAzGmB;AAAA,0EAyGA,iBAAOC,KAAP,EAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AACf,sBAAKC,QAAL,CAAc;AACVC,kBAAAA,IAAI,EAAEF;AADI,iBAAd,EADe,CAIf;;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAzGA;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAqHnBG,aArHmB,GAqHH,UAACC,SAAD,EAAYC,UAAZ,EAA2B;AACvC,UAAIC,qBAAqB,GAAG,MAAKlB,KAAL,CAAWmB,UAAvC;AACA,UAAIC,cAAc,GAAG,MAAKpB,KAAL,CAAWoB,cAAhC;AACA,UAAIC,YAAY,GAAG,MAAKrB,KAAL,CAAWqB,YAA9B;;AAEA,cAAQL,SAAR;AACI,aAAK,WAAL;AACII,UAAAA,cAAc,GAAIH,UAAU,IAAIA,UAAU,IAAI,EAA7B,GAAmC,IAAnC,GAA0C,KAA3D;AACAC,UAAAA,qBAAqB,CAACI,SAAtB,GAAkC,CAACF,cAAD,GAC5B/D,KAAK,CAACkE,oBADsB,GAE5B,EAFN;AAGA;;AACJ,aAAK,SAAL;AACIF,UAAAA,YAAY,GAAIJ,UAAU,IAAIA,UAAU,IAAI,EAA7B,GAAmC,IAAnC,GAA0C,KAAzD;AACAC,UAAAA,qBAAqB,CAACM,OAAtB,GAAgC,CAACH,YAAD,GAC1BhE,KAAK,CAACoE,kBADoB,GAE1B,EAFN;AAGA;AAZR;;AAcA,YAAKZ,QAAL,CAAc;AACVM,QAAAA,UAAU,EAAED,qBADF;AAEVE,QAAAA,cAAc,EAAEA,cAFN;AAGVC,QAAAA,YAAY,EAAEA;AAHJ,OAAd,EAIG,MAAKK,YAJR;AAKH,KA7IkB;;AAEf,UAAKC,WAAL,GAAmB,IAAI5C,YAAJ,EAAnB;AACA,UAAK6C,UAAL,GAAkB,KAAlB;AACA,QAAMC,WAAW,GAAG,MAAKpB,KAAL,CAAWJ,WAAX,GAAyB,MAAKI,KAAL,CAAWJ,WAAX,CAAuByB,IAAvB,CAA4B,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA7C;AAAA,KAA5B,CAAzB,GAAuG,EAA3H;AACA,UAAKjC,KAAL,GAAa;AACTkC,MAAAA,KAAK,EAAE,CADE;AAETpB,MAAAA,IAAI,EAAE,CAFG;AAGTqB,MAAAA,OAAO,EAAE,KAHA;AAITC,MAAAA,YAAY,EAAE3D,eAJL;AAKT4D,MAAAA,WAAW,EAAE5D,eALJ;AAMT2B,MAAAA,aAAa,EAAE,KANN;AAOTkC,MAAAA,YAAY,EAAE,KAPL;AAQTjC,MAAAA,WAAW,EAAEwB,WARJ;AASTU,MAAAA,mBAAmB,EAAEV,WATZ;AAUTW,MAAAA,eAAe,EAAE,EAVR;AAWTjC,MAAAA,WAAW,EAAE,MAAKE,KAAL,CAAWH,cAAX,GAA4B,MAAKG,KAAL,CAAWH,cAAvC,GAAwD,EAX5D;AAYTmC,MAAAA,SAAS,EAAE,EAZF;AAaTC,MAAAA,WAAW,EAAE,EAbJ;AAcTC,MAAAA,MAAM,EAAE,EAdC;AAeTC,MAAAA,MAAM,EAAE;AAfC,KAAb;AAiBA,UAAKlC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBmC,IAAtB,+BAAxB;AACA,UAAKC,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BD,IAA7B,+BAA/B;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,+BAAzB;AACA,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBH,IAAhB,+BAAlB;AAzBe;AA0BlB;;;;WAED,6BAAoB;AAAA;;AAChBI,MAAAA,QAAQ,CAACC,KAAT,GAAiB,OAAjB;AACA,UAAM3C,WAAW,GAAG,KAAKP,KAAL,CAAWO,WAA/B;AACA,UAAMF,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAA/B;;AACA,UAAI,KAAKI,KAAL,CAAW0C,QAAX,CAAoBnD,KAApB,IAA6BO,WAA7B,IAA4CA,WAAW,CAAC6C,MAA5D,EAAoE;AAChEC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK7C,KAAL,CAAW0C,QAAX,CAAoBnD,KAAhD;AACA,YAAM0C,WAAW,GAAGnC,WAAW,CAACgD,MAAZ,CAAmB,UAACC,KAAD,EAAW;AAC9C,cAAIA,KAAK,CAACC,GAAN,IAAa,MAAI,CAAChD,KAAL,CAAW0C,QAAX,CAAoBnD,KAArC,EAA4C;AACxC,mBAAOwD,KAAP;AACH;AACJ,SAJmB,CAApB;AAKA,YAAME,YAAY,GAAGrD,WAAW,CAACkD,MAAZ,CAAmB,UAACI,KAAD,EAAW;AAC/C,cAAIA,KAAK,CAAClB,SAAN,IAAmB,MAAI,CAAChC,KAAL,CAAW0C,QAAX,CAAoBnD,KAA3C,EAAkD;AAC9C,mBAAO2D,KAAP;AACH;AACJ,SAJoB,CAArB;AAKA,aAAK9C,QAAL,CAAc;AACV4B,UAAAA,SAAS,EAAE,KAAKhC,KAAL,CAAW0C,QAAX,CAAoBnD,KADrB;AAEVwC,UAAAA,eAAe,EAAEkB,YAFP;AAGVhB,UAAAA,WAAW,EAAEA,WAAW,IAAIA,WAAW,CAACU,MAA3B,GAAoCV,WAAW,CAAC,CAAD,CAA/C,GAAqD;AAHxD,SAAd;AAKH,OAjBD,MAiBO;AACH,YAAMkB,gBAAgB,GAAG;AACrBV,UAAAA,KAAK,EAAE,iBADc;AAErBW,UAAAA,OAAO,EAAE,oBAFY;AAGrBC,UAAAA,IAAI,EAAE;AAHe,SAAzB;AAKAzF,QAAAA,WAAW,CAACuF,gBAAZ,CAA6BA,gBAA7B;AACAG,QAAAA,UAAU,CAAC,YAAY;AACnBC,UAAAA,MAAM,CAACb,QAAP,CAAgBc,OAAhB,CAAwBhF,QAAQ,GAAGC,UAAU,CAACgF,OAAX,CAAmBC,IAAtD;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ;;;WACD,2BAAkB;AACd,UAAM1B,SAAS,GAAG,KAAKzC,KAAL,CAAWyC,SAA7B;AACA,UAAMpC,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAA/B;AACA,UAAMqD,YAAY,GAAGrD,WAAW,CAACkD,MAAZ,CAAmB,UAACI,KAAD,EAAW;AAC/C,YAAIA,KAAK,CAAClB,SAAN,IAAmBA,SAAvB,EAAkC;AAC9B,iBAAOkB,KAAP;AACH;AACJ,OAJoB,CAArB;AAKA,WAAK9C,QAAL,CAAc;AACV2B,QAAAA,eAAe,EAAEkB;AADP,OAAd;AAGH;;;WACD,kBAASU,SAAT,EAAoBC,MAApB,EAA4B;AACxB,UAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EACf,KADe,EACR,KADQ,EACD,MADC,EACO,KADP,EACc,KADd,EACqB,KADrB,CAAnB;AAGA,UAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASJ,SAAT,CAAZ;AACA,UAAIK,EAAE,GAAGF,KAAK,CAACG,OAAN,EAAT;AACA,UAAIC,EAAE,GAAGJ,KAAK,CAACK,QAAN,KAAmB,CAA5B;AACA,UAAIC,KAAK,GAAGP,UAAU,CAACC,KAAK,CAACK,QAAN,EAAD,CAAtB;AACA,UAAME,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAb;AACA,UAAMC,EAAE,GAAGT,KAAK,CAACU,QAAN,EAAX;AACA,UAAMC,GAAG,GAAGX,KAAK,CAACY,UAAN,EAAZ;AACA,UAAMC,GAAG,GAAGb,KAAK,CAACc,UAAN,EAAZ;;AACA,UAAIZ,EAAE,GAAG,EAAT,EAAa;AACTA,QAAAA,EAAE,cAAOA,EAAP,CAAF;AACH;;AACD,UAAIE,EAAE,GAAG,EAAT,EAAa;AACTA,QAAAA,EAAE,cAAOA,EAAP,CAAF;AACH;;AACD,UAAIN,MAAJ,EAAY;AACR,yBAAUI,EAAV,cAAgBE,EAAhB,cAAsBG,IAAtB;AACH;;AACD,uBAAUL,EAAV,cAAgBI,KAAhB,cAAyBG,EAAzB,cAA+BE,GAA/B,cAAsCE,GAAtC;AACH;;;WACD,4BAAmBE,QAAnB,EAA6B;AAAA;;AACzB,UAAI,KAAK7E,KAAL,CAAWL,aAAX,IAA4BmF,SAA5B,IAAyC,KAAKvF,KAAL,CAAWI,aAAX,IAA4B,KAAKK,KAAL,CAAWL,aAApF,EAAmG;AAC/F,YAAIC,WAAW,GAAG,KAAKI,KAAL,CAAWJ,WAAX,GAAyB,KAAKI,KAAL,CAAWJ,WAAX,CAAuByB,IAAvB,CAA4B,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA7C;AAAA,SAA5B,CAAzB,GAAuG,EAAzH;AACA,aAAKpB,QAAL,CAAc;AACVR,UAAAA,WAAW,EAAEA,WADH;AAEVD,UAAAA,aAAa,EAAE,KAAKK,KAAL,CAAWL;AAFhB,SAAd,EAGG;AAAA,iBAAM,MAAI,CAACoF,eAAL,EAAN;AAAA,SAHH;AAIH;AACJ;;;WAOD,iCAAwB7E,KAAxB,EAA+B;AAC3B,WAAKE,QAAL,CAAc;AACVwB,QAAAA,WAAW,EAAE,CAAC1B,KAAK,CAAC8E,MAAN,CAAavD,KADjB;AAEVpB,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIH;;;WA0BD,wBAAe;AACX,aACI,KAAKd,KAAL,CAAWoB,cAAX,IACA,KAAKpB,KAAL,CAAWqB,YAFf;AAIH;;;WACD,wBAAe;AACX,WAAKR,QAAL,CAAc;AAAEyB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH;;;WACD,6BAAoB;AAAA;;AAChB,WAAKzB,QAAL,CAAc;AACV8B,QAAAA,MAAM,EAAE,EADE;AAEVL,QAAAA,YAAY,EAAE,KAFJ;AAGVjC,QAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWJ,WAAX,GAAyB,KAAKI,KAAL,CAAWJ,WAAX,CAAuByB,IAAvB,CAA4B,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA7C;AAAA,SAA5B,CAAzB,GAAuG;AAH1G,OAAd,EAIG;AAAA,eAAM,MAAI,CAACuD,eAAL,EAAN;AAAA,OAJH;AAKH;;;WACD,kBAAS7C,MAAT,EAAiB;AACb,WAAK9B,QAAL,CAAc;AACV8B,QAAAA,MAAM,EAAEA,MADE;AAEVL,QAAAA,YAAY,EAAE;AAFJ,OAAd;AAIH;;;WACD,oBAAWK,MAAX,EAAmB;AACf,UAAMtC,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAA/B;AACA,UAAMmC,eAAe,GAAG,KAAKxC,KAAL,CAAWwC,eAAnC;AACA,UAAMkD,eAAe,GAAGrF,WAAW,CAACkD,MAAZ,CAAmB,UAACI,KAAD,EAAW;AAClD,eAAOA,KAAK,CAACF,GAAN,IAAad,MAAb,GAAsB,IAAtB,GAA6BgB,KAApC;AACH,OAFuB,CAAxB;AAGA,WAAKlD,KAAL,CAAWrB,QAAX,CAAoBsG,eAApB;AACA,UAAMC,gBAAgB,GAAGnD,eAAe,CAACe,MAAhB,CAAuB,UAACI,KAAD,EAAW;AACvD,eAAOA,KAAK,CAACF,GAAN,IAAad,MAAb,GAAsB,IAAtB,GAA6BgB,KAApC;AACH,OAFwB,CAAzB;AAGA,WAAK9C,QAAL,CAAc;AACV2B,QAAAA,eAAe,EAAEmD,gBADP;AAEVtF,QAAAA,WAAW,EAAEqF;AAFH,OAAd;AAIH;;;WACD,qBAAYE,CAAZ,EAAe;AACX,UAAQ1D,KAAR,GAAkB0D,CAAC,CAACH,MAApB,CAAQvD,KAAR;AACA,WAAKrB,QAAL,CAAc;AACV+B,QAAAA,MAAM,EAAEV;AADE,OAAd;AAGH;;;WACD,uBAAc;AACV,UAAM7B,WAAW,GAAG,KAAKI,KAAL,CAAW8B,mBAA/B;AACA,UAAMsD,SAAS,GAAG,KAAK7F,KAAL,CAAW4C,MAA7B;;AACA,UAAI,CAACiD,SAAL,EAAgB;AAEZ,eAAO,KAAP;AACH;;AACD,UAAMC,YAAY,GAAGzF,WAAW,CAACkD,MAAZ,CAAmB,UAACC,KAAD,EAAW;AAC/C,YAAIA,KAAK,CAACuC,QAAN,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCJ,SAAS,CAACG,WAAV,EAAtC,KAAkExC,KAAK,CAAC0C,WAAN,CAAkBF,WAAlB,GAAgCC,QAAhC,CAAyCJ,SAAS,CAACG,WAAV,EAAzC,CAAlE,IAAuIxC,KAAK,CAAC2C,YAAN,CAAmBH,WAAnB,GAAiCC,QAAjC,CAA0CJ,SAAS,CAACG,WAAV,EAA1C,CAAvI,IAA6MxC,KAAK,CAACvB,UAAN,CAAiB+D,WAAjB,GAA+BC,QAA/B,CAAwCJ,SAAS,CAACG,WAAV,EAAxC,CAAjN,EAAmR;AAC/Q,iBAAOxC,KAAP;AACH;AACJ,OAJoB,CAArB;AAKA,WAAK3C,QAAL,CAAc;AACVR,QAAAA,WAAW,EAAEyF;AADH,OAAd;AAGH;;;WACD,kBAAS;AAAA;;AACL,UAAQM,OAAR,GAAoB,KAAK3F,KAAzB,CAAQ2F,OAAR;AACA,wBAEI,KAAKpG,KAFT;AAAA,UACIsC,YADJ,eACIA,YADJ;AAAA,UACkBjC,WADlB,eACkBA,WADlB;AAAA,UAC+BqC,WAD/B,eAC+BA,WAD/B;AAAA,UAC4CD,SAD5C,eAC4CA,SAD5C;AAAA,UACuDD,eADvD,eACuDA,eADvD;AAAA,UACwEG,MADxE,eACwEA,MADxE;AAGAU,MAAAA,OAAO,CAACC,GAAR,CAAYd,eAAZ,EAA6BnC,WAA7B;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEsC,MAAlB;AAA0B,QAAA,SAAS,EAAEF,SAArC;AAAgD,QAAA,YAAY,EAAEH,YAA9D;AAA4E,QAAA,iBAAiB,EAAE,KAAKS,iBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAIQL,WAAW,CAACe,GAAZ,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6Cf,WAAW,CAAC2D,WAAzD,CADJ,eAEI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4C3D,WAAW,CAACwD,WAAxD,CAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6C,IAAI1B,IAAJ,CAAS9B,WAAW,CAAC4D,UAArB,EAAiCC,YAAjC,EAA7C,CAHJ,CAFJ,gBAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAZZ,eAcI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ7D,WAAW,IAAIA,WAAW,CAACe,GAA3B,gBAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACnB,YAAL,EAAN;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKtC,KAAL,CAAWmC,OAAX,iBACG,oBAAC,gBAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,SAAS,EAAC,gBAFd;AAGI,QAAA,KAAK,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,cALJ,CADJ,CAFJ,GAoBM,IAtBd,eAwBI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,WAAW,EAAC,QAHhB;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,IAAI,EAAC,QALT;AAMI,QAAA,OAAO,EAAC,QANZ;AAOI,QAAA,KAAK,EAAES,MAPX;AAQI,QAAA,QAAQ,EAAE,kBAAAgD,CAAC;AAAA,iBAAI,MAAI,CAACY,WAAL,CAAiBZ,CAAjB,CAAJ;AAAA,SARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAxBJ,eAwCI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACa,cAAL,EAAN;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKzG,KAAL,CAAWmC,OAAX,iBACG,oBAAC,gBAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,SAAS,EAAC,gBAFd;AAGI,QAAA,KAAK,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,WALJ,CADJ,CAxCJ,eA0DI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1DJ,CAdJ,eA2EI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,SAAS,GAAGiE,OAAO,CAACM,IAAR,EAAc,KAAKC,gBAAtB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,GAAGP,OAAO,CAACQ,YAAR,EAAsB,KAAKC,UAA9B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKvH,OAAO,CAACwH,GAAR,CAAY,UAAAC,MAAM;AAAA,4BACf,oBAAC,SAAD;AACI,UAAA,GAAG,EAAEA,MAAM,CAACxH,EADhB;AAEI,UAAA,KAAK,EAAEwH,MAAM,CAACC,KAFlB;AAGI,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAEF,MAAM,CAACE;AAAnB,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKF,MAAM,CAACvH,KALZ,CADe;AAAA,OAAlB,CADL,CADJ,CADJ,eAcI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKO,KAAL,CAAWwC,eAAX,IAA8B,KAAKxC,KAAL,CAAWwC,eAAX,CAA2BY,MAAzD,GACK,KAAKpD,KAAL,CAAWwC,eAAX,CACG2E,KADH,CAEM,KAAKnH,KAAL,CAAWc,IAAX,GAAkB,KAAKd,KAAL,CAAWqC,WAFnC,EAGM,KAAKrC,KAAL,CAAWc,IAAX,GAAkB,KAAKd,KAAL,CAAWqC,WAA7B,GACA,KAAKrC,KAAL,CAAWqC,WAJjB,EAMG0E,GANH,CAMO,UAACK,GAAD,EAAMC,GAAN,EAAc;AACf,4BACI,oBAAC,QAAD;AACI,UAAA,KAAK,MADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,QAAQ,EAAE,CAAC,CAHf;AAII,UAAA,GAAG,EAAEA,GAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYD,GAAG,CAACrB,QAAhB,CANJ,eAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYqB,GAAG,CAACE,eAAhB,CAPJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYF,GAAG,CAACE,eAAhB,CARJ,eASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYF,GAAG,CAACjB,YAAhB,CATJ,eAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYiB,GAAG,CAACnF,UAAhB,CAVJ,eAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY,IAAIuC,IAAJ,CAAS4C,GAAG,CAACd,UAAb,EAAyBC,YAAzB,EAAZ,CAXJ,eAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,yBAAY,MAA3C;AAAkD,UAAA,KAAK,EAAE;AAAEgB,YAAAA,KAAK,EAAE;AAAT,WAAzD;AAA4E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,QAAL,CAAcJ,GAAG,CAAC3D,GAAlB,CAAN;AAAA,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,eAII;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,yBAAY,MAA1C;AAAiD,UAAA,KAAK,EAAE;AAAE8D,YAAAA,KAAK,EAAE;AAAT,WAAxD;AAA2E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACvE,UAAL,CAAgBoE,GAAG,CAAC3D,GAApB,CAAN;AAAA,WAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAJJ,CAZJ,CADJ;AAuBH,OA9BH,CADL,gBAiCG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ,CAlCR,CAdJ,CADJ,CADJ,CADJ,eA6DI,oBAAC,eAAD;AACI,QAAA,kBAAkB,EAAEjF,gBADxB;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,KAAK,EACD,KAAKwB,KAAL,CAAWwC,eAAX,IACI,KAAKxC,KAAL,CAAWwC,eAAX,CAA2BY,MAD/B,GAEM,KAAKpD,KAAL,CAAWwC,eAAX,CAA2BY,MAFjC,GAGM,CAPd;AASI,QAAA,WAAW,EAAE,KAAKpD,KAAL,CAAWqC,WAT5B;AAUI,QAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWc,IAVrB;AAWI,QAAA,mBAAmB,EAAE;AACjB,wBAAc;AADG,SAXzB;AAcI,QAAA,mBAAmB,EAAE;AACjB,wBAAc;AADG,SAdzB;AAiBI,QAAA,YAAY,EAAE,KAAKJ,gBAjBvB;AAkBI,QAAA,mBAAmB,EAAE,KAAKoC,uBAlB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7DJ,CADJ,CADJ,CADJ,CA3EJ,CADJ,CADJ;AAwKH;;;;EAxXoB7F,KAAK,CAACwK,S;;AA2X/BjH,UAAU,CAACkH,SAAX,GAAuB;AACnBtB,EAAAA,OAAO,EAAElJ,SAAS,CAACyK,MAAV,CAAiBC;AADP,CAAvB;AAIA,IAAMC,KAAK,GAAGvJ,OAAO,CACjByB,eADiB,EACAH,kBADA,CAAP,CAEZY,UAFY,CAAd,C,CAIA;;AACA,eAAerD,UAAU,CAACiB,cAAD,CAAV,CAA2ByJ,KAA3B,CAAf","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport {\n    Button,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TablePagination,\n    TableRow,\n    Link as MaterialLink,\n    CircularProgress,\n    FormGroup,\n    FormControl,\n} from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport {\n} from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n    PER_PAGE_OPTIONS,\n    RECORD_PER_PAGE,\n} from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { FormErrors } from \"components/Login/FormErrors\"\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddTasks from \"./TasksPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { taskList, reduxLoad } from 'js/actions';\n\nam4core.useTheme(am4themes_animated);\nconst columns = [\n    { id: \"taskName\", label: \"Task Name\" },\n    { id: \"taskDescription\", label: \"Task Description\" },\n    { id: \"taskPriority\", label: \"Task Priority\" },\n    { id: \"taskStatus\", label: \"Task Status\" },\n    { id: \"createDate\", label: \"Created Date\" },\n    { id: \"\", label: \"Action\" },\n];\nconst ref = React.createRef();\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // addArticle: article => dispatch(addArticle(article))\n        taskList: projects => dispatch(taskList(projects))\n    };\n}\nconst mapStateToProps = state => {\n    return {\n        userInfo: state.userInfo,\n        timestamp: state.timestamp,\n        campaings: state.campaings,\n        reduxLoadFlag: state.reduxLoadFlag,\n        taskListArr: state.taskList,\n        projectListArr: state.projectList,\n    };\n};\nclass TasksClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dateUtility = new DateFnsUtils();\n        this._isMounted = false;\n        const sortedTasks = this.props.taskListArr ? this.props.taskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1) : [];\n        this.state = {\n            value: 0,\n            page: 0,\n            loading: false,\n            rowsPerPageT: RECORD_PER_PAGE,\n            rowsPerPage: RECORD_PER_PAGE,\n            reduxLoadFlag: false,\n            openProjects: false,\n            taskListArr: sortedTasks,\n            originalTaskListArr: sortedTasks,\n            projectTaskList: [],\n            projectList: this.props.projectListArr ? this.props.projectListArr : [],\n            projectId: \"\",\n            projectInfo: {},\n            taskId: \"\",\n            search: \"\",\n        };\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.confirmModalClose = this.confirmModalClose.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = 'Tasks';\n        const projectList = this.state.projectList;\n        const taskListArr = this.state.taskListArr;\n        if (this.props.location.state && projectList && projectList.length) {\n            console.log(\"location... \", this.props.location.state);\n            const projectInfo = projectList.filter((pList) => {\n                if (pList.uid == this.props.location.state) {\n                    return pList;\n                }\n            })\n            const projectTasks = taskListArr.filter((tList) => {\n                if (tList.projectId == this.props.location.state) {\n                    return tList;\n                }\n            })\n            this.setState({\n                projectId: this.props.location.state,\n                projectTaskList: projectTasks,\n                projectInfo: projectInfo && projectInfo.length ? projectInfo[0] : {},\n            })\n        } else {\n            const showNotification = {\n                title: 'Invalid Project',\n                message: 'Project not found.',\n                type: \"danger\",\n            }\n            userService.showNotification(showNotification);\n            setTimeout(function () {\n                window.location.replace(basePath + baseRoutes.records.path);\n            }, 2000);\n        }\n    }\n    getProjectTasks() {\n        const projectId = this.state.projectId;\n        const taskListArr = this.state.taskListArr;\n        const projectTasks = taskListArr.filter((tList) => {\n            if (tList.projectId == projectId) {\n                return tList;\n            }\n        })\n        this.setState({\n            projectTaskList: projectTasks,\n        })\n    }\n    getToday(dateValue, server) {\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"\n        ];\n        let today = new Date(dateValue);\n        let dd = today.getDate();\n        let mm = today.getMonth() + 1;\n        let mName = monthNames[today.getMonth()];\n        const yyyy = today.getFullYear();\n        const hh = today.getHours();\n        const min = today.getMinutes();\n        const sec = today.getSeconds();\n        if (dd < 10) {\n            dd = `0${dd}`;\n        }\n        if (mm < 10) {\n            mm = `0${mm}`;\n        }\n        if (server) {\n            return `${dd}-${mm}-${yyyy}`;\n        }\n        return `${dd} ${mName} ${hh}:${min}:${sec}`;\n    }\n    componentDidUpdate(oldProps) {\n        if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n            let taskListArr = this.props.taskListArr ? this.props.taskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1) : [];\n            this.setState({\n                taskListArr: taskListArr,\n                reduxLoadFlag: this.props.reduxLoadFlag,\n            }, () => this.getProjectTasks())\n        }\n    }\n    handleChangePage = async (event, newPage) => {\n        this.setState({\n            page: newPage\n        });\n        // setPage(newPage);\n    };\n    handleChangeRowsPerPage(event) {\n        this.setState({\n            rowsPerPage: +event.target.value,\n            page: 0\n        });\n    }\n    validateField = (fieldName, fieldValue) => {\n        let fieldValidationErrors = this.state.formErrors;\n        let startDateValid = this.state.startDateValid;\n        let endDateValid = this.state.endDateValid;\n\n        switch (fieldName) {\n            case \"startDate\":\n                startDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n                fieldValidationErrors.startDate = !startDateValid\n                    ? enMsg.startDateRequiredMsg\n                    : \"\";\n                break;\n            case \"endDate\":\n                endDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n                fieldValidationErrors.endDate = !endDateValid\n                    ? enMsg.endDateRequiredMsg\n                    : \"\";\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            startDateValid: startDateValid,\n            endDateValid: endDateValid,\n        }, this.validateForm);\n    }\n    validateForm() {\n        return (\n            this.state.startDateValid &&\n            this.state.endDateValid\n        )\n    }\n    openProjects() {\n        this.setState({ openProjects: true })\n    }\n    confirmModalClose() {\n        this.setState({\n            taskId: \"\",\n            openProjects: false,\n            taskListArr: this.props.taskListArr ? this.props.taskListArr.sort((a, b) => a.taskStatus > b.taskStatus ? 1 : -1) : [],\n        }, () => this.getProjectTasks())\n    }\n    editTask(taskId) {\n        this.setState({\n            taskId: taskId,\n            openProjects: true,\n        })\n    }\n    deleteTask(taskId) {\n        const taskListArr = this.state.taskListArr;\n        const projectTaskList = this.state.projectTaskList;\n        const updatedTaskList = taskListArr.filter((tList) => {\n            return tList.uid == taskId ? null : tList;\n        })\n        this.props.taskList(updatedTaskList);\n        const updatedPTaskList = projectTaskList.filter((tList) => {\n            return tList.uid == taskId ? null : tList;\n        })\n        this.setState({\n            projectTaskList: updatedPTaskList,\n            taskListArr: updatedTaskList,\n        })\n    }\n    handleInput(e) {\n        const { value } = e.target;\n        this.setState({\n            search: value,\n        })\n    }\n    filterTasks() {\n        const taskListArr = this.props.originalTaskListArr;\n        const searchRes = this.state.search;\n        if (!searchRes) {\n\n            return false;\n        }\n        const updatedTasks = taskListArr.filter((pList) => {\n            if (pList.taskName.toLowerCase().includes(searchRes.toLowerCase()) || pList.projectDesc.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskPriority.toLowerCase().includes(searchRes.toLowerCase()) || pList.taskStatus.toLowerCase().includes(searchRes.toLowerCase())) {\n                return pList;\n            }\n        })\n        this.setState({\n            taskListArr: updatedTasks\n        })\n    }\n    render() {\n        const { classes } = this.props;\n        const {\n            openProjects, taskListArr, projectInfo, projectId, projectTaskList, taskId\n        } = this.state;\n        console.log(projectTaskList, taskListArr)\n        return (\n            <div className=\"recordFormRow\">\n                <span className=\"box-with-bg\">\n                    <AddTasks taskId={taskId} projectId={projectId} openProjects={openProjects} confirmModalClose={this.confirmModalClose} />\n                    <div className=\"recordFormHead white-text\">Project Details</div>\n                    {\n                        projectInfo.uid\n                            ?\n                            <div>\n                                <p className=\"white-text-pad\">Project Name: {projectInfo.projectName}</p>\n                                <p className=\"white-text-pad\">Description: {projectInfo.projectDesc}</p>\n                                <p className=\"white-text-pad\">Created Date: {new Date(projectInfo.createDate).toDateString()}</p>\n                            </div>\n                            :\n                            <div>Project info not found....</div>\n                    }\n                    <div className=\"full-width text-right\">\n                        {\n                            projectInfo && projectInfo.uid\n                                ?\n                                <div className=\"recordFormCol widthauto\">\n                                    <Button\n                                        className=\"client newbtn greenbtn\"\n                                        type=\"button\"\n                                        onClick={() => this.openProjects()}\n                                    >\n                                        <p>\n                                            {this.state.loading && (\n                                                <CircularProgress\n                                                    size={24}\n                                                    className=\"buttonProgress\"\n                                                    color=\"secondary\"\n                                                />\n                                            )}\n                                            Add Tasks\n                                        </p>\n                                    </Button>\n                                </div>\n                                : null\n                        }\n                        <div className=\"recordFormCol widthauto\">\n                            <FormControl >\n                                <FormGroup className=\"full-width setting_cards p-10\">\n                                    <input\n                                        className=\"custom-input-box\"\n                                        label=\"Search\"\n                                        placeholder=\"Search\"\n                                        text=\"text\"\n                                        name=\"search\"\n                                        variant=\"filled\"\n                                        value={search}\n                                        onChange={e => this.handleInput(e)}\n                                    />\n                                </FormGroup>\n                            </FormControl>\n                        </div>\n                        <div className=\"recordFormCol widthauto\">\n                            <Button\n                                className=\"client newbtn greenbtn\"\n                                type=\"button\"\n                                onClick={() => this.filterProjects()}\n                            >\n                                <p>\n                                    {this.state.loading && (\n                                        <CircularProgress\n                                            size={24}\n                                            className=\"buttonProgress\"\n                                            color=\"secondary\"\n                                        />\n                                    )}\n                                    Search\n                                </p>\n                            </Button>\n                        </div>\n                        <div className=\"recordFormCol widthauto\">\n                        </div>\n                    </div>\n                    <div className=\"full-width\">\n                        <GridContainer>\n                            <CardBody>\n                                <Paper className={(classes.root, this.cust_table_cover)}>\n                                    <div className={(classes.tableWrapper, this.cust_table)}>\n                                        <div className=\"table-respopnsive\">\n                                            <Table>\n                                                <TableHead className={this.tableh}>\n                                                    <TableRow>\n                                                        {columns.map(column => (\n                                                            <TableCell\n                                                                key={column.id}\n                                                                align={column.align}\n                                                                style={{ minWidth: column.minWidth }}\n                                                            >\n                                                                {column.label}\n                                                            </TableCell>\n                                                        ))}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody key=\"TableBody\">\n                                                    {this.state.projectTaskList && this.state.projectTaskList.length\n                                                        ? this.state.projectTaskList\n                                                            .slice(\n                                                                this.state.page * this.state.rowsPerPage,\n                                                                this.state.page * this.state.rowsPerPage +\n                                                                this.state.rowsPerPage\n                                                            )\n                                                            .map((row, key) => {\n                                                                return (\n                                                                    <TableRow\n                                                                        hover\n                                                                        role=\"checkbox\"\n                                                                        tabIndex={-1}\n                                                                        key={key}\n                                                                    >\n                                                                        <TableCell>{row.taskName}</TableCell>\n                                                                        <TableCell>{row.taskDescription}</TableCell>\n                                                                        <TableCell>{row.taskDescription}</TableCell>\n                                                                        <TableCell>{row.taskPriority}</TableCell>\n                                                                        <TableCell>{row.taskStatus}</TableCell>\n                                                                        <TableCell>{new Date(row.createDate).toDateString()}</TableCell>\n                                                                        <TableCell>\n                                                                            <span className=\"edit-action\">\n                                                                                <Icon className=\"fa fa-pencil\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.editTask(row.uid)} />\n                                                                            </span>\n                                                                            <span className=\"edit-action\">\n                                                                                <Icon className=\"fa fa-trash\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.deleteTask(row.uid)} />\n                                                                            </span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                );\n                                                            })\n                                                        :\n                                                        <TableRow>\n                                                            <TableCell colspan='7'>\n                                                                <div className=\"not-found-text\">No tasks available...</div>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    }\n                                                </TableBody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                    <TablePagination\n                                        rowsPerPageOptions={PER_PAGE_OPTIONS}\n                                        component=\"div\"\n                                        count={\n                                            this.state.projectTaskList &&\n                                                this.state.projectTaskList.length\n                                                ? this.state.projectTaskList.length\n                                                : 0\n                                        }\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        backIconButtonProps={{\n                                            \"aria-label\": \"previous page\"\n                                        }}\n                                        nextIconButtonProps={{\n                                            \"aria-label\": \"next page\"\n                                        }}\n                                        onChangePage={this.handleChangePage}\n                                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                    />\n                                </Paper>\n                            </CardBody>\n                        </GridContainer>\n                    </div>\n                </span>\n            </div>\n        );\n    }\n}\n\nTasksClass.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst Tasks = connect(\n    mapStateToProps, mapDispatchToProps\n)(TasksClass);\n\n// export default Form;\nexport default withStyles(dashboardStyle)(Tasks);"]},"metadata":{},"sourceType":"module"}