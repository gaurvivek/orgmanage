{"ast":null,"code":"import _objectSpread from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { REDUX_LOAD, DATA_LOADING_REDUX, STORED_TIMESTAMP, FETCH_EMP_LIST, FETCH_USER_DATA, FETCH_AUTH_DATA } from \"../constants/action-types\";\nvar initialState = {\n  reduxLoadFlag: false,\n  loadingFlag: false,\n  timestamp: \"\",\n  empList: [],\n  userdataR: {},\n  authData: {}\n};\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REDUX_LOAD:\n      var reduxLoadFlag = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reduxLoadFlag: reduxLoadFlag\n      });\n\n    case DATA_LOADING_REDUX:\n      var loadingFlag = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingFlag: loadingFlag\n      });\n\n    case STORED_TIMESTAMP:\n      var timestamp = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        timestamp: timestamp\n      });\n    // OTHER REDUX METHODS\n\n    case FETCH_EMP_LIST:\n      var empList = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        empList: empList\n      });\n\n    case FETCH_USER_DATA:\n      var userdataR = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userdataR: userdataR\n      });\n\n    case FETCH_AUTH_DATA:\n      var authData = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authData: authData\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/js/reducers/index.js"],"names":["REDUX_LOAD","DATA_LOADING_REDUX","STORED_TIMESTAMP","FETCH_EMP_LIST","FETCH_USER_DATA","FETCH_AUTH_DATA","initialState","reduxLoadFlag","loadingFlag","timestamp","empList","userdataR","authData","rootReducer","state","action","type","payload"],"mappings":";AAAA,SACIA,UADJ,EAEIC,kBAFJ,EAGIC,gBAHJ,EAIIC,cAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,2BAPP;AASA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,WAAW,EAAE,KAFI;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,SAAS,EAAE,EALM;AAMjBC,EAAAA,QAAQ,EAAE;AANO,CAArB;;AASA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,UAAL;AACI,UAAMO,aAAa,GAAGQ,MAAM,CAACE,OAA7B;AACA,6CACOH,KADP;AAEIP,QAAAA,aAAa,EAAbA;AAFJ;;AAIJ,SAAKN,kBAAL;AACI,UAAMO,WAAW,GAAGO,MAAM,CAACE,OAA3B;AACA,6CACOH,KADP;AAEIN,QAAAA,WAAW,EAAXA;AAFJ;;AAIJ,SAAKN,gBAAL;AACI,UAAMO,SAAS,GAAGM,MAAM,CAACE,OAAzB;AACA,6CACOH,KADP;AAEIL,QAAAA,SAAS,EAATA;AAFJ;AAIA;;AACJ,SAAKN,cAAL;AACI,UAAMO,OAAO,GAAGK,MAAM,CAACE,OAAvB;AACA,6CACOH,KADP;AAEIJ,QAAAA,OAAO,EAAPA;AAFJ;;AAIJ,SAAKN,eAAL;AACI,UAAMO,SAAS,GAAGI,MAAM,CAACE,OAAzB;AACA,6CACOH,KADP;AAEIH,QAAAA,SAAS,EAATA;AAFJ;;AAIJ,SAAKN,eAAL;AACI,UAAMO,QAAQ,GAAGG,MAAM,CAACE,OAAxB;AACA,6CACOH,KADP;AAEIF,QAAAA,QAAQ,EAARA;AAFJ;;AAIJ;AACI;AAvCR;;AAyCA,SAAOE,KAAP;AACH;;AACD,eAAeD,WAAf","sourcesContent":["import {\n    REDUX_LOAD,\n    DATA_LOADING_REDUX,\n    STORED_TIMESTAMP,\n    FETCH_EMP_LIST,\n    FETCH_USER_DATA,\n    FETCH_AUTH_DATA,\n} from \"../constants/action-types\";\n\nconst initialState = {\n    reduxLoadFlag: false,\n    loadingFlag: false,\n    timestamp: \"\",\n    empList: [],\n    userdataR: {},\n    authData: {},\n};\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case REDUX_LOAD:\n            const reduxLoadFlag = action.payload;\n            return {\n                ...state,\n                reduxLoadFlag\n            };\n        case DATA_LOADING_REDUX:\n            const loadingFlag = action.payload;\n            return {\n                ...state,\n                loadingFlag\n            };\n        case STORED_TIMESTAMP:\n            const timestamp = action.payload;\n            return {\n                ...state,\n                timestamp\n            };\n            // OTHER REDUX METHODS\n        case FETCH_EMP_LIST:\n            const empList = action.payload;\n            return {\n                ...state,\n                empList\n            };\n        case FETCH_USER_DATA:\n            const userdataR = action.payload;\n            return {\n                ...state,\n                userdataR\n            };\n        case FETCH_AUTH_DATA:\n            const authData = action.payload;\n            return {\n                ...state,\n                authData\n            };\n        default:\n            break;\n    }\n    return state;\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}