{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/views/Records/Records.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport clock from \"assets/img/clock.png\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, // styles,\nMenu, MenuItem, Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Link as MaterialLink, CircularProgress, FormGroup, FormControl, InputLabel, Select, Input, Snackbar, LinearProgress } from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport \"__helpers/constants\";\nimport { SELECTED_CAMPAIGN } from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { ANALYTICS_CSV_DATA, ANALYTICS_CSV_ADVERTISEMENT_DATA, PER_PAGE_OPTIONS, RECORD_PER_PAGE } from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\";\nam4core.useTheme(am4themes_animated);\nvar columns = [{\n  id: \"projectName\",\n  label: \"Project Name\"\n}, {\n  id: \"projectDesc\",\n  label: \"Project Description\"\n}, {\n  id: \"createDate\",\n  label: \"Created Date\"\n}, {\n  id: \"projectDesc\",\n  label: \"Total Tasks\"\n}, {\n  id: \"projectDesc\",\n  label: \"Tasks List\"\n}];\nvar ref = React.createRef();\n\nfunction mapDispatchToProps(dispatch) {\n  return {// addArticle: article => dispatch(addArticle(article))\n    // projectList: projects => dispatch(projectList(projects))\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(\"StateVal \"+JSON.stringify(state));\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    projectListArr: state.projectList\n  };\n};\n\nvar RecordClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(RecordClass, _React$Component);\n\n  var _super = _createSuper(RecordClass);\n\n  function RecordClass(props) {\n    var _this;\n\n    _classCallCheck(this, RecordClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangePage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  page: newPage\n                }); // setPage(newPage);\n\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChangePageT = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  pageT: newPage\n                }); // setPage(newPage);\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleStartDate = function (value) {\n      var startDate = true;\n\n      if (value == null || !_this.dateUtility.isValid(value)) {\n        startDate = false;\n      }\n\n      _this.setState({\n        startDate: value,\n        startDateValid: startDate,\n        minEDate: value\n      }, function () {\n        _this.validateField(\"startDate\", value);\n      });\n    };\n\n    _this.handleEndDate = function (value) {\n      var endDate = true;\n\n      if (value == null || !_this.dateUtility.isValid(value)) {\n        endDate = false;\n      }\n\n      _this.setState({\n        endDate: value,\n        endDateValid: endDate,\n        maxSDate: value\n      }, function () {\n        _this.validateField(\"endDate\", value);\n      });\n    };\n\n    _this.validateField = function (fieldName, fieldValue) {\n      var fieldValidationErrors = _this.state.formErrors;\n      var startDateValid = _this.state.startDateValid;\n      var endDateValid = _this.state.endDateValid;\n\n      switch (fieldName) {\n        case \"startDate\":\n          startDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.startDate = !startDateValid ? enMsg.startDateRequiredMsg : \"\";\n          break;\n\n        case \"endDate\":\n          endDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.endDate = !endDateValid ? enMsg.endDateRequiredMsg : \"\";\n          break;\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        startDateValid: startDateValid,\n        endDateValid: endDateValid\n      }, _this.validateForm);\n    };\n\n    _this.handleStartDateT = function (value) {\n      var startDate = true;\n\n      if (value == null || !_this.dateUtility.isValid(value)) {\n        startDate = false;\n      }\n\n      _this.setState({\n        startDateT: value,\n        startDateValidT: startDate,\n        minEDateT: value\n      }, function () {\n        _this.validateFieldT(\"startDateT\", value);\n      });\n    };\n\n    _this.handleEndDateT = function (value) {\n      var endDate = true;\n\n      if (value == null || !_this.dateUtility.isValid(value)) {\n        endDate = false;\n      }\n\n      _this.setState({\n        endDateT: value,\n        endDateValidT: endDate,\n        maxSDateT: value\n      }, function () {\n        _this.validateFieldT(\"endDateT\", value);\n      });\n    };\n\n    _this.validateFieldT = function (fieldName, fieldValue) {\n      var fieldValidationErrors = _this.state.formErrorsT;\n      var startDateValid = _this.state.startDateValidT;\n      var endDateValid = _this.state.endDateValidT;\n\n      switch (fieldName) {\n        case \"startDateT\":\n          startDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.startDate = !startDateValid ? enMsg.startDateRequiredMsg : \"\";\n          break;\n\n        case \"endDateT\":\n          endDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.endDate = !endDateValid ? enMsg.endDateRequiredMsg : \"\";\n          break;\n      }\n\n      _this.setState({\n        formErrorsT: fieldValidationErrors,\n        startDateValidT: startDateValid,\n        endDateValidT: endDateValid\n      }, _this.validateFormT);\n    };\n\n    _this.dateUtility = new DateFnsUtils();\n    _this._isMounted = false;\n    _this.state = {\n      value: 0,\n      page: 0,\n      valueT: 0,\n      pageT: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      lastUsers: \"30 mins ago\",\n      currPolution: \"Normal\",\n      lastPollutionTime: \"Just Now\",\n      totalRecords: \"3000\",\n      pollutionData: _this.props.campaings ? _this.props.campaings : [],\n      reduxLoadFlag: false,\n      allPData: [],\n      allTData: [],\n      todayDate: new Date(),\n      startDate: null,\n      endDate: null,\n      minSDate: new Date(\"10/18/2020\"),\n      minEDate: new Date(),\n      maxSDate: new Date(),\n      maxEDate: new Date(),\n      formErrors: {\n        startDate: \"\",\n        endDate: \"\"\n      },\n      startDateValid: false,\n      endDateValid: false,\n      startDateT: null,\n      endDateT: null,\n      minSDateT: new Date(\"10/18/2020\"),\n      minEDateT: new Date(),\n      maxSDateT: new Date(),\n      maxEDateT: new Date(),\n      formErrorsT: {\n        startDateT: \"\",\n        endDateT: \"\"\n      },\n      startDateValidT: false,\n      endDateValidT: false,\n      openProjects: false,\n      projectList: _this.props.projectListArr ? _this.props.projectListArr : []\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_this));\n    _this.handleChangeRowsPerPage = _this.handleChangeRowsPerPage.bind(_assertThisInitialized(_this));\n    _this.searchPollData = _this.searchPollData.bind(_assertThisInitialized(_this));\n    _this.confirmModalClose = _this.confirmModalClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RecordClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"getToday\",\n    value: function getToday(dateValue, server) {\n      var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n      var today = new Date(dateValue);\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var mName = monthNames[today.getMonth()];\n      var yyyy = today.getFullYear();\n      var hh = today.getHours();\n      var min = today.getMinutes();\n      var sec = today.getSeconds();\n\n      if (dd < 10) {\n        dd = \"0\".concat(dd);\n      }\n\n      if (mm < 10) {\n        mm = \"0\".concat(mm);\n      }\n\n      if (server) {\n        return \"\".concat(dd, \"-\").concat(mm, \"-\").concat(yyyy);\n      }\n\n      return \"\".concat(dd, \" \").concat(mName, \" \").concat(hh, \":\").concat(min, \":\").concat(sec);\n    } // componentDidUpdate(oldProps) {\n    //   if (oldProps.paddingRight !== this.props.paddingRight) {\n    //     this.chart.paddingRight = this.props.paddingRight;\n    //   }\n    //   if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n    //     let campaings = [];\n    //     let userInfo = {};\n    //     if (this.props.campaings) {\n    //       let campaingsList = this.props.campaings;\n    //       campaings = (campaingsList) ? campaingsList : [];\n    //       if (this.chart) {\n    //         this.chart.data = campaings;\n    //       }\n    //     }\n    //     this.setState({\n    //       pollutionData: campaings,\n    //     })\n    //   }\n    // }\n\n  }, {\n    key: \"handleChangeRowsPerPage\",\n    value: function handleChangeRowsPerPage(event) {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    }\n  }, {\n    key: \"handleChangeRowsPerPageT\",\n    value: function handleChangeRowsPerPageT(event) {\n      this.setState({\n        rowsPerPageT: +event.target.value,\n        pageT: 0\n      });\n    }\n  }, {\n    key: \"handleStartDateError\",\n    value: function handleStartDateError(error, value) {\n      this.setState({\n        startDateValid: error || value == \"\" || value == null ? false : true\n      });\n    }\n  }, {\n    key: \"handleEndDateError\",\n    value: function handleEndDateError(error, value) {\n      this.setState({\n        endDateValid: error || value == \"\" || value == null ? false : true\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.startDateValid && this.state.endDateValid;\n    }\n  }, {\n    key: \"searchPollData\",\n    value: function searchPollData() {\n      this.getAllPollData();\n    }\n  }, {\n    key: \"handleStartDateErrorT\",\n    value: function handleStartDateErrorT(error, value) {\n      this.setState({\n        startDateValidT: error || value == \"\" || value == null ? false : true\n      });\n    }\n  }, {\n    key: \"handleEndDateErrorT\",\n    value: function handleEndDateErrorT(error, value) {\n      this.setState({\n        endDateValidT: error || value == \"\" || value == null ? false : true\n      });\n    }\n  }, {\n    key: \"validateFormT\",\n    value: function validateFormT() {\n      return this.state.startDateValidT && this.state.endDateValidT;\n    }\n  }, {\n    key: \"searchPollDataT\",\n    value: function searchPollDataT() {\n      this.getAllTempData();\n    }\n  }, {\n    key: \"openProjects\",\n    value: function openProjects() {\n      this.setState({\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"confirmModalClose\",\n    value: function confirmModalClose() {\n      this.setState({\n        openProjects: false,\n        projectList: this.props.projectListArr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var test = \"test-cover\";\n      var test1 = \"test-cover1\";\n      var test2 = \"test-cover2\";\n      var test3 = \"test-cover3\";\n      var test4 = \"test-cover4\";\n      var clock_cover = \"clock-cover\";\n      var styletest = {\n        padding: \"23px\"\n      };\n      var styletest1 = {\n        padding: \"21px 24px\"\n      };\n      var styletest2 = {\n        padding: \"20px 23px\",\n        background: \"linear-gradient(60deg, #1666ca, #3c86e1)\",\n        boxShadow: \"0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(168, 198, 234,.4)\"\n      };\n      var styletest3 = {\n        padding: \"19px 25px\",\n        background: \"linear-gradient(60deg, #05b0c5, #20c2d6)\",\n        boxShadow: \"0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(209, 240, 244,.4)\"\n      };\n      var styletest4 = {\n        background: \"linear-gradient(60deg, #932aad, #a742b9)\",\n        boxShadow: \"0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(214, 176, 224,.4)\"\n      };\n      var clock_style = {\n        width: \"15px\",\n        height: \"15px\",\n        position: \"relative\",\n        top: \"3px\",\n        marginRight: \"3px\"\n      };\n      var _this$state = this.state,\n          currPolution = _this$state.currPolution,\n          lastPollutionTime = _this$state.lastPollutionTime,\n          totalRecords = _this$state.totalRecords,\n          pollutionData = _this$state.pollutionData,\n          allPData = _this$state.allPData,\n          allTData = _this$state.allTData,\n          openProjects = _this$state.openProjects,\n          projectList = _this$state.projectList;\n      console.log(projectList);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"box-with-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddProject, {\n        openProjects: openProjects,\n        confirmModalClose: this.confirmModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormHead white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }\n      }, \"My Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.openProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 19\n        }\n      }), \"Add Project\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.searchPollData();\n        },\n        disabled: !this.validateForm() || this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }\n      }), \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: (classes.root, this.cust_table_cover),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: (classes.tableWrapper, this.cust_table),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-respopnsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        className: this.tableh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 27\n        }\n      }, columns.map(function (column) {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 31\n          }\n        }, column.label);\n      }))), /*#__PURE__*/React.createElement(TableBody, {\n        key: \"TableBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }\n      }, this.state.projectList.length ? this.state.projectList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (row, key) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 35\n          }\n        }, columns.map(function (column) {\n          var value = row[column.id];\n\n          if (column.id == \"createDate\") {\n            var newDate = new Date(value).toDateString();\n            return /*#__PURE__*/React.createElement(TableCell, {\n              key: column.id,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 43\n              }\n            }, newDate);\n          }\n\n          return /*#__PURE__*/React.createElement(TableCell, {\n            key: column.id,\n            align: column.align,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 41\n            }\n          }, column.format && typeof value === \"number\" ? value : value ? value : \"0\");\n        }));\n      }) : null)))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: PER_PAGE_OPTIONS,\n        component: \"div\",\n        count: this.state.projectList.length ? this.state.projectList.length : 0,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"previous page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"next page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return RecordClass;\n}(React.Component);\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar Record = connect(mapStateToProps, mapDispatchToProps)(RecordClass); // export default Form;\n\nexport default withStyles(dashboardStyle)(Record);","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/views/Records/Records.jsx"],"names":["React","PropTypes","withStyles","Icon","GridItem","GridContainer","Card","CardHeader","CardIcon","CardFooter","clock","enMsg","AddAlert","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Menu","MenuItem","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Link","MaterialLink","CircularProgress","FormGroup","FormControl","InputLabel","Select","Input","Snackbar","LinearProgress","CardBody","dashboardStyle","userService","SELECTED_CAMPAIGN","connect","moment","ANALYTICS_CSV_DATA","ANALYTICS_CSV_ADVERTISEMENT_DATA","PER_PAGE_OPTIONS","RECORD_PER_PAGE","am4core","am4charts","am4themes_animated","MuiPickersUtilsProvider","KeyboardDatePicker","FormErrors","DateFnsUtils","AddProject","useTheme","columns","id","label","ref","createRef","mapDispatchToProps","dispatch","mapStateToProps","state","userInfo","timestamp","campaings","reduxLoadFlag","projectListArr","projectList","RecordClass","props","handleChangePage","event","newPage","setState","page","handleChangePageT","pageT","handleStartDate","value","startDate","dateUtility","isValid","startDateValid","minEDate","validateField","handleEndDate","endDate","endDateValid","maxSDate","fieldName","fieldValue","fieldValidationErrors","formErrors","startDateRequiredMsg","endDateRequiredMsg","validateForm","handleStartDateT","startDateT","startDateValidT","minEDateT","validateFieldT","handleEndDateT","endDateT","endDateValidT","maxSDateT","formErrorsT","validateFormT","_isMounted","valueT","loading","rowsPerPageT","rowsPerPage","timeStampVal","Date","toLocaleTimeString","lastUsers","currPolution","lastPollutionTime","totalRecords","pollutionData","allPData","allTData","todayDate","minSDate","maxEDate","minSDateT","maxEDateT","openProjects","bind","handleChangeRowsPerPage","searchPollData","confirmModalClose","dateValue","server","monthNames","today","dd","getDate","mm","getMonth","mName","yyyy","getFullYear","hh","getHours","min","getMinutes","sec","getSeconds","target","error","getAllPollData","getAllTempData","classes","test","test1","test2","test3","test4","clock_cover","styletest","padding","styletest1","styletest2","background","boxShadow","styletest3","styletest4","clock_style","width","height","position","top","marginRight","console","log","root","cust_table_cover","tableWrapper","cust_table","tableh","map","column","align","minWidth","length","slice","row","key","newDate","toDateString","format","Component","propTypes","object","isRequired","Record"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\n\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport clock from \"assets/img/clock.png\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  // styles,\n  Menu,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Link as MaterialLink,\n  CircularProgress,\n  FormGroup,\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Snackbar,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport {\n} from \"__helpers/constants\";\nimport { SELECTED_CAMPAIGN } from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  ANALYTICS_CSV_DATA, ANALYTICS_CSV_ADVERTISEMENT_DATA,\n  PER_PAGE_OPTIONS,\n  RECORD_PER_PAGE,\n} from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { FormErrors } from \"components/Login/FormErrors\"\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\"\n\nam4core.useTheme(am4themes_animated);\nconst columns = [\n  { id: \"projectName\", label: \"Project Name\" },\n  { id: \"projectDesc\", label: \"Project Description\" },\n  { id: \"createDate\", label: \"Created Date\" },\n  { id: \"projectDesc\", label: \"Total Tasks\" },\n  { id: \"projectDesc\", label: \"Tasks List\" },\n];\nconst ref = React.createRef();\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    // projectList: projects => dispatch(projectList(projects))\n  };\n}\nconst mapStateToProps = state => {\n  // console.log(\"StateVal \"+JSON.stringify(state));\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    projectListArr: state.projectList,\n  };\n};\nclass RecordClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateUtility = new DateFnsUtils();\n    this._isMounted = false;\n    this.state = {\n      value: 0,\n      page: 0,\n      valueT: 0,\n      pageT: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      lastUsers: \"30 mins ago\",\n      currPolution: \"Normal\",\n      lastPollutionTime: \"Just Now\",\n      totalRecords: \"3000\",\n      pollutionData: this.props.campaings ? this.props.campaings : [],\n      reduxLoadFlag: false,\n      allPData: [],\n      allTData: [],\n      todayDate: new Date(),\n      startDate: null,\n      endDate: null,\n      minSDate: new Date(\"10/18/2020\"),\n      minEDate: new Date(),\n      maxSDate: new Date(),\n      maxEDate: new Date(),\n      formErrors: {\n        startDate: \"\",\n        endDate: \"\",\n      },\n      startDateValid: false,\n      endDateValid: false,\n\n      startDateT: null,\n      endDateT: null,\n      minSDateT: new Date(\"10/18/2020\"),\n      minEDateT: new Date(),\n      maxSDateT: new Date(),\n      maxEDateT: new Date(),\n      formErrorsT: {\n        startDateT: \"\",\n        endDateT: \"\",\n      },\n      startDateValidT: false,\n      endDateValidT: false,\n      openProjects: false,\n      projectList: this.props.projectListArr ? this.props.projectListArr : [],\n    };\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n\n    this.searchPollData = this.searchPollData.bind(this);\n\n    this.confirmModalClose = this.confirmModalClose.bind(this);\n  }\n\n  componentDidMount() {\n  }\n  getToday(dateValue, server) {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n    let today = new Date(dateValue);\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let mName = monthNames[today.getMonth()];\n    const yyyy = today.getFullYear();\n    const hh = today.getHours();\n    const min = today.getMinutes();\n    const sec = today.getSeconds();\n    if (dd < 10) {\n      dd = `0${dd}`;\n    }\n    if (mm < 10) {\n      mm = `0${mm}`;\n    }\n    if (server) {\n      return `${dd}-${mm}-${yyyy}`;\n    }\n    return `${dd} ${mName} ${hh}:${min}:${sec}`;\n  }\n  // componentDidUpdate(oldProps) {\n  //   if (oldProps.paddingRight !== this.props.paddingRight) {\n  //     this.chart.paddingRight = this.props.paddingRight;\n  //   }\n\n  //   if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n  //     let campaings = [];\n  //     let userInfo = {};\n  //     if (this.props.campaings) {\n  //       let campaingsList = this.props.campaings;\n  //       campaings = (campaingsList) ? campaingsList : [];\n  //       if (this.chart) {\n  //         this.chart.data = campaings;\n  //       }\n  //     }\n  //     this.setState({\n  //       pollutionData: campaings,\n  //     })\n  //   }\n  // }\n  handleChangePage = async (event, newPage) => {\n    this.setState({\n      page: newPage\n    });\n    // setPage(newPage);\n  };\n  handleChangeRowsPerPage(event) {\n    this.setState({\n      rowsPerPage: +event.target.value,\n      page: 0\n    });\n  }\n  handleChangePageT = async (event, newPage) => {\n    this.setState({\n      pageT: newPage\n    });\n    // setPage(newPage);\n  };\n  handleChangeRowsPerPageT(event) {\n    this.setState({\n      rowsPerPageT: +event.target.value,\n      pageT: 0\n    });\n  }\n\n  handleStartDate = value => {\n    let startDate = true;\n    if (value == null || !this.dateUtility.isValid(value)) {\n      startDate = false;\n    }\n    this.setState(\n      {\n        startDate: value,\n        startDateValid: startDate,\n        minEDate: value,\n      },\n      () => {\n        this.validateField(\"startDate\", value);\n      }\n    );\n  };\n  handleStartDateError(error, value) {\n    this.setState({\n      startDateValid: error || value == \"\" || value == null ? false : true\n    });\n  }\n  handleEndDate = value => {\n    let endDate = true;\n    if (value == null || !this.dateUtility.isValid(value)) {\n      endDate = false;\n    }\n    this.setState(\n      {\n        endDate: value,\n        endDateValid: endDate,\n        maxSDate: value,\n      },\n      () => {\n        this.validateField(\"endDate\", value);\n      }\n    );\n  };\n  handleEndDateError(error, value) {\n    this.setState({\n      endDateValid: error || value == \"\" || value == null ? false : true\n    });\n  }\n\n  validateField = (fieldName, fieldValue) => {\n    let fieldValidationErrors = this.state.formErrors;\n    let startDateValid = this.state.startDateValid;\n    let endDateValid = this.state.endDateValid;\n\n    switch (fieldName) {\n      case \"startDate\":\n        startDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.startDate = !startDateValid\n          ? enMsg.startDateRequiredMsg\n          : \"\";\n        break;\n      case \"endDate\":\n        endDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.endDate = !endDateValid\n          ? enMsg.endDateRequiredMsg\n          : \"\";\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      startDateValid: startDateValid,\n      endDateValid: endDateValid,\n    }, this.validateForm);\n  }\n  validateForm() {\n    return (\n      this.state.startDateValid &&\n      this.state.endDateValid\n    )\n  }\n  searchPollData() {\n    this.getAllPollData()\n  }\n\n  handleStartDateT = value => {\n    let startDate = true;\n    if (value == null || !this.dateUtility.isValid(value)) {\n      startDate = false;\n    }\n    this.setState(\n      {\n        startDateT: value,\n        startDateValidT: startDate,\n        minEDateT: value,\n      },\n      () => {\n        this.validateFieldT(\"startDateT\", value);\n      }\n    );\n  };\n  handleStartDateErrorT(error, value) {\n    this.setState({\n      startDateValidT: error || value == \"\" || value == null ? false : true\n    });\n  }\n  handleEndDateT = value => {\n    let endDate = true;\n    if (value == null || !this.dateUtility.isValid(value)) {\n      endDate = false;\n    }\n    this.setState(\n      {\n        endDateT: value,\n        endDateValidT: endDate,\n        maxSDateT: value,\n      },\n      () => {\n        this.validateFieldT(\"endDateT\", value);\n      }\n    );\n  };\n  handleEndDateErrorT(error, value) {\n    this.setState({\n      endDateValidT: error || value == \"\" || value == null ? false : true\n    });\n  }\n\n  validateFieldT = (fieldName, fieldValue) => {\n    let fieldValidationErrors = this.state.formErrorsT;\n    let startDateValid = this.state.startDateValidT;\n    let endDateValid = this.state.endDateValidT;\n\n    switch (fieldName) {\n      case \"startDateT\":\n        startDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.startDate = !startDateValid\n          ? enMsg.startDateRequiredMsg\n          : \"\";\n        break;\n      case \"endDateT\":\n        endDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.endDate = !endDateValid\n          ? enMsg.endDateRequiredMsg\n          : \"\";\n        break;\n    }\n    this.setState({\n      formErrorsT: fieldValidationErrors,\n      startDateValidT: startDateValid,\n      endDateValidT: endDateValid,\n    }, this.validateFormT);\n  }\n  validateFormT() {\n    return (\n      this.state.startDateValidT &&\n      this.state.endDateValidT\n    )\n  }\n  searchPollDataT() {\n    this.getAllTempData()\n  }\n  openProjects(){\n    this.setState({openProjects: true})\n  }\n  confirmModalClose(){\n    this.setState({ \n      openProjects: false,\n      projectList: this.props.projectListArr,\n     })\n  }\n  render() {\n    const { classes } = this.props;\n    const test = \"test-cover\";\n    const test1 = \"test-cover1\";\n    const test2 = \"test-cover2\";\n    const test3 = \"test-cover3\";\n    const test4 = \"test-cover4\";\n    const clock_cover = \"clock-cover\";\n    const styletest = { padding: \"23px\" };\n    const styletest1 = { padding: \"21px 24px\" };\n    const styletest2 = {\n      padding: \"20px 23px\",\n      background: \"linear-gradient(60deg, #1666ca, #3c86e1)\",\n      boxShadow:\n        \"0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(168, 198, 234,.4)\"\n    };\n    const styletest3 = {\n      padding: \"19px 25px\",\n      background: \"linear-gradient(60deg, #05b0c5, #20c2d6)\",\n      boxShadow:\n        \"0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(209, 240, 244,.4)\"\n    };\n    const styletest4 = {\n      background: \"linear-gradient(60deg, #932aad, #a742b9)\",\n      boxShadow:\n        \"0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(214, 176, 224,.4)\"\n    };\n    const clock_style = {\n      width: \"15px\",\n      height: \"15px\",\n      position: \"relative\",\n      top: \"3px\",\n      marginRight: \"3px\"\n    };\n\n    const {\n      currPolution,\n      lastPollutionTime,\n      totalRecords,\n      pollutionData,\n      allPData,\n      allTData,\n      openProjects, projectList\n    } = this.state;\n    console.log(projectList)\n    return (\n      <div className=\"recordFormRow\">\n        <span className=\"box-with-bg\">\n          <AddProject openProjects={openProjects} confirmModalClose={this.confirmModalClose}/>\n          <div className=\"recordFormHead white-text\">My Projects</div>\n          <div className=\"recordFormCol widthauto\">\n            <Button\n              className=\"client newbtn greenbtn\"\n              type=\"button\"\n              onClick={() => this.openProjects()}\n            >\n              <p>\n                {this.state.loading && (\n                  <CircularProgress\n                    size={24}\n                    className=\"buttonProgress\"\n                    color=\"secondary\"\n                  />\n                )}\n                Add Project\n              </p>\n            </Button>\n          </div>\n          <div className=\"full-width text-right\">\n            <div className=\"recordFormCol widthauto\">\n              <FormControl >\n              </FormControl>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.searchPollData()}\n                disabled={!this.validateForm() || this.state.loading}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n              Search\n            </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n            </div>\n          </div>\n          <div className=\"full-width\">\n            <GridContainer>\n              <CardBody>\n                <Paper className={(classes.root, this.cust_table_cover)}>\n                  <div className={(classes.tableWrapper, this.cust_table)}>\n                    <div className=\"table-respopnsive\">\n                      <Table>\n                        <TableHead className={this.tableh}>\n                          <TableRow>\n                            {columns.map(column => (\n                              <TableCell\n                                key={column.id}\n                                align={column.align}\n                                style={{ minWidth: column.minWidth }}\n                              >\n                                {column.label}\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody key=\"TableBody\">\n                          {this.state.projectList.length\n                            ? this.state.projectList\n                              .slice(\n                                this.state.page * this.state.rowsPerPage,\n                                this.state.page * this.state.rowsPerPage +\n                                this.state.rowsPerPage\n                              )\n                              .map((row, key) => {\n                                return (\n                                  <TableRow\n                                    hover\n                                    role=\"checkbox\"\n                                    tabIndex={-1}\n                                    key={key}\n                                  >\n                                    {columns.map(column => {\n                                      const value = row[column.id];\n                                      if (column.id == \"createDate\") {\n                                        let newDate = new Date(value).toDateString()\n                                        return (\n                                          <TableCell key={column.id}>\n                                            {newDate}\n                                          </TableCell>\n                                        );\n                                      }\n                                      return (\n                                        <TableCell\n                                          key={column.id}\n                                          align={column.align}\n                                        >\n                                          {column.format &&\n                                            typeof value === \"number\"\n                                            ? value\n                                            : (value) ? value : \"0\"}\n                                        </TableCell>\n                                      );\n                                    })}\n                                  </TableRow>\n                                );\n                              })\n                            : null}\n                        </TableBody>\n                      </Table>\n                    </div>\n                  </div>\n                  <TablePagination\n                    rowsPerPageOptions={PER_PAGE_OPTIONS}\n                    component=\"div\"\n                    count={\n                      this.state.projectList.length\n                        ? this.state.projectList.length\n                        : 0\n                    }\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                      \"aria-label\": \"previous page\"\n                    }}\n                    nextIconButtonProps={{\n                      \"aria-label\": \"next page\"\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n                </Paper>\n              </CardBody>\n            </GridContainer>\n          </div>\n        </span>\n       </div>\n    );\n  }\n}\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst Record = connect(\n  mapStateToProps, mapDispatchToProps\n)(RecordClass);\n\n// export default Form;\nexport default withStyles(dashboardStyle)(Record);"]},"metadata":{},"sourceType":"module"}