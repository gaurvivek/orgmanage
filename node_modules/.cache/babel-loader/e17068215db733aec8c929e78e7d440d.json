{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/components/Sidebar/AdnetworkSelect.jsx\";\n\n/*!\n\n=========================================================\n* Material Dashboard React - v1.7.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/* \n==========================================================\n* In this class Ad-Network selection and all api's related to adnetwork services are used\n* Redux data setup and data fetching is also handling.\n==========================================================\n*/\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport Poppers from \"@material-ui/core/Popper\";\nimport { Icon, styles, MenuItem, MenuList, Grow, Paper, ClickAwayListener, Hidden, Divider, withStyles, Avatar, Select, FormGroup, InputLabel, FormControl, Input, CircularProgress } from \"@material-ui/core/\"; // @material-ui/icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\nimport SelectAllTwoTone from \"@material-ui/icons/SelectAllTwoTone\"; // core components\n\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport headerLinksStyle from \"assets/jss/material-dashboard-react/components/headerLinksStyle.jsx\";\nimport dummy from \"assets/img/dummy.png\";\nimport { sizeHeight } from \"@material-ui/system\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseRoutes, basePath } from \"base-routes\";\nimport { layout } from \"admin-routes\";\nimport { userService } from \"_services/user.service\";\nimport { DEFAULT_PROFILE_IMG, NO_USERNAME } from \"__helpers/constants\";\nimport GridItem from \"components/Grid/GridItem\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport dropdown from \"assets/img/dropdown.png\";\nimport { withRouter } from 'react-router';\nimport { connect } from \"react-redux\";\nimport { reduxLoad as _reduxLoad, addTimeStamp as _addTimeStamp, countryList as _countryList, globalLists as _globalLists } from \"../../js/actions/index\";\nimport { ANALYTICS_CSV_DATA } from \"__helpers/constants\";\nimport { ANALYTICS_CSV_ADVERTISEMENT_DATA } from \"__helpers/constants\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    countryList: function countryList(countryListVal) {\n      return dispatch(_countryList(countryListVal));\n    },\n    globalLists: function globalLists(globalListsVal) {\n      return dispatch(_globalLists(globalListsVal));\n    },\n    addTimeStamp: function addTimeStamp(addTimeStampVal) {\n      return dispatch(_addTimeStamp(addTimeStampVal));\n    },\n    reduxLoad: function reduxLoad(reduxLoadVal) {\n      return dispatch(_reduxLoad(reduxLoadVal));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(\"StateVal \"+JSON.stringify(state));\n  return {\n    userInfo: state.userInfo,\n    loadingFlag: state.loadingFlag,\n    timestamp: state.timestamp,\n    reduxLoadFlag: state.reduxLoadFlag,\n    globalLists: state.globalLists\n  };\n};\n\nvar AdnetworkSelectFn = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdnetworkSelectFn, _React$Component);\n\n  var _super = _createSuper(AdnetworkSelectFn);\n\n  function AdnetworkSelectFn(props) {\n    var _this;\n\n    _classCallCheck(this, AdnetworkSelectFn);\n\n    _this = _super.call(this, props);\n\n    _this.handleToggleNotification = function () {\n      _this._isMounted && _this.setState(function (state) {\n        return {\n          openNotifcation: !state.openNotifcation,\n          reduxLoadFlag: false\n        };\n      });\n    };\n\n    _this.handleCloseNotification = function (event) {\n      if (_this.anchorNotification.contains(event.target)) {\n        return;\n      }\n\n      _this.setState({\n        openNotifcation: false\n      });\n    };\n\n    _this._isMounted = false;\n    var spinner = document.getElementById('loadingSpinner');\n    _this.state = {\n      openNotifcation: false,\n      loadSpinner: false,\n      spinner: spinner,\n      loading: false,\n      articles: [],\n      userInfo: [],\n      adNetwork: [],\n      loadingFlag: false,\n      adCategories: [],\n      adBrands: [],\n      adStatus: [],\n      adMedium: [],\n      adType: [],\n      assetType: [],\n      assetDisplayType: [],\n      campaignStatus: [],\n      advertisements: [],\n      campaings: [],\n      assets: [],\n      vendors: [],\n      timestamp: \"\",\n      reduxLoadFlag: false\n    };\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AdnetworkSelectFn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.state.spinner.setAttribute('hidden', 'true');\n      this.fetchData();\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var globalLists, apiUrl, pollutionData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // alert(\"mm\")\n                this.props.reduxLoad(true);\n                globalLists = {};\n                apiUrl = \"http://35.193.238.179:9090/api/pollution/data\";\n                _context.next = 5;\n                return userService.fetchGlobalApisWithoutAuth(apiUrl);\n\n              case 5:\n                pollutionData = _context.sent;\n                globalLists.pollutionData = pollutionData;\n                this.props.globalLists(globalLists);\n                console.log(pollutionData);\n                setTimeout(function () {\n                  this.props.reduxLoad(true); // this.state.spinner.setAttribute('hidden', 'true');\n                  // localStorage.setItem(DATA_LOADING, true);\n                }.bind(this), 500);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"handleSelectAdnetwork\",\n    value: function handleSelectAdnetwork(eventId) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          openNotifcation = _this$state.openNotifcation,\n          openProfile = _this$state.openProfile,\n          adnetworkId = _this$state.adnetworkId,\n          adnetworkData = _this$state.adnetworkData,\n          adNetworkJson = _this$state.adNetworkJson;\n      var user_image = \"user-image\";\n      var styleuser = {\n        borderRadius: \"50%\",\n        width: \"35px\",\n        height: \"35px\"\n      };\n      var userNameStyle = {\n        \"float\": \"right\",\n        display: \"block\",\n        width: \"calc(100% - 50px)\",\n        color: \"#000\",\n        fontSize: \"13px\",\n        fontWeight: \"500\",\n        lineHeight: \"normal\",\n        marginTop: \"10px\"\n      };\n      var logoutStyle = {\n        \"float\": \"right\",\n        display: \"block\",\n        width: \"calc(100% - 50px)\",\n        color: \"#2b73cd\",\n        fontSize: \"13px\",\n        fontWeight: \"500\",\n        lineHeight: \"normal\",\n        marginTop: \"4px\"\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"addNetworkBtnCover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AdnetworkSelectFn;\n}(React.Component);\n\nAdnetworkSelectFn.propTypes = {\n  classes: PropTypes.object\n};\nvar AdnetworkSelect = connect(mapStateToProps, mapDispatchToProps)(AdnetworkSelectFn);\nexport default withStyles(headerLinksStyle)(AdnetworkSelect);","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/components/Sidebar/AdnetworkSelect.jsx"],"names":["React","PropTypes","classNames","Poppers","Icon","styles","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Divider","withStyles","Avatar","Select","FormGroup","InputLabel","FormControl","Input","CircularProgress","Person","Notifications","Dashboard","Search","SelectAllTwoTone","CustomInput","Button","headerLinksStyle","dummy","sizeHeight","Link","useHistory","baseRoutes","basePath","layout","userService","DEFAULT_PROFILE_IMG","NO_USERNAME","GridItem","GridContainer","dropdown","withRouter","connect","reduxLoad","addTimeStamp","countryList","globalLists","ANALYTICS_CSV_DATA","ANALYTICS_CSV_ADVERTISEMENT_DATA","mapDispatchToProps","dispatch","countryListVal","globalListsVal","addTimeStampVal","reduxLoadVal","mapStateToProps","state","userInfo","loadingFlag","timestamp","reduxLoadFlag","AdnetworkSelectFn","props","handleToggleNotification","_isMounted","setState","openNotifcation","handleCloseNotification","event","anchorNotification","contains","target","spinner","document","getElementById","loadSpinner","loading","articles","adNetwork","adCategories","adBrands","adStatus","adMedium","adType","assetType","assetDisplayType","campaignStatus","advertisements","campaings","assets","vendors","fetchData","bind","setAttribute","apiUrl","fetchGlobalApisWithoutAuth","pollutionData","console","log","setTimeout","eventId","classes","openProfile","adnetworkId","adnetworkData","adNetworkJson","user_image","styleuser","borderRadius","width","height","userNameStyle","display","color","fontSize","fontWeight","lineHeight","marginTop","logoutStyle","Component","propTypes","object","AdnetworkSelect"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Material Dashboard React - v1.7.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/* \n==========================================================\n* In this class Ad-Network selection and all api's related to adnetwork services are used\n* Redux data setup and data fetching is also handling.\n==========================================================\n*/\nimport React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport Poppers from \"@material-ui/core/Popper\";\nimport {\n  Icon,\n  styles,\n  MenuItem,\n  MenuList,\n  Grow,\n  Paper,\n  ClickAwayListener,\n  Hidden,\n  Divider,\n  withStyles,\n  Avatar,\n  Select,\n  FormGroup,\n  InputLabel,\n  FormControl,\n  Input,\n  CircularProgress\n} from \"@material-ui/core/\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\nimport SelectAllTwoTone from \"@material-ui/icons/SelectAllTwoTone\";\n\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport headerLinksStyle from \"assets/jss/material-dashboard-react/components/headerLinksStyle.jsx\";\nimport dummy from \"assets/img/dummy.png\";\nimport { sizeHeight } from \"@material-ui/system\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseRoutes, basePath } from \"base-routes\";\nimport { layout } from \"admin-routes\";\nimport { userService } from \"_services/user.service\";\nimport { DEFAULT_PROFILE_IMG, NO_USERNAME } from \"__helpers/constants\";\nimport GridItem from \"components/Grid/GridItem\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport dropdown from \"assets/img/dropdown.png\";\nimport { withRouter } from 'react-router'\n\nimport { connect } from \"react-redux\";\nimport {\n  reduxLoad,\n  addTimeStamp,\n\n  countryList,\n  globalLists,\n} from \"../../js/actions/index\";\nimport { ANALYTICS_CSV_DATA } from \"__helpers/constants\";\nimport { ANALYTICS_CSV_ADVERTISEMENT_DATA } from \"__helpers/constants\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    countryList: countryListVal => dispatch(countryList(countryListVal)),\n    globalLists: globalListsVal => dispatch(globalLists(globalListsVal)),\n    addTimeStamp: addTimeStampVal => dispatch(addTimeStamp(addTimeStampVal)),\n    reduxLoad: reduxLoadVal => dispatch(reduxLoad(reduxLoadVal)),\n  };\n}\nconst mapStateToProps = state => {\n  // console.log(\"StateVal \"+JSON.stringify(state));\n  return {\n    userInfo: state.userInfo,\n    loadingFlag: state.loadingFlag,\n    timestamp: state.timestamp,\n    reduxLoadFlag: state.reduxLoadFlag,\n    globalLists: state.globalLists,\n  };\n};\nclass AdnetworkSelectFn extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    let spinner = document.getElementById('loadingSpinner');\n    this.state = {\n      openNotifcation: false,\n      \n      loadSpinner: false,\n      spinner: spinner,\n      loading: false,\n\n      articles: [],\n      userInfo: [],\n      adNetwork: [],\n      loadingFlag: false,\n      adCategories: [],\n      adBrands: [],\n      adStatus: [],\n      adMedium: [],\n      adType: [],\n      assetType: [],\n      assetDisplayType: [],\n      campaignStatus: [],\n      advertisements: [],\n      campaings: [],\n      assets: [],\n      vendors: [],\n      timestamp: \"\",\n      reduxLoadFlag: false,\n    };\n    this.fetchData = this.fetchData.bind(this)\n  }\n  componentDidMount() {\n    this.state.spinner.setAttribute('hidden', 'true');\n    this.fetchData();\n  }\n  async fetchData() {\n    // alert(\"mm\")\n    this.props.reduxLoad(true);\n    let globalLists = {};\n    let apiUrl = \"http://35.193.238.179:9090/api/pollution/data\";\n    let pollutionData = await userService.fetchGlobalApisWithoutAuth(apiUrl);\n    globalLists.pollutionData = pollutionData;\n\n    this.props.globalLists(globalLists);\n    console.log(pollutionData)\n    setTimeout(function () {\n      this.props.reduxLoad(true);\n      // this.state.spinner.setAttribute('hidden', 'true');\n      // localStorage.setItem(DATA_LOADING, true);\n    }.bind(this), 500);\n  }\n  handleToggleNotification = () => {\n    this._isMounted && this.setState(state => ({\n      openNotifcation: !state.openNotifcation,\n      reduxLoadFlag: false,\n    }));\n  };\n  handleCloseNotification = event => {\n    if (this.anchorNotification.contains(event.target)) {\n      return;\n    }\n    this.setState({ openNotifcation: false });\n  };\n  handleSelectAdnetwork(eventId) {\n  }\n  render() {\n    const { classes } = this.props;\n    const { openNotifcation, openProfile, adnetworkId, adnetworkData, adNetworkJson } = this.state;\n    const user_image = \"user-image\";\n    const styleuser = {\n      borderRadius: \"50%\",\n      width: \"35px\",\n      height: \"35px\"\n    };\n    const userNameStyle = {\n      float: \"right\",\n      display: \"block\",\n      width: \"calc(100% - 50px)\",\n      color: \"#000\",\n      fontSize: \"13px\",\n      fontWeight: \"500\",\n      lineHeight: \"normal\",\n      marginTop: \"10px\"\n    };\n    const logoutStyle = {\n      float: \"right\",\n      display: \"block\",\n      width: \"calc(100% - 50px)\",\n      color: \"#2b73cd\",\n      fontSize: \"13px\",\n      fontWeight: \"500\",\n      lineHeight: \"normal\",\n      marginTop: \"4px\"\n    };\n    return (\n      <div className=\"addNetworkBtnCover\">\n      </div>\n    );\n  }\n}\n\nAdnetworkSelectFn.propTypes = {\n  classes: PropTypes.object\n};\n\nconst AdnetworkSelect = connect(\n  mapStateToProps, mapDispatchToProps\n)(AdnetworkSelectFn);\nexport default withStyles(headerLinksStyle)(AdnetworkSelect);\n"]},"metadata":{},"sourceType":"module"}