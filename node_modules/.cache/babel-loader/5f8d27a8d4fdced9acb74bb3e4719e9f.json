{"ast":null,"code":"import _objectSpread from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { REDUX_LOAD, DATA_LOADING_REDUX, STORED_TIMESTAMP, USER_INFO_REDUX, FETCH_PROJECT_LIST, FETCH_COUNTRY_LIST, FETCH_CATEGORY_LIST, FETCH_GLOBAL_LIST } from \"../constants/action-types\";\nvar initialState = {\n  reduxLoadFlag: false,\n  userInfo: [],\n  loadingFlag: false,\n  timestamp: \"\",\n  projectList: [],\n  categoryList: [],\n  countryList: [],\n  globalList: []\n};\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REDUX_LOAD:\n      var reduxLoadFlag = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reduxLoadFlag: reduxLoadFlag\n      });\n\n    case USER_INFO_REDUX:\n      var userInfo = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userInfo: userInfo\n      });\n\n    case DATA_LOADING_REDUX:\n      var loadingFlag = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingFlag: loadingFlag\n      });\n\n    case STORED_TIMESTAMP:\n      var timestamp = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        timestamp: timestamp\n      });\n    // OTHER REDUX METHODS\n\n    case FETCH_CATEGORY_LIST:\n      var categoryList = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categoryList: categoryList\n      });\n\n    case FETCH_COUNTRY_LIST:\n      var countryList = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        countryList: countryList\n      });\n\n    case FETCH_GLOBAL_LIST:\n      var globalList = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        globalList: globalList\n      });\n\n    case FETCH_PROJECT_LIST:\n      var projectList = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        projectList: projectList\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/js/reducers/index.js"],"names":["REDUX_LOAD","DATA_LOADING_REDUX","STORED_TIMESTAMP","USER_INFO_REDUX","FETCH_PROJECT_LIST","FETCH_COUNTRY_LIST","FETCH_CATEGORY_LIST","FETCH_GLOBAL_LIST","initialState","reduxLoadFlag","userInfo","loadingFlag","timestamp","projectList","categoryList","countryList","globalList","rootReducer","state","action","type","payload"],"mappings":";AAAA,SACIA,UADJ,EAEIC,kBAFJ,EAGIC,gBAHJ,EAIIC,eAJJ,EAKIC,kBALJ,EAMIC,kBANJ,EAOIC,mBAPJ,EAQIC,iBARJ,QASO,2BATP;AAWA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,WAAW,EAAE,KAHI;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,WAAW,EAAE,EALI;AAMjBC,EAAAA,YAAY,EAAE,EANG;AAOjBC,EAAAA,WAAW,EAAE,EAPI;AAQjBC,EAAAA,UAAU,EAAE;AARK,CAArB;;AAWA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBV,YAAsB;AAAA,MAARW,MAAQ;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,UAAL;AACI,UAAMS,aAAa,GAAGU,MAAM,CAACE,OAA7B;AACA,6CACOH,KADP;AAEIT,QAAAA,aAAa,EAAbA;AAFJ;;AAKJ,SAAKN,eAAL;AACI,UAAMO,QAAQ,GAAGS,MAAM,CAACE,OAAxB;AACA,6CACOH,KADP;AAEIR,QAAAA,QAAQ,EAARA;AAFJ;;AAKJ,SAAKT,kBAAL;AACI,UAAMU,WAAW,GAAGQ,MAAM,CAACE,OAA3B;AACA,6CACOH,KADP;AAEIP,QAAAA,WAAW,EAAXA;AAFJ;;AAKJ,SAAKT,gBAAL;AACI,UAAMU,SAAS,GAAGO,MAAM,CAACE,OAAzB;AACA,6CACOH,KADP;AAEIN,QAAAA,SAAS,EAATA;AAFJ;AAMA;;AACJ,SAAKN,mBAAL;AACI,UAAMQ,YAAY,GAAGK,MAAM,CAACE,OAA5B;AACA,6CACOH,KADP;AAEIJ,QAAAA,YAAY,EAAZA;AAFJ;;AAKJ,SAAKT,kBAAL;AACI,UAAMU,WAAW,GAAGI,MAAM,CAACE,OAA3B;AACA,6CACOH,KADP;AAEIH,QAAAA,WAAW,EAAXA;AAFJ;;AAIJ,SAAKR,iBAAL;AACI,UAAMS,UAAU,GAAGG,MAAM,CAACE,OAA1B;AACA,6CACOH,KADP;AAEIF,QAAAA,UAAU,EAAVA;AAFJ;;AAIJ,SAAKZ,kBAAL;AACI,UAAMS,WAAW,GAAGM,MAAM,CAACE,OAA3B;AACA,6CACOH,KADP;AAEIL,QAAAA,WAAW,EAAXA;AAFJ;;AAKJ;AACI;AA1DR;;AA4DA,SAAOK,KAAP;AACH;;AACD,eAAeD,WAAf","sourcesContent":["import {\n    REDUX_LOAD,\n    DATA_LOADING_REDUX,\n    STORED_TIMESTAMP,\n    USER_INFO_REDUX,\n    FETCH_PROJECT_LIST,\n    FETCH_COUNTRY_LIST,\n    FETCH_CATEGORY_LIST,\n    FETCH_GLOBAL_LIST,\n} from \"../constants/action-types\";\n\nconst initialState = {\n    reduxLoadFlag: false,\n    userInfo: [],\n    loadingFlag: false,\n    timestamp: \"\",\n    projectList: [],\n    categoryList: [],\n    countryList: [],\n    globalList: [],\n};\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case REDUX_LOAD:\n            const reduxLoadFlag = action.payload;\n            return {\n                ...state,\n                reduxLoadFlag\n            };\n\n        case USER_INFO_REDUX:\n            const userInfo = action.payload;\n            return {\n                ...state,\n                userInfo\n            };\n\n        case DATA_LOADING_REDUX:\n            const loadingFlag = action.payload;\n            return {\n                ...state,\n                loadingFlag\n            };\n\n        case STORED_TIMESTAMP:\n            const timestamp = action.payload;\n            return {\n                ...state,\n                timestamp\n            };\n\n\n            // OTHER REDUX METHODS\n        case FETCH_CATEGORY_LIST:\n            const categoryList = action.payload;\n            return {\n                ...state,\n                categoryList\n            };\n\n        case FETCH_COUNTRY_LIST:\n            const countryList = action.payload;\n            return {\n                ...state,\n                countryList\n            };\n        case FETCH_GLOBAL_LIST:\n            const globalList = action.payload;\n            return {\n                ...state,\n                globalList\n            };\n        case FETCH_PROJECT_LIST:\n            const projectList = action.payload;\n            return {\n                ...state,\n                projectList\n            };\n\n        default:\n            break;\n    }\n    return state;\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}