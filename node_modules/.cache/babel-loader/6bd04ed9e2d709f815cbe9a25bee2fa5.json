{"ast":null,"code":"import _defineProperty from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/components/Sidebar/Sidebar.jsx\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\nimport baseRoutes from \"base-routes\";\nimport { Link } from \"react-router-dom\";\nimport { basePath } from \"base-routes\";\nimport AdnetworkSelect from \"./AdnetworkSelect\";\nimport { Button } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dropdown from \"assets/img/dropdown.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nvar Sidebar = function Sidebar(_ref) {\n  var props = Object.assign({}, _ref);\n\n  // verifies if routeName is the one active (in browser input)\n  var _React$useState = React.useState(180),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rotationVal = _React$useState2[0],\n      setRotationVal = _React$useState2[1]; // const [showMenu, setShowMenu] = React.useState(selectedAdnetwork ? true : false);\n\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showMenu = _React$useState4[0],\n      setShowMenu = _React$useState4[1]; // console.log(showMenu);\n\n\n  var activeRouteName = [];\n\n  function activeRoute(routeName) {\n    // if (routeName == baseRoutes.dashboard || routeName == baseRoutes.admin) {\n    // }\n    return window.location.pathname.indexOf(routeName) > -1 ? true : false; // return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var classes = props.classes,\n      routes = props.routes,\n      logoText = props.logoText,\n      color = props.color,\n      logo = props.logo,\n      image = props.image;\n  var _cusSidebar = \"cus-sidebar\",\n      cusSidebar = _cusSidebar.cusSidebar;\n\n  function openDropDown() {\n    showMenu ? setRotationVal(180) : setRotationVal(0); // showMenu ? setShowMenu(false) : setShowMenu(true);\n  }\n\n  var spinStyle = {\n    color: \"#fff !important\",\n    verticalAlign: \"middle\",\n    height: 20,\n    width: 20,\n    transform: \"rotate(\".concat(rotationVal, \"deg)\")\n  };\n  var linksMenu = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, routes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n    } else {\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color] + \" cusSelected\", activeRoute(prop.basePath +\n      /* prop.layout + */\n      prop.path)));\n    }\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.basePath +\n    /* prop.layout + */\n    prop.path)) + ' sidebarLeftNavLink');\n\n    if (prop.showInSideBar == true && prop.name == \"Ad Networks\") {\n      activeRouteName.push(activeRoute(prop.basePath +\n      /* prop.layout + */\n      prop.path) ? prop.name : \"\");\n      return /*#__PURE__*/React.createElement(NavLink, {\n        to: prop.basePath +\n        /* prop.layout + */\n        prop.path,\n        className: activePro + classes.item,\n        activeClassName: \"active\",\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        className: classes.itemLink + listItemClasses,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, typeof prop.icon === \"string\" ? /*#__PURE__*/React.createElement(Icon, {\n        className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, prop.icon) : /*#__PURE__*/React.createElement(prop.icon, {\n        className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: props.rtlActive ? prop.rtlName : prop.name,\n        className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n        disableTypography: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      })));\n    }\n  }));\n  var links =\n  /*#__PURE__*/\n  // <List className={classes.list} style={{backgroundColor: \"#EDEDED\", marginRight: 18, marginLeft: 18, marginTop: 3}}>\n  React.createElement(List, {\n    className: classes.list + \" Sidebar-list-14\",\n    style: {\n      marginRight: 18,\n      marginLeft: 18,\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, routes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n    } else {\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color] + \" cusSelected\", activeRoute(prop.basePath +\n      /* prop.layout + */\n      prop.path)));\n    }\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.basePath +\n    /* prop.layout + */\n    prop.path)) + ' sidebarLeftNavLink');\n\n    if (prop.showInSideBar == true && prop.name != \"Ad Networks\") {\n      activeRouteName.push(activeRoute(prop.basePath +\n      /* prop.layout + */\n      prop.path) ? prop.name : \"\");\n      return /*#__PURE__*/React.createElement(NavLink, {\n        to: prop.basePath +\n        /* prop.layout + */\n        prop.path,\n        className: activePro + classes.item,\n        activeClassName: \"active\",\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        className: classes.itemLink + listItemClasses,\n        style: {\n          margin: 0\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, typeof prop.icon === \"string\" ? /*#__PURE__*/React.createElement(Icon, {\n        className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, prop.icon) : /*#__PURE__*/React.createElement(prop.icon, {\n        className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: props.rtlActive ? prop.rtlName : prop.name,\n        className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n        disableTypography: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      })));\n    }\n  }));\n  var brand = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logo + \" Sidebar-logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link //href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n  // href={\"http://localhost:3000/admin/dashboard\"}\n  , {\n    to: baseRoutes.dashboard.path,\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)) + \" Sidebar-logoLink\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoImage + ' Sidebar-logoImage',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  })), logoText));\n  activeRouteName = activeRouteName.filter(function (val) {\n    return val !== \"\";\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    side: \"right\",\n    anchor: props.rtlActive ? \"left\" : \"left\",\n    open: props.open,\n    classes: {\n      paper: classNames(_defineProperty({}, classes.drawerPaperRTL, props.rtlActive)) + \" sidebar-cover\"\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    } // style={{left: \"0px\",right:\"auto !important\"}}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarWrapper + ' Sidebar-sidebarWrapper',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, brand, linksMenu, /*#__PURE__*/React.createElement(NavLink, {\n    className: classes.item + \" active\",\n    activeClassName: \"active\",\n    to: \"#\",\n    onClick: function onClick() {\n      return openDropDown();\n    } // style={{margin: 10, textAlign: \"left\"}}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.itemLink + \" cusSelected setPadding\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AdnetworkSelect, {\n    style: {\n      zIndex: \"99999\"\n    },\n    updateUserInfo: props.updateUserInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: \"#000\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, links), props.rtlActive ? /*#__PURE__*/React.createElement(RTLNavbarLinks, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(AdminNavbarLinks, {\n    userDetail: props.userDetail,\n    updateUserInfo: props.updateUserInfo,\n    saveDataToLocalStorage: props.saveDataToLocalStorage,\n    localStorageData: props.localStorageData,\n    sendAdnetworkData: props.sendAdnetworkData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  })), image !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.background + \" \" + cusSidebar + ' themeBgChange',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive)) + \" sidebar-cover\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, brand, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarWrapper + ' Sidebar-sidebarWrapper newsidebar',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, linksMenu, /*#__PURE__*/React.createElement(NavLink, {\n    className: classes.item + \" active\",\n    activeClassName: \"active\",\n    to: \"#\" // onClick={() => openDropDown()}\n    // style={{margin: 10, textAlign: \"left\"}}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.itemLink + \" cusSelected setPadding\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AdnetworkSelect, {\n    style: {\n      zIndex: \"99999\"\n    },\n    updateUserInfo: props.updateUserInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: \"#000\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, links)), image !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.background + \" \" + cusSidebar + ' themeBgChange',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }) : null)));\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool,\n  userDetail: PropTypes.object,\n  updateUserInfo: PropTypes.func,\n  saveDataToLocalStorage: PropTypes.func,\n  localStorageData: PropTypes.object,\n  sendAdnetworkData: PropTypes.func // style\n\n};\nexport default withStyles(sidebarStyle)(Sidebar);","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/components/Sidebar/Sidebar.jsx"],"names":["React","classNames","PropTypes","NavLink","withStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","sidebarStyle","baseRoutes","Link","basePath","AdnetworkSelect","Button","SettingsIcon","ExpandMoreIcon","dropdown","useSelector","useDispatch","Sidebar","props","useState","rotationVal","setRotationVal","showMenu","setShowMenu","activeRouteName","activeRoute","routeName","window","location","pathname","indexOf","classes","routes","logoText","color","logo","image","cusSidebar","openDropDown","spinStyle","verticalAlign","height","width","transform","linksMenu","list","map","prop","key","activePro","listItemClasses","path","whiteFontClasses","whiteFont","showInSideBar","name","push","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","itemText","itemTextRTL","links","marginRight","marginLeft","marginTop","margin","brand","dashboard","logoLink","logoLinkRTL","logoImage","img","filter","val","open","paper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","zIndex","updateUserInfo","backgroundColor","userDetail","saveDataToLocalStorage","localStorageData","sendAdnetworkData","undefined","background","drawerPaper","propTypes","object","isRequired","bool","func","bgColor","oneOf","string","arrayOf"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\n\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\nimport baseRoutes from \"base-routes\";\nimport { Link } from \"react-router-dom\";\nimport { basePath } from \"base-routes\";\nimport AdnetworkSelect from \"./AdnetworkSelect\";\nimport { Button } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dropdown from \"assets/img/dropdown.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nconst Sidebar = ({ ...props }) => {\n  // verifies if routeName is the one active (in browser input)\n  const [rotationVal, setRotationVal] = React.useState(180);\n// const [showMenu, setShowMenu] = React.useState(selectedAdnetwork ? true : false);\n  const [showMenu, setShowMenu] = React.useState(true);\n\n  // console.log(showMenu);\n  let activeRouteName = [];\n  function activeRoute(routeName) {\n    // if (routeName == baseRoutes.dashboard || routeName == baseRoutes.admin) {\n    // }\n    return window.location.pathname.indexOf(routeName) > -1 ? true : false;\n    // return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { classes, routes, logoText, color, logo, image } = props;\n  const { cusSidebar } = \"cus-sidebar\";\n  function openDropDown() {\n    showMenu ? setRotationVal(180) : setRotationVal(0);\n    // showMenu ? setShowMenu(false) : setShowMenu(true);\n  }\n  const spinStyle = ({color: \"#fff !important\", verticalAlign: \"middle\", height: 20, width: 20, transform: `rotate(${rotationVal}deg)`}); \n  var linksMenu = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color] + \" cusSelected\"]: activeRoute(\n              prop.basePath + /* prop.layout + */ prop.path\n            )\n          });\n        }\n\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(\n            prop.basePath + /* prop.layout + */ prop.path\n          )\n        } + ' sidebarLeftNavLink');\n        if (prop.showInSideBar == true && (prop.name == \"Ad Networks\")) {\n          activeRouteName.push(activeRoute(\n            prop.basePath + /* prop.layout + */ prop.path\n          )\n            ? prop.name\n            : \"\");\n          return (\n            <NavLink\n              to={prop.basePath + /* prop.layout + */ prop.path}\n              className={activePro + classes.item}\n              activeClassName=\"active\"\n              key={key}\n            >\n              <ListItem button className={classes.itemLink + listItemClasses}>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    })}\n                  >\n                    {prop.icon}\n                  </Icon>\n                ) : (\n                  <prop.icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    })}\n                  />\n                )}\n                <ListItemText\n                  primary={props.rtlActive ? prop.rtlName : prop.name}\n                  className={classNames(classes.itemText, whiteFontClasses, {\n                    [classes.itemTextRTL]: props.rtlActive\n                  })}\n                  disableTypography={true}\n                />\n              </ListItem>\n            </NavLink>\n          );\n        }\n      })}\n    </List>\n  );\n  var links = (\n    // <List className={classes.list} style={{backgroundColor: \"#EDEDED\", marginRight: 18, marginLeft: 18, marginTop: 3}}>\n    <List className={classes.list + \" Sidebar-list-14\"} style={{marginRight: 18, marginLeft: 18, marginTop: 3}}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color] + \" cusSelected\"]: activeRoute(\n              prop.basePath + /* prop.layout + */ prop.path\n            )\n          });\n        }\n\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(\n            prop.basePath + /* prop.layout + */ prop.path\n          )\n        } + ' sidebarLeftNavLink');\n        if (prop.showInSideBar == true && (prop.name != \"Ad Networks\")) {\n          activeRouteName.push(activeRoute(\n            prop.basePath + /* prop.layout + */ prop.path\n          )\n            ? prop.name\n            : \"\");\n          return (\n            <NavLink\n              to={prop.basePath + /* prop.layout + */ prop.path}\n              className={activePro + classes.item}\n              activeClassName=\"active\"\n              key={key}\n            >\n              <ListItem button className={classes.itemLink + listItemClasses} style={{margin: 0}}>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    })}\n                  >\n                    {prop.icon}\n                  </Icon>\n                ) : (\n                  <prop.icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    })}\n                  />\n                )}\n                <ListItemText\n                  primary={props.rtlActive ? prop.rtlName : prop.name}\n                  className={classNames(classes.itemText, whiteFontClasses, {\n                    [classes.itemTextRTL]: props.rtlActive\n                  })}\n                  disableTypography={true}\n                />\n              </ListItem>\n            </NavLink>\n          );\n        }\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo + \" Sidebar-logo\"}>\n      <Link\n        //href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n        // href={\"http://localhost:3000/admin/dashboard\"}\n        to={baseRoutes.dashboard.path}\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        }) + \" Sidebar-logoLink\"}\n      >\n        <div className={classes.logoImage + ' Sidebar-logoImage'}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n          {/* <p className={classes.img}>Challenging Wonders</p> */}\n        </div>\n        {logoText}\n      </Link>\n    </div>\n  );\n  activeRouteName = activeRouteName.filter(val => val !== \"\");\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          side=\"right\"\n          anchor={props.rtlActive ? \"left\" : \"left\"}\n          open={props.open}\n          classes={{\n            paper:\n              classNames({\n                [classes.drawerPaperRTL]: props.rtlActive\n              }) + \" sidebar-cover\"\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n          // style={{left: \"0px\",right:\"auto !important\"}}\n        >\n          {/* {brand} */}\n          <div className={classes.sidebarWrapper + ' Sidebar-sidebarWrapper'}>\n            {brand}\n            {/* <AdnetworkSelect style={{zIndex: \"99999\"}} updateUserInfo={props.updateUserInfo} /> */}\n            {/* {links} */}\n            {linksMenu}\n            <NavLink\n              className={classes.item+ \" active\"}\n              activeClassName=\"active\"\n              to=\"#\"\n              onClick={() => openDropDown()}\n              // style={{margin: 10, textAlign: \"left\"}}\n              >\n              <ListItem button className={classes.itemLink + \" cusSelected setPadding\"}>\n                {/* <SettingsIcon\n                  className={classNames(classes.itemIcon, 'sidebarLeftNavLink')}\n                  style={{color: \"#fff !important\"}}\n                />\n                <ListItemText\n                  primary=\"AdNetwork Services\"\n                  className={classNames(classes.itemText, 'sidebarLeftNavLink')}\n                  disableTypography={true}\n                  style={{display: 'inline-block', alignSelf: 'top'}}\n                />\n                 <ExpandMoreIcon\n                    className={classNames(classes.itemText, 'sidebarLeftNavLink')}\n                    style={{color: \"#fff !important\", verticalAlign: \"middle\", height: 20, width: 20}}\n                    />  */}\n                    <AdnetworkSelect style={{zIndex: \"99999\"}} updateUserInfo={props.updateUserInfo} />\n              </ListItem>\n            </NavLink>\n            <span style={{backgroundColor: \"#000\"}}>\n              {links}\n            </span>\n            {props.rtlActive ? (\n              <RTLNavbarLinks />\n            ) : (\n              <AdminNavbarLinks\n              userDetail={props.userDetail}\n              updateUserInfo={props.updateUserInfo}\n              saveDataToLocalStorage={props.saveDataToLocalStorage}\n              localStorageData={props.localStorageData}\n              sendAdnetworkData = {props.sendAdnetworkData}\n            />\n            )}\n            \n          </div>\n          {image !== undefined ? (\n            <div className={classes.background + \" \" + cusSidebar + ' themeBgChange'} />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper:\n              classNames(classes.drawerPaper, {\n                [classes.drawerPaperRTL]: props.rtlActive\n              }) + \" sidebar-cover\"\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper + ' Sidebar-sidebarWrapper newsidebar'}>\n            {/* <NavLink\n                className={classes.item+ \" active\"}\n                activeClassName=\"active\"\n                to=\"#\"\n                >\n              <ListItem button className={classes.itemLink + \" cusSelectedBtn\"}>\n                <AdnetworkSelect style={{zIndex: \"99999\"}} updateUserInfo={props.updateUserInfo} />\n              </ListItem>\n            </NavLink> */}\n            {linksMenu}\n            <NavLink\n              className={classes.item+ \" active\"}\n              activeClassName=\"active\"\n              to=\"#\"\n              // onClick={() => openDropDown()}\n              // style={{margin: 10, textAlign: \"left\"}}\n              >\n              <ListItem button className={classes.itemLink + \" cusSelected setPadding\"}>\n                {/* <SettingsIcon\n                  className={classNames(classes.itemIcon, 'sidebarLeftNavLink')}\n                  style={{color: \"#fff !important\"}}\n                /> */}\n                <AdnetworkSelect style={{zIndex: \"99999\"}} updateUserInfo={props.updateUserInfo} />\n                 {/* <ExpandMoreIcon\n                    className={classNames(classes.itemText, 'sidebarLeftNavLink')}\n                    style={spinStyle}\n                    />  */}\n              </ListItem>\n            </NavLink>\n            <span style={{backgroundColor: \"#000\"}}>\n              {links}\n            </span>\n          </div>\n          {image !== undefined ? (\n            <div className={classes.background + \" \" + cusSidebar + ' themeBgChange'} />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool,\n  userDetail: PropTypes.object,\n  updateUserInfo: PropTypes.func,\n  saveDataToLocalStorage: PropTypes.func,\n  localStorageData: PropTypes.object,\n  sendAdnetworkData: PropTypes.func,\n  // style\n};\n\nexport default withStyles(sidebarStyle)(Sidebar);"]},"metadata":{},"sourceType":"module"}