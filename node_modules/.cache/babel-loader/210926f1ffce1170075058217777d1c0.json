{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/components/Login/ForgotPassword.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"assets/css/login.css\";\nimport logo from \"assets/img/logo.png\";\nimport baseRoutes from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport { apiPath } from \"api\";\nimport fetch from \"isomorphic-fetch\";\nimport ReactNotification from \"react-notifications-component\";\nimport { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport { NotificationOptions, EMAIL_REGEX, INVALID_DATA_POST, OK_SUCCESS_STATUS } from \"__helpers/constants\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // import { Button, FormGroup, FormControl, InputLabel } from \"react-bootstrap\";\n// import \"./Login.css\";\n\nvar ForgotPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  var _super = _createSuper(ForgotPassword);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _super.call(this, props);\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      emailValid: false,\n      formErrors: {\n        username: \"\",\n        password: \"\"\n      },\n      showNotification: {},\n      apiPath: apiPath.forgotPassword,\n      loading: false\n    };\n    _this.notificationID = null;\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleUserInput = _this.handleUserInput.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.email.length > 0;\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n\n      switch (fieldName) {\n        case \"email\":\n          emailValid = value.match(EMAIL_REGEX);\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n          break;\n\n        default:\n          emailValid = false;\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this2 = this;\n\n        var data, showNotification, response, notifiaciton;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                event.preventDefault();\n                data = {\n                  email: this.state.email\n                };\n                showNotification = {};\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(\"\".concat(this.state.apiPath + this.state.email), {\n                  method: \"GET\",\n                  // make it POST later when there is live api\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  // body: JSON.stringify(data), // remove comment later when there is live api\n                  data: JSON.stringify(data)\n                }).then(function (response) {\n                  if (response.status === INVALID_DATA_POST) {\n                    showNotification = {\n                      title: enMsg.requestFailed,\n                      message: enMsg.emailNotExist,\n                      type: \"danger\"\n                    };\n                    console.log(\"Login Failed.\", response);\n                  } else if (response.ok && response.status === OK_SUCCESS_STATUS) {\n                    showNotification = {\n                      title: enMsg.optSent,\n                      message: \"OTP is sent to \".concat(_this2.state.email),\n                      type: \"success\"\n                    };\n                    return response.json();\n                  } else {\n                    showNotification = {\n                      title: enMsg.requestFailed,\n                      message: enMsg.emailNotExist,\n                      type: \"danger\"\n                    };\n                    console.log(\"Login failed.\", response);\n                  }\n                }).then(function (data) {\n                  if (!data.length) {\n                    showNotification = {\n                      title: enMsg.requestFailed,\n                      message: enMsg.emailNotExist,\n                      type: \"danger\"\n                    };\n                  } // if (data.length){\n                  //   showNotification = {\n                  //     title: enMsg.successTitle,\n                  //     message: enMsg.resetLinkOTPsend,\n                  //     type: \"success\"\n                  //   };\n                  // }\n                  // this.props.history.push(basePath + baseRoutes.resetPassword.path);\n\n\n                  // if (data.length){\n                  //   showNotification = {\n                  //     title: enMsg.successTitle,\n                  //     message: enMsg.resetLinkOTPsend,\n                  //     type: \"success\"\n                  //   };\n                  // }\n                  // this.props.history.push(basePath + baseRoutes.resetPassword.path);\n                  return response;\n                })[\"catch\"](function (error) {\n                  console.log(error);\n                  showNotification = {\n                    title: enMsg.loginFailedTitle,\n                    message: enMsg.networkFailedError,\n                    type: \"danger\"\n                  };\n                  return response;\n                });\n\n              case 7:\n                response = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n                showNotification = {\n                  title: enMsg.loginFailedTitle,\n                  message: enMsg.networkFailedError,\n                  type: \"danger\"\n                };\n\n              case 13:\n                console.log(showNotification);\n\n                if (showNotification !== undefined && showNotification.title !== undefined && showNotification.message !== undefined && showNotification.type !== undefined) {\n                  this.notificationID = store.removeNotification(this.notificationID);\n\n                  if (this.notificationID === undefined) {\n                    notifiaciton = {\n                      title: showNotification.title,\n                      message: showNotification.message,\n                      type: showNotification.type\n                    };\n                    notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n                    this.notificationID = store.addNotification(notifiaciton);\n                  }\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 10]]);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-outer-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-inner-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ReactNotification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Email Address\",\n        type: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this3.handleUserInput(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.emailValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n      , {\n        color: \"primary\",\n        className: this.state.loading ? \"buttonSuccess\" : \"\",\n        disabled: this.state.loading || !this.validateForm(),\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, \"SUBMIT\", this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"back-btn\",\n        color: \"secondary\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        color: \"textSecondary\",\n        underline: \"none\",\n        className: \"cancel-back-btn\",\n        to: baseRoutes.login.path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 23\n        }\n      }, \"Back\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        href: baseRoutes.signup.path,\n        to: baseRoutes.signup.path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }, baseRoutes.signup.pathName))))))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nexport { ForgotPassword as default };","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/components/Login/ForgotPassword.jsx"],"names":["React","Component","Button","FormGroup","TextField","Link","logo","baseRoutes","FormErrors","apiPath","fetch","ReactNotification","store","NotificationOptions","EMAIL_REGEX","INVALID_DATA_POST","OK_SUCCESS_STATUS","enMsg","CircularProgress","ForgotPassword","props","handleUserInput","e","name","target","value","setState","validateField","state","email","emailValid","formErrors","username","password","showNotification","forgotPassword","loading","notificationID","handleSubmit","bind","length","fieldName","fieldValidationErrors","match","inValidEmail","validateForm","event","preventDefault","data","method","headers","JSON","stringify","then","response","status","title","requestFailed","message","emailNotExist","type","console","log","ok","optSent","json","error","loginFailedTitle","networkFailedError","undefined","removeNotification","notifiaciton","Object","assign","addNotification","login","path","signup","pathName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,SAA5B,QAA6C,mBAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,sBAAP;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,KAAxB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,OAAO,8CAAP;AACA,SACEC,mBADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,iBAJF,QAKO,qBALP;AAMA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;AACA;;IAEqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA0CnBC,eA1CmB,GA0CD,UAAAC,CAAC,EAAI;AACrB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;;AAEA,YAAKC,QAAL,qBAAiBH,IAAjB,EAAwBE,KAAxB,GAAiC,YAAM;AACrC,cAAKE,aAAL,CAAmBJ,IAAnB,EAAyBE,KAAzB;AACD,OAFD;AAGD,KAjDkB;;AAEjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAHD;AAIXC,MAAAA,gBAAgB,EAAE,EAJP;AAKXzB,MAAAA,OAAO,EAAEA,OAAO,CAAC0B,cALN;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAb;AAQA,UAAKC,cAAL,GAAsB,IAAtB;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKlB,eAAL,GAAuB,MAAKA,eAAL,CAAqBkB,IAArB,+BAAvB;AAbiB;AAclB;;;;WAED,wBAAe;AACb,aAAO,KAAKX,KAAL,CAAWC,KAAX,CAAiBW,MAAjB,GAA0B,CAAjC;AACD;;;WAED,uBAAcC,SAAd,EAAyBhB,KAAzB,EAAgC;AAC9B,UAAIiB,qBAAqB,GAAG,KAAKd,KAAL,CAAWG,UAAvC;AACA,UAAID,UAAU,GAAG,KAAKF,KAAL,CAAWE,UAA5B;;AAEA,cAAQW,SAAR;AACE,aAAK,OAAL;AACEX,UAAAA,UAAU,GAAGL,KAAK,CAACkB,KAAN,CAAY7B,WAAZ,CAAb;AACA4B,UAAAA,qBAAqB,CAACb,KAAtB,GAA8BC,UAAU,GAAG,EAAH,GAAQb,KAAK,CAAC2B,YAAtD;AACA;;AACF;AACEd,UAAAA,UAAU,GAAG,KAAb;AACA;AAPJ;;AASA,WAAKJ,QAAL,CACE;AACEK,QAAAA,UAAU,EAAEW,qBADd;AAEEZ,QAAAA,UAAU,EAAEA;AAFd,OADF,EAKE,KAAKe,YALP;AAOD;;;;mFAWD,iBAAmBC,KAAnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,qBAAKpB,QAAL,CAAc;AAAEU,kBAAAA,OAAO,EAAE;AAAX,iBAAd;AACAU,gBAAAA,KAAK,CAACC,cAAN;AACMC,gBAAAA,IAHR,GAGe;AACXnB,kBAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AADP,iBAHf;AAMMK,gBAAAA,gBANN,GAMyB,EANzB;AAAA;AAAA;AAAA,uBAQ2BxB,KAAK,WAAI,KAAKkB,KAAL,CAAWnB,OAAX,GAAqB,KAAKmB,KAAL,CAAWC,KAApC,GAA6C;AACvEoB,kBAAAA,MAAM,EAAE,KAD+D;AACxD;AACfC,kBAAAA,OAAO,EAAE;AAAE,oCAAgB;AAAlB,mBAF8D;AAGvE;AACAF,kBAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAJiE,iBAA7C,CAAL,CAMpBK,IANoB,CAMf,UAAAC,QAAQ,EAAI;AAChB,sBAAIA,QAAQ,CAACC,MAAT,KAAoBxC,iBAAxB,EAA2C;AACzCmB,oBAAAA,gBAAgB,GAAG;AACjBsB,sBAAAA,KAAK,EAAEvC,KAAK,CAACwC,aADI;AAEjBC,sBAAAA,OAAO,EAAEzC,KAAK,CAAC0C,aAFE;AAGjBC,sBAAAA,IAAI,EAAE;AAHW,qBAAnB;AAMAC,oBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,QAA7B;AACD,mBARD,MAQO,IAAIA,QAAQ,CAACS,EAAT,IAAeT,QAAQ,CAACC,MAAT,KAAoBvC,iBAAvC,EAA0D;AAC/DkB,oBAAAA,gBAAgB,GAAG;AACjBsB,sBAAAA,KAAK,EAAEvC,KAAK,CAAC+C,OADI;AAEjBN,sBAAAA,OAAO,2BAAoB,MAAI,CAAC9B,KAAL,CAAWC,KAA/B,CAFU;AAGjB+B,sBAAAA,IAAI,EAAE;AAHW,qBAAnB;AAKA,2BAAON,QAAQ,CAACW,IAAT,EAAP;AACD,mBAPM,MAOA;AACL/B,oBAAAA,gBAAgB,GAAG;AACjBsB,sBAAAA,KAAK,EAAEvC,KAAK,CAACwC,aADI;AAEjBC,sBAAAA,OAAO,EAAEzC,KAAK,CAAC0C,aAFE;AAGjBC,sBAAAA,IAAI,EAAE;AAHW,qBAAnB;AAKAC,oBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,QAA7B;AACD;AACF,iBA9BoB,EA+BpBD,IA/BoB,CA+Bf,UAAAL,IAAI,EAAI;AACZ,sBAAI,CAACA,IAAI,CAACR,MAAV,EAAkB;AAChBN,oBAAAA,gBAAgB,GAAG;AACjBsB,sBAAAA,KAAK,EAAEvC,KAAK,CAACwC,aADI;AAEjBC,sBAAAA,OAAO,EAAEzC,KAAK,CAAC0C,aAFE;AAGjBC,sBAAAA,IAAI,EAAE;AAHW,qBAAnB;AAKD,mBAPW,CAQZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAON,QAAP;AACD,iBAhDoB,WAiDd,UAAAY,KAAK,EAAI;AACdL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAhC,kBAAAA,gBAAgB,GAAG;AACjBsB,oBAAAA,KAAK,EAAEvC,KAAK,CAACkD,gBADI;AAEjBT,oBAAAA,OAAO,EAAEzC,KAAK,CAACmD,kBAFE;AAGjBR,oBAAAA,IAAI,EAAE;AAHW,mBAAnB;AAMA,yBAAON,QAAP;AACD,iBA1DoB,CAR3B;;AAAA;AAQUA,gBAAAA,QARV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsEIpB,gBAAAA,gBAAgB,GAAG;AACjBsB,kBAAAA,KAAK,EAAEvC,KAAK,CAACkD,gBADI;AAEjBT,kBAAAA,OAAO,EAAEzC,KAAK,CAACmD,kBAFE;AAGjBR,kBAAAA,IAAI,EAAE;AAHW,iBAAnB;;AAtEJ;AA4EEC,gBAAAA,OAAO,CAACC,GAAR,CAAY5B,gBAAZ;;AACA,oBACEA,gBAAgB,KAAKmC,SAArB,IACAnC,gBAAgB,CAACsB,KAAjB,KAA2Ba,SAD3B,IAEAnC,gBAAgB,CAACwB,OAAjB,KAA6BW,SAF7B,IAGAnC,gBAAgB,CAAC0B,IAAjB,KAA0BS,SAJ5B,EAKE;AACA,uBAAKhC,cAAL,GAAsBzB,KAAK,CAAC0D,kBAAN,CAAyB,KAAKjC,cAA9B,CAAtB;;AACA,sBAAI,KAAKA,cAAL,KAAwBgC,SAA5B,EAAuC;AACjCE,oBAAAA,YADiC,GAClB;AACjBf,sBAAAA,KAAK,EAAEtB,gBAAgB,CAACsB,KADP;AAEjBE,sBAAAA,OAAO,EAAExB,gBAAgB,CAACwB,OAFT;AAGjBE,sBAAAA,IAAI,EAAE1B,gBAAgB,CAAC0B;AAHN,qBADkB;AAMrCW,oBAAAA,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc5D,mBAAd,EAAmC0D,YAAnC,CAAf;AACA,yBAAKlC,cAAL,GAAsBzB,KAAK,CAAC8D,eAAN,CAAsBH,YAAtB,CAAtB;AACD;AACF;;AAED,qBAAK7C,QAAL,CAAc;AAAEU,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AA/FF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAkGA,kBAAS;AAAA;;AAEP,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAE9B,IAAV;AAAgB,QAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,eAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,eAME;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,QAAQ,EAAE,KAAKgC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAJpB;AAKE,2BAAgB,oBALlB;AAME,QAAA,QAAQ,EAAE,kBAAAiB,KAAK;AAAA,iBAAI,MAAI,CAACzB,eAAL,CAAqByB,KAArB,CAAJ;AAAA,SANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAUE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAE,CAAC,KAAKlB,KAAL,CAAWE,UADpB;AAEE,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAFzB;AAGE,QAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,eAqBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD,CACE;AADF;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWQ,OAAX,GAAqB,eAArB,GAAuC,EAHpD;AAIE,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWQ,OAAX,IAAsB,CAAC,KAAKS,YAAL,EAJnC;AAKE,QAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQG,KAAKjB,KAAL,CAAWQ,OAAX,iBACC,oBAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADF,eAgBE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,EAAE,EAAE7B,UAAU,CAACoE,KAAX,CAAiBC,IAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAhBF,CArBF,eA4DE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAErE,UAAU,CAACsE,MAAX,CAAkBD,IAD1B;AAEE,QAAA,EAAE,EAAErE,UAAU,CAACsE,MAAX,CAAkBD,IAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGrE,UAAU,CAACsE,MAAX,CAAkBC,QAJrB,CADF,CA5DF,CADF,CADF,CANF,CADF,CADF,CADF;AAsFD;;;;EA9OyC7E,S;;SAAvBkB,c","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport \"assets/css/login.css\";\nimport logo from \"assets/img/logo.png\";\nimport baseRoutes from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport { apiPath } from \"api\";\n\nimport fetch from \"isomorphic-fetch\";\n\nimport ReactNotification from \"react-notifications-component\";\nimport { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport {\n  NotificationOptions,\n  EMAIL_REGEX,\n  INVALID_DATA_POST,\n  OK_SUCCESS_STATUS\n} from \"__helpers/constants\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// import { Button, FormGroup, FormControl, InputLabel } from \"react-bootstrap\";\n// import \"./Login.css\";\n\nexport default class ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      emailValid: false,\n      formErrors: { username: \"\", password: \"\" },\n      showNotification: {},\n      apiPath: apiPath.forgotPassword,\n      loading: false\n    };\n    this.notificationID = null;\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n  }\n\n  validateForm() {\n    return this.state.email.length > 0;\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(EMAIL_REGEX);\n        fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n        break;\n      default:\n        emailValid = false;\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid\n      },\n      this.validateForm\n    );\n  }\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  async handleSubmit(event) {\n    this.setState({ loading: true });\n    event.preventDefault();\n    const data = {\n      email: this.state.email\n    };\n    let showNotification = {};\n    try {\n      const response = await fetch(`${this.state.apiPath + this.state.email}`, {\n        method: \"GET\", // make it POST later when there is live api\n        headers: { \"Content-Type\": \"application/json\" },\n        // body: JSON.stringify(data), // remove comment later when there is live api\n        data: JSON.stringify(data)\n      })\n        .then(response => {\n          if (response.status === INVALID_DATA_POST) {\n            showNotification = {\n              title: enMsg.requestFailed,\n              message: enMsg.emailNotExist,\n              type: \"danger\"\n            };\n\n            console.log(\"Login Failed.\", response);\n          } else if (response.ok && response.status === OK_SUCCESS_STATUS) {\n            showNotification = {\n              title: enMsg.optSent,\n              message: `OTP is sent to ${this.state.email}`,\n              type: \"success\"\n            };\n            return response.json();\n          } else {\n            showNotification = {\n              title: enMsg.requestFailed,\n              message: enMsg.emailNotExist,\n              type: \"danger\"\n            };\n            console.log(\"Login failed.\", response);\n          }\n        })\n        .then(data => {\n          if (!data.length) {\n            showNotification = {\n              title: enMsg.requestFailed,\n              message: enMsg.emailNotExist,\n              type: \"danger\"\n            };\n          }\n          // if (data.length){\n          //   showNotification = {\n          //     title: enMsg.successTitle,\n          //     message: enMsg.resetLinkOTPsend,\n          //     type: \"success\"\n          //   };\n          // }\n          // this.props.history.push(basePath + baseRoutes.resetPassword.path);\n          return response;\n        })\n        .catch(error => {\n          console.log(error);\n          showNotification = {\n            title: enMsg.loginFailedTitle,\n            message: enMsg.networkFailedError,\n            type: \"danger\"\n          };\n\n          return response;\n        });\n\n      // throw new Error(error);\n    } catch (error) {\n      showNotification = {\n        title: enMsg.loginFailedTitle,\n        message: enMsg.networkFailedError,\n        type: \"danger\"\n      };\n    }\n    console.log(showNotification);\n    if (\n      showNotification !== undefined &&\n      showNotification.title !== undefined &&\n      showNotification.message !== undefined &&\n      showNotification.type !== undefined\n    ) {\n      this.notificationID = store.removeNotification(this.notificationID);\n      if (this.notificationID === undefined) {\n        let notifiaciton = {\n          title: showNotification.title,\n          message: showNotification.message,\n          type: showNotification.type\n        };\n        notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n        this.notificationID = store.addNotification(notifiaciton);\n      }\n    }\n\n    this.setState({ loading: false });\n  }\n\n  render() {\n\n    return (\n      <div className=\"login-outer-cover\">\n        <div className=\"login-cover\">\n          <div className=\"login-inner-cover\">\n            <ReactNotification />\n            <div className=\"logo-content\">\n              <img src={logo} alt=\"logo\" />\n            </div>\n            <div className=\"green-header\">Forgot Password</div>\n            <div className=\"login-content\">\n              <div className=\"Login\">\n                <form onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    {/* <InputLabel>Email Address</InputLabel> */}\n                    <TextField\n                      label=\"Email Address\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={this.state.email}\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                    />\n                    <FormErrors\n                      show={!this.state.emailValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"email\"\n                    />\n                  </FormGroup>\n\n                  {/* <FormGroup controlId=\"password\" bsSize=\"large\">                \n                <TextField label=\"Password\" type=\"password\"  name=\"name\" value=\"\" data-validators=\"isRequired,isAlpha\" onChange={this.handleChange}/> \n              </FormGroup> */}\n                  <div className=\"action-btns\">\n                    <Button\n                      // variant=\"contained\"\n                      color=\"primary\"\n                      className={this.state.loading ? \"buttonSuccess\" : \"\"}\n                      disabled={this.state.loading || !this.validateForm()}\n                      type=\"submit\"\n                    >\n                      SUBMIT\n                      {this.state.loading && (\n                        <CircularProgress\n                          size={24}\n                          className=\"buttonProgress\"\n                        />\n                      )}\n                    </Button>\n                    <Button\n                      className=\"back-btn\"\n                      color=\"secondary\"\n                      type=\"button\"\n                    >\n                      <Link\n                        color=\"textSecondary\"\n                        underline=\"none\"\n                        className=\"cancel-back-btn\"\n                        to={baseRoutes.login.path}\n                      >\n                        Back\n                      </Link>\n                    </Button>\n                    {/* <Link\n                      className=\"forgot-link\"\n                      href={baseRoutes.login.path}\n                      to={baseRoutes.login.path}\n                    >\n                      {baseRoutes.login.pathName}\n                    </Link> */}\n                  </div>\n\n                  <div className=\"signup-cover\">\n                    <Link\n                      href={baseRoutes.signup.path}\n                      to={baseRoutes.signup.path}\n                    >\n                      {baseRoutes.signup.pathName}\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}