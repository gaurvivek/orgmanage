{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/components/Login/Login.jsx\";\nimport React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"assets/img/front-logo.png\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\nimport { apiPath } from \"api\";\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { EMAIL_REGEX } from \"__helpers/constants\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ReactNotifications from 'react-browser-notifications';\n\nvar AdblockDetect = /*#__PURE__*/function (_Component) {\n  _inherits(AdblockDetect, _Component);\n\n  var _super = _createSuper(AdblockDetect);\n\n  function AdblockDetect() {\n    var _this;\n\n    _classCallCheck(this, AdblockDetect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      usingAdblock: false\n    };\n    return _this;\n  }\n\n  _createClass(AdblockDetect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        usingAdblock: this.fakeAdBanner.offsetHeight === 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.usingAdblock === true) {\n        return this.props.children;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(r) {\n          return _this2.fakeAdBanner = r;\n        },\n        style: {\n          height: '1px',\n          width: '1px',\n          visiblity: 'none',\n          pointerEvents: 'none'\n        },\n        className: \"adBanner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AdblockDetect;\n}(Component);\n\nvar Login = /*#__PURE__*/function (_Component2) {\n  _inherits(Login, _Component2);\n\n  var _super2 = _createSuper(Login);\n\n  function Login(props) {\n    var _this3;\n\n    _classCallCheck(this, Login);\n\n    _this3 = _super2.call(this, props);\n\n    _this3.handleChange = function (event) {// this.setState({\n      //   [event.target.id]: event.target.value\n      // });\n    };\n\n    _this3.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this3.setState(_defineProperty({}, name, value), function () {\n        _this3.validateField(name, value);\n      });\n    };\n\n    _this3.componentDidMount = function () {\n      _this3._isMounted = true;\n      userService.generateClientAouth();\n      var spinner = document.getElementById('loadingSpinner');\n\n      if (spinner && !spinner.hasAttribute('hidden')) {\n        spinner.setAttribute('hidden', 'true');\n      }\n\n      _this3.showNotifications();\n\n      var currentTimeStamp = new Date().getTime();\n    };\n\n    _this3.componentWillMount = function () {\n      var req = null;\n      var protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\";\n    };\n\n    _this3.handleCloseDialog = function (e) {\n      // this.setState({\n      //   open: false,\n      // })\n      window.location.reload();\n    };\n\n    var userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    var tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    var currentTimeStamp = new Date().getTime();\n    var timeFlag = false;\n\n    if (!userInfo || !tokenTimeStamp) {\n      userService.logout();\n    }\n\n    userService.logout();\n    _this3._isMounted = false;\n    _this3.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      formErrors: {\n        username: \"\",\n        password: \"\"\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: userInfo && userInfo.accessToken ? userInfo.accessToken : [],\n      tokenTimeStamp: tokenTimeStamp ? tokenTimeStamp : currentTimeStamp,\n      timeFlag: timeFlag\n    };\n    _this3.clientAuthToken = null;\n    _this3.handleChange = _this3.handleChange.bind(_assertThisInitialized(_this3));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_this3));\n    _this3.handleCloseDialog = _this3.handleCloseDialog.bind(_assertThisInitialized(_this3));\n    _this3.showNotifications = _this3.showNotifications.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(Login, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case \"email\":\n          emailValid = value.match(EMAIL_REGEX);\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n          break;\n\n        case \"password\":\n          var error = \"\";\n          passwordValid = true;\n\n          if (!value.trim().length) {\n            passwordValid = false;\n            error = enMsg.passwordRequired;\n          } else if (value.length < 6) {\n            passwordValid = false;\n            error = enMsg.shortPassword;\n          }\n\n          fieldValidationErrors.password = error;\n          break;\n\n        default:\n          emailValid = true;\n          passwordValid = true;\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.emailValid && this.state.passwordValid;\n    }\n  }, {\n    key: \"showNotifications\",\n    value: function showNotifications() {// If the Notifications API is supported by the browser\n      // then show the notification\n      // if(this.n.supported()) this.n.show();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        username: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {// Display fallback UI\n      // You can also log the error to an error reporting service\n      //    logErrorToMyService(error, info);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var data, showNotification, response, notifiaciton;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                event.preventDefault();\n                data = {\n                  username: this.state.email,\n                  password: this.state.password,\n                  grantType: \"password\",\n                  scope: \"user\"\n                };\n                showNotification = {};\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(this.state.apiPath, {\n                  method: \"POST\",\n                  // mode: \"no-cors\", // cors, *cors, same-origin\"\n                  headers: clientTokenHeader(),\n                  body: JSON.stringify(data),\n                  data: JSON.stringify(data)\n                }).then(function (response) {\n                  if (response.status === 400) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                  } else if (response.ok) {\n                    var accessToken = response.headers.get(\"Authorization\");\n\n                    if (accessToken !== undefined) {\n                      var userData = window.btoa(data.username + \":\" + data.password); // userData = window.btoa(userData);\n\n                      // userData = window.btoa(userData);\n                      var user = {\n                        authdata: window.btoa(userData),\n                        accessToken: accessToken\n                      };\n                      localStorage.setItem(\"user\", JSON.stringify(user));\n                      window.location.replace(baseRoutes.dashboard.path); // this.props.history.push(baseRoutes.dashboard.path);\n\n                      // this.props.history.push(baseRoutes.dashboard.path);\n                      return;\n                    }\n                  } else {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                    var error = new Error(response.statusText);\n                  } // return response.json();\n\n\n                  // return response.json();\n                  return response.text();\n                }).then(function (response) {\n                  return true;\n                })[\"catch\"](function (error) {\n                  showNotification = {\n                    title: enMsg.loginFailedTitle,\n                    message: enMsg.networkFailedError,\n                    type: \"danger\"\n                  };\n                  return response;\n                });\n\n              case 7:\n                response = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n                showNotification = {\n                  title: enMsg.loginFailedTitle,\n                  message: enMsg.networkFailedError,\n                  type: \"danger\"\n                };\n\n              case 13:\n                if (showNotification !== undefined && showNotification.title !== undefined && showNotification.message !== undefined && showNotification.type !== undefined) {\n                  this.notificationID = store.removeNotification(this.notificationID);\n\n                  if (this.notificationID == undefined) {\n                    notifiaciton = {\n                      title: showNotification.title,\n                      message: showNotification.message,\n                      type: showNotification.type\n                    };\n                    this.notificationID = store.addNotification(notifiaciton);\n                  }\n\n                  userService.showNotification(showNotification);\n                }\n\n                this._isMounted && this.setState({\n                  loading: false\n                });\n                /* set notification config */\n                // this.setState({ showNotification: showNotification });\n                // this.forceUpdate();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 10]]);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-outer-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ReactNotifications, {\n        onRef: function onRef(ref) {\n          return _this4.n = ref;\n        } // Required\n        ,\n        title: \"ASG\" // Required\n        ,\n        body: \"Welcome as ASG application\",\n        icon: \"icon.png\",\n        tag: \"welcome\",\n        timeout: \"1000\",\n        onClick: function onClick(event) {\n          return _this4.handleClick(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-cover gray-bg-color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AdblockDetect, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        \"aria-labelledby\": \"confirmation-dialog-title\",\n        open: this.state.open\n      }, this.state.other, {\n        className: \"change-pass-dialog profile-content addBlockPopup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"confirmation-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green-header warning-header\",\n        style: {\n          top: \"0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        \"class\": \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 80\n        }\n      }, \"block\"), \" AdBlocker Detected\")), /*#__PURE__*/React.createElement(DialogContent, {\n        className: \"addBlockContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"addBlockDesc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, \"Please disable adblocker and reload page to access. We dont display ads on our network.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"addBlockbtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"refreshBtn\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.handleCloseDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 54\n        }\n      }, \"refresh\"), \" Refresh\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-inner-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-content loginLogoMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginLogoInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Email Address\",\n        type: \"email\",\n        name: \"email\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this4.handleUserInput(event);\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.emailValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this4.handleUserInput(event);\n        },\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.passwordValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n      , {\n        color: \"primary\",\n        className: this.state.loading ? \"buttonSuccess\" : \"\",\n        disabled: this.state.loading || !this.validateForm(),\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }\n      }, \"Login\", this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-cover loginPageLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        href: baseRoutes.signup.path,\n        to: baseRoutes.signup.path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 23\n        }\n      }, baseRoutes.signup.pathName)))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/components/Login/Login.jsx"],"names":["React","Component","useReducer","Button","FormGroup","TextField","CircularProgress","Link","logo","basePath","baseRoutes","FormErrors","fetch","apiPath","store","userService","enMsg","EMAIL_REGEX","clientTokenHeader","NotificationContainer","DialogTitle","DialogContent","DialogActions","Dialog","ReactNotifications","AdblockDetect","state","usingAdblock","setState","fakeAdBanner","offsetHeight","props","children","r","height","width","visiblity","pointerEvents","Login","handleChange","event","handleUserInput","e","name","target","value","validateField","componentDidMount","_isMounted","generateClientAouth","spinner","document","getElementById","hasAttribute","setAttribute","showNotifications","currentTimeStamp","Date","getTime","componentWillMount","req","protocol","process","env","NODE_ENV","handleCloseDialog","window","location","reload","userInfo","JSON","parse","localStorage","getItem","tokenTimeStamp","timeFlag","logout","email","username","password","grantType","scope","formErrors","emailValid","passwordValid","formValid","login","loading","showNotification","open","other","undefined","accessToken","clientAuthToken","bind","handleSubmit","fieldName","fieldValidationErrors","match","inValidEmail","error","trim","length","passwordRequired","shortPassword","validateForm","info","preventDefault","data","method","headers","body","stringify","then","response","status","title","loginFailedTitle","message","inValidCredentials","type","ok","get","userData","btoa","user","authdata","setItem","replace","dashboard","path","Error","statusText","text","networkFailedError","notificationID","removeNotification","notifiaciton","addNotification","ref","n","handleClick","top","signup","pathName"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\n\nimport logo from \"assets/img/front-logo.png\";\n\nimport { basePath, baseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\n\nimport { apiPath } from \"api\";\n\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { EMAIL_REGEX } from \"__helpers/constants\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ReactNotifications from 'react-browser-notifications';\nclass AdblockDetect extends Component {\n  state = {\n    usingAdblock: false,\n  }\n\n  componentDidMount() {\n    this.setState({ usingAdblock: this.fakeAdBanner.offsetHeight === 0 });\n  }\n\n  render() {\n    if (this.state.usingAdblock === true) {\n      return this.props.children;\n    }\n\n    return (\n      <div\n        ref={r => (this.fakeAdBanner = r)}\n        style={{ height: '1px', width: '1px', visiblity: 'none', pointerEvents: 'none' }}\n        className=\"adBanner\"\n      />\n    );\n  }\n}\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    let userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    let currentTimeStamp = new Date().getTime();\n    let timeFlag = false;\n    if(!userInfo ||!tokenTimeStamp){\n      userService.logout();\n    }\n    userService.logout();\n    this._isMounted = false; \n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      formErrors: { username: \"\", password: \"\" },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: (userInfo && userInfo.accessToken) ? userInfo.accessToken : [],\n      tokenTimeStamp: (tokenTimeStamp) ? tokenTimeStamp : currentTimeStamp,\n      timeFlag: timeFlag,\n    };\n    this.clientAuthToken = null;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.showNotifications = this.showNotifications.bind(this);\n  }\n\n  handleChange = event => {\n    // this.setState({\n    //   [event.target.id]: event.target.value\n    // });\n  };\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(EMAIL_REGEX);\n        fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n        break;\n      case \"password\":\n        let error = \"\";\n        passwordValid = true;\n        if (!value.trim().length) {\n          passwordValid = false;\n          error = enMsg.passwordRequired;\n        } else if (value.length < 6) {\n          passwordValid = false;\n          error = enMsg.shortPassword;\n        }\n        fieldValidationErrors.password = error;\n        break;\n      default:\n        emailValid = true;\n        passwordValid = true;\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm() {\n    return this.state.emailValid && this.state.passwordValid;\n  }\n  showNotifications() {\n    // If the Notifications API is supported by the browser\n    // then show the notification\n    // if(this.n.supported()) this.n.show();\n  }\n\n  componentDidMount = () => {\n    this._isMounted = true; \n    userService.generateClientAouth();\n    const spinner = document.getElementById('loadingSpinner');\n    if (spinner && !spinner.hasAttribute('hidden')) {\n      spinner.setAttribute('hidden', 'true');\n    }\n    this.showNotifications();\n    let currentTimeStamp = new Date().getTime();\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillMount = () => {\n    const req = null;\n    const protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\";\n  };\n\n  handleChange(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    // You can also log the error to an error reporting service\n    //    logErrorToMyService(error, info);\n  }\n  handleCloseDialog = e => {\n    // this.setState({\n    //   open: false,\n    // })\n    window.location.reload();\n  };\n\n  async handleSubmit(event) {\n    this.setState({ loading: true });\n    event.preventDefault();\n    const data = {\n      username: this.state.email,\n      password: this.state.password,\n      grantType: \"password\",\n      scope: \"user\"\n    };\n\n    let showNotification = {};\n\n    try {\n      const response = await fetch(this.state.apiPath, {\n        method: \"POST\",\n        // mode: \"no-cors\", // cors, *cors, same-origin\"\n        headers: clientTokenHeader(),\n        body: JSON.stringify(data),\n        data: JSON.stringify(data)\n      })\n        .then(response => {\n          if (response.status === 400) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n          } else if (response.ok) {\n            let accessToken = response.headers.get(\"Authorization\");\n\n            if (accessToken !== undefined) {\n              let userData = window.btoa(data.username + \":\" + data.password);\n              // userData = window.btoa(userData);\n              let user = {\n                authdata: window.btoa(userData),\n                accessToken: accessToken\n              };\n              \n              localStorage.setItem(\"user\", JSON.stringify(user));\n              window.location.replace(baseRoutes.dashboard.path);\n              // this.props.history.push(baseRoutes.dashboard.path);\n              return;\n            }\n          } else {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n            let error = new Error(response.statusText);\n          }\n          // return response.json();\n          return response.text();\n        })\n        .then(response => {\n          return true;\n        })\n        .catch(error => {\n          showNotification = {\n            title: enMsg.loginFailedTitle,\n            message: enMsg.networkFailedError,\n            type: \"danger\"\n          };\n\n          return response;\n        });\n\n      // throw new Error(error);\n    } catch (error) {\n      showNotification = {\n        title: enMsg.loginFailedTitle,\n        message: enMsg.networkFailedError,\n        type: \"danger\"\n      };\n    }\n\n    if (\n      showNotification !== undefined &&\n      showNotification.title !== undefined &&\n      showNotification.message !== undefined &&\n      showNotification.type !== undefined\n    ) {\n      this.notificationID = store.removeNotification(this.notificationID);\n      if (this.notificationID == undefined) {\n        let notifiaciton = {\n          title: showNotification.title,\n          message: showNotification.message,\n          type: showNotification.type\n        };\n        this.notificationID = store.addNotification(notifiaciton);\n      }\n      userService.showNotification(showNotification)\n    }\n\n    this._isMounted && this.setState({ loading: false });\n    /* set notification config */\n    // this.setState({ showNotification: showNotification });\n    // this.forceUpdate();\n  }\n  render() {\n    return (\n      <div className=\"login-outer-cover\">\n        <ReactNotifications\n          onRef={ref => (this.n = ref)} // Required\n          title=\"ASG\" // Required\n          body=\"Welcome as ASG application\"\n          icon=\"icon.png\"\n          tag=\"welcome\"\n          timeout=\"1000\"\n          onClick={event => this.handleClick(event)}\n        />\n        {/* <NotificationContainer/> */}\n        <div className=\"login-cover gray-bg-color\">\n          <AdblockDetect>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              aria-labelledby=\"confirmation-dialog-title\"\n              open={this.state.open}\n              {...this.state.other}\n              className={\"change-pass-dialog profile-content addBlockPopup\"}\n            >\n              <DialogTitle id=\"confirmation-dialog-title\">\n                <div className=\"green-header warning-header\" style={{top:\"0\"}}><i class=\"material-icons\">block</i> AdBlocker Detected</div>\n              </DialogTitle>\n              <DialogContent className=\"addBlockContent\">\n                <p className=\"addBlockDesc\">Please disable adblocker and reload page to access. We dont display ads on our network.</p>               \n                <div className=\"addBlockbtn\">\n                  <Button\n                    className=\"refreshBtn\"\n                    color=\"primary\"\n                    type=\"button\"\n                    onClick={this.handleCloseDialog}><i className=\"material-icons\">refresh</i> Refresh\n                  </Button>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </AdblockDetect>\n          <div className=\"login-inner-cover\">            \n            <div className=\"logo-content loginLogoMain\">\n              <div className=\"loginLogoInner\">\n                <img src={logo} alt=\"logo\" />\n              </div>\n            </div>\n            <div className=\"green-header\">Login</div>\n            <div className=\"login-content\">\n              <div className=\"Login\">\n                <form onSubmit={this.handleSubmit} noValidate>\n                  <FormGroup>\n                    {/* <InputLabel>Email Address</InputLabel> */}\n                    <TextField\n                      label=\"Email Address\"\n                      type=\"email\"\n                      name=\"email\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.email}\n                    />\n                    <FormErrors\n                      show={!this.state.emailValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"email\"\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <TextField\n                      label=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.password}\n                    />\n                    <FormErrors\n                      show={!this.state.passwordValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"password\"\n                    />\n                  </FormGroup>\n                  <div className=\"action-btns\">\n                    <Button\n                      // variant=\"contained\"\n                      color=\"primary\"\n                      className={this.state.loading ? \"buttonSuccess\" : \"\"}\n                      disabled={this.state.loading || !this.validateForm()}\n                      type=\"submit\"\n                    >\n                      Login\n                      {this.state.loading && (\n                        <CircularProgress\n                          size={24}\n                          className=\"buttonProgress\"\n                        />\n                      )}\n                    </Button>\n                    <div className=\"signup-cover loginPageLink\">\n                      <Link\n                        href={baseRoutes.signup.path}\n                        to={baseRoutes.signup.path}\n                      >\n                        {baseRoutes.signup.pathName}\n                      </Link>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}