{"ast":null,"code":"export function authHeaderMIMETYPE() {\n  var user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    return {\n      Accept: \"application/json\",\n      Authorization: user.accessToken\n    };\n  } else {\n    return {};\n  }\n}\nexport function clientTokenHeader() {\n  // return authorization header with basic auth credentials\n  var clientAuthToken = localStorage.getItem(\"clientAuthToken\");\n\n  if (clientAuthToken) {\n    return {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-App-Authorization\": clientAuthToken\n    };\n  } else {\n    return {};\n  }\n}\nexport function generalAuthTokenHeader() {\n  return {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n}","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/__helpers/auth-header.js"],"names":["authHeaderMIMETYPE","user","JSON","parse","localStorage","getItem","accessToken","Accept","Authorization","clientTokenHeader","clientAuthToken","generalAuthTokenHeader"],"mappings":"AAAA,OAAO,SAASA,kBAAT,GAA8B;AACnC,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;;AAEA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAjB,EAA8B;AAC5B,WAAO;AACLC,MAAAA,MAAM,EAAE,kBADH;AAELC,MAAAA,aAAa,EAAEP,IAAI,CAACK;AAFf,KAAP;AAID,GALD,MAKO;AACL,WAAO,EAAP;AACD;AACF;AAED,OAAO,SAASG,iBAAT,GAA6B;AAClC;AACA,MAAIC,eAAe,GAAGN,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAtB;;AAEA,MAAIK,eAAJ,EAAqB;AACnB,WAAO;AACLH,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL,6BAAuBG;AAHlB,KAAP;AAKD,GAND,MAMO;AACL,WAAO,EAAP;AACD;AACF;AACD,OAAO,SAASC,sBAAT,GAAkC;AACvC,SAAO;AACLJ,IAAAA,MAAM,EAAE,kBADH;AAEL,oBAAgB;AAFX,GAAP;AAID","sourcesContent":["export function authHeaderMIMETYPE() {\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    return {\n      Accept: \"application/json\",\n      Authorization: user.accessToken\n    };\n  } else {\n    return {};\n  }\n}\n\nexport function clientTokenHeader() {\n  // return authorization header with basic auth credentials\n  let clientAuthToken = localStorage.getItem(\"clientAuthToken\");\n\n  if (clientAuthToken) {\n    return {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-App-Authorization\": clientAuthToken\n    };\n  } else {\n    return {};\n  }\n}\nexport function generalAuthTokenHeader() {\n  return {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}