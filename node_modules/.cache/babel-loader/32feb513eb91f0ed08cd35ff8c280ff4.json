{"ast":null,"code":"/*!\n\nAll API path using in the application\n*/\n// core components/views for RTL layout\n// const liveApiEndPoin = \"https://asgcp-int.adpersistence.com\";\nvar liveApiEndPoin = window._env_.API_URL; // const apiEndPoin = \"http://34.254.74.148/api/api.php?path=\";\n\nexport var apiPath = {\n  clientToken: \"\".concat(liveApiEndPoin, \"/oauth/client\"),\n  refreshClientToken: \"\".concat(liveApiEndPoin, \"/oauth/user-reauthorize\"),\n  login: \"\".concat(liveApiEndPoin, \"/oauth/pass\")\n}; // export const apiPath = {\n//   login: `${apiEndPoin}login`,\n//   signup: `${apiEndPoin}signup`,\n//   forgotPassword: `${apiEndPoin}users?q=`,\n//   resetPassword: `${apiEndPoin}reset-password`,\n//   adnetwork: `${apiEndPoin}adnetwork`,\n//   listCampaign: `${apiEndPoin}campaign`,\n//   apiListAdvertisement: `${apiEndPoin}advertisement`,\n//   //addEditCampaign: `${apiEndPoin}adnetwork/ADNETWORK_ID_SLUG?embed=campaigns`,\n//   addEditCampaign: `${apiEndPoin}campaign/`,\n//   profile: `${apiEndPoin}profile`,\n//   profileChangePassword: `${apiEndPoin}profile/password`,\n//   vendors: `${apiEndPoin}vendors`,\n//   assets: `${apiEndPoin}assets`,\n// };\n// const {\n//     json,\n//     send,\n//     createError,\n//     run\n// } = require('micro')\n// const fetch = require('isomorphic-unfetch')\n// const login = async (req, res) => {\n//     const {\n//         username\n//     } = await json(req)\n//     const url = `https://api.github.com/users/${username}`\n//     try {\n//         const response = await fetch(url)\n//         if (response.ok) {\n//             const {\n//                 id\n//             } = await response.json()\n//             send(res, 200, {\n//                 token: id\n//             })\n//         } else {\n//             send(res, response.status, response.statusText)\n//         }\n//     } catch (error) {\n//         throw createError(error.statusCode, error.statusText)\n//     }\n// }\n// const {\n//     send,\n//     createError,\n//     run\n// } = require('micro')\n// const fetch = require('isomorphic-unfetch')\n// const profile = async (req, res) => {\n//     if (!('authorization' in req.headers)) {\n//         throw createError(401, 'Authorization header missing')\n//     }\n//     const auth = await req.headers.authorization\n//     const {\n//         token\n//     } = JSON.parse(auth)\n//     const url = `https://api.github.com/user/${token}`\n//     try {\n//         const response = await fetch(url)\n//         if (response.ok) {\n//             const js = await response.json()\n//             // Need camelcase in the frontend\n//             const data = Object.assign({}, {\n//                 avatarUrl: js.avatar_url\n//             }, js)\n//             send(res, 200, {\n//                 data\n//             })\n//         } else {\n//             send(res, response.status, response.statusText)\n//         }\n//     } catch (error) {\n//         throw createError(error.statusCode, error.statusText)\n//     }\n// }\n// module.exports = (req, res) => run(req, res, profile)","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/api.js"],"names":["liveApiEndPoin","window","_env_","API_URL","apiPath","clientToken","refreshClientToken","login"],"mappings":"AAAA;AACA;AACA;AACA;AAIA;AAEA;AACA,IAAMA,cAAc,GAAGC,MAAM,CAACC,KAAP,CAAaC,OAApC,C,CACA;;AAEA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,WAAW,YAAKL,cAAL,kBADU;AAErBM,EAAAA,kBAAkB,YAAKN,cAAL,4BAFG;AAGrBO,EAAAA,KAAK,YAAKP,cAAL;AAHgB,CAAhB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["/*!\n\nAll API path using in the application\n*/\n\n\n\n// core components/views for RTL layout\n\n// const liveApiEndPoin = \"https://asgcp-int.adpersistence.com\";\nconst liveApiEndPoin = window._env_.API_URL\n// const apiEndPoin = \"http://34.254.74.148/api/api.php?path=\";\n\nexport const apiPath = {\n  clientToken: `${liveApiEndPoin}/oauth/client`,\n  refreshClientToken: `${liveApiEndPoin}/oauth/user-reauthorize`,\n  login: `${liveApiEndPoin}/oauth/pass`,\n};\n// export const apiPath = {\n//   login: `${apiEndPoin}login`,\n//   signup: `${apiEndPoin}signup`,\n//   forgotPassword: `${apiEndPoin}users?q=`,\n//   resetPassword: `${apiEndPoin}reset-password`,\n//   adnetwork: `${apiEndPoin}adnetwork`,\n//   listCampaign: `${apiEndPoin}campaign`,\n//   apiListAdvertisement: `${apiEndPoin}advertisement`,\n//   //addEditCampaign: `${apiEndPoin}adnetwork/ADNETWORK_ID_SLUG?embed=campaigns`,\n//   addEditCampaign: `${apiEndPoin}campaign/`,\n//   profile: `${apiEndPoin}profile`,\n//   profileChangePassword: `${apiEndPoin}profile/password`,\n//   vendors: `${apiEndPoin}vendors`,\n//   assets: `${apiEndPoin}assets`,\n// };\n\n// const {\n//     json,\n//     send,\n//     createError,\n//     run\n// } = require('micro')\n// const fetch = require('isomorphic-unfetch')\n\n// const login = async (req, res) => {\n//     const {\n//         username\n//     } = await json(req)\n//     const url = `https://api.github.com/users/${username}`\n\n//     try {\n//         const response = await fetch(url)\n//         if (response.ok) {\n//             const {\n//                 id\n//             } = await response.json()\n//             send(res, 200, {\n//                 token: id\n//             })\n//         } else {\n//             send(res, response.status, response.statusText)\n//         }\n//     } catch (error) {\n//         throw createError(error.statusCode, error.statusText)\n//     }\n// }\n\n// const {\n//     send,\n//     createError,\n//     run\n// } = require('micro')\n// const fetch = require('isomorphic-unfetch')\n\n// const profile = async (req, res) => {\n//     if (!('authorization' in req.headers)) {\n//         throw createError(401, 'Authorization header missing')\n//     }\n\n//     const auth = await req.headers.authorization\n//     const {\n//         token\n//     } = JSON.parse(auth)\n//     const url = `https://api.github.com/user/${token}`\n\n//     try {\n//         const response = await fetch(url)\n\n//         if (response.ok) {\n//             const js = await response.json()\n//             // Need camelcase in the frontend\n//             const data = Object.assign({}, {\n//                 avatarUrl: js.avatar_url\n//             }, js)\n//             send(res, 200, {\n//                 data\n//             })\n//         } else {\n//             send(res, response.status, response.statusText)\n//         }\n//     } catch (error) {\n//         throw createError(error.statusCode, error.statusText)\n//     }\n// }\n\n// module.exports = (req, res) => run(req, res, profile)\n"]},"metadata":{},"sourceType":"module"}