{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/views/Records/ProjectPopup.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogActions, DialogContent, Select, DialogTitle, IconButton, TextField, MenuItem, InputLabel, Button } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uid } from \"__helpers/utils\";\nimport { projectList } from 'js/actions';\n\nvar AddProject = function AddProject(props) {\n  var openProjects = props.openProjects,\n      confirmModalClose = props.confirmModalClose,\n      loading = props.loading;\n  var dispatch = useDispatch();\n  var errorList = {\n    projectName: \"\",\n    projectDescription: \"\"\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      getProject = _useState2[0],\n      setProject = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      getProjectDes = _useState4[0],\n      setProjectDes = _useState4[1];\n\n  var _useState5 = useState(errorList),\n      _useState6 = _slicedToArray(_useState5, 2),\n      getError = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      formValid = _useState8[0],\n      setFormValid = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      getProjectValid = _useState10[0],\n      setProjectValid = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      getProjectDescriptionValid = _useState12[0],\n      setProjectDescriptionValid = _useState12[1];\n\n  var validateForm = function validateForm() {\n    if (getProjectValid && getProjectDescriptionValid) {\n      setFormValid(true);\n    } else {\n      setFormValid(false);\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              data = {\n                uid: uid(),\n                projectName: getProject,\n                projectDesc: getProjectDes,\n                createDate: new Date(),\n                tasks: {}\n              };\n              console.log(data, formValid);\n              return _context.abrupt(\"return\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleInput = function handleInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    var projectValid = getProjectValid;\n    var projectDescriptionValid = getProjectDescriptionValid;\n    var getErrorList = getError;\n\n    switch (name) {\n      case 'projectName':\n        setProject(value);\n        projectValid = value.trim().length > 0;\n        getErrorList.projectName = projectValid ? '' : \"Enter project name\";\n        break;\n\n      case 'projectDescription':\n        setProjectDes(value);\n        projectDescriptionValid = value.trim().length > 0;\n        getErrorList.projectDescription = projectDescriptionValid ? '' : \"Enter project description\";\n        break;\n    }\n\n    setProjectValid(projectValid);\n    setProjectDescriptionValid(projectDescriptionValid);\n    validateForm();\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    className: \"call-modal\",\n    maxWidth: 'lg',\n    open: openProjects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    className: \"add-modal-title\",\n    id: \"discharge-planner-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Create Project\", /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: confirmModalClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"\",\n    label: \"Project Name\",\n    className: \"full-width-input\",\n    name: \"projectName\",\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    value: getProject,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormErrors, {\n    show: !getProjectValid,\n    formErrors: getError,\n    fieldName: \"projectName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Project Description\",\n    className: \"full-width-input\",\n    name: \"projectDescription\",\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    multiline: true,\n    rows: 3,\n    value: getProjectDes,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormErrors, {\n    show: !getProjectDescriptionValid,\n    formErrors: getError,\n    fieldName: \"projectDescription\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    className: \"modal-actions\",\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn1\",\n    disabled: !formValid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: \"buttonProgress\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }), \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn2\",\n    onClick: confirmModalClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))));\n};\n\nexport default AddProject;","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/views/Records/ProjectPopup.jsx"],"names":["React","useState","useEffect","Dialog","DialogActions","DialogContent","Select","DialogTitle","IconButton","TextField","MenuItem","InputLabel","Button","CloseIcon","CircularProgress","FormErrors","useDispatch","useSelector","uid","projectList","AddProject","props","openProjects","confirmModalClose","loading","dispatch","errorList","projectName","projectDescription","getProject","setProject","getProjectDes","setProjectDes","getError","setError","formValid","setFormValid","getProjectValid","setProjectValid","getProjectDescriptionValid","setProjectDescriptionValid","validateForm","handleSubmit","event","preventDefault","data","projectDesc","createDate","Date","tasks","console","log","handleInput","e","target","name","value","projectValid","projectDescriptionValid","getErrorList","trim","length","className"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Select,\n    DialogTitle,\n    IconButton,\n    TextField,\n    MenuItem,\n    InputLabel,\n    Button\n} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uid } from \"__helpers/utils\";\nimport { projectList } from 'js/actions';\n\n\nconst AddProject = (props) => {\n    const { openProjects, confirmModalClose, loading } = props;\n    const dispatch = useDispatch();\n    const errorList = {\n        projectName: \"\",\n        projectDescription: \"\",\n    }\n    const [getProject, setProject] = useState(\"\")\n    const [getProjectDes, setProjectDes] = useState(\"\")\n    const [getError, setError] = useState(errorList)\n    const [formValid, setFormValid] = useState(false)\n    const [getProjectValid, setProjectValid] = useState(false)\n    const [getProjectDescriptionValid, setProjectDescriptionValid] = useState(false)\n    const validateForm = () => {\n        if(getProjectValid && getProjectDescriptionValid){\n            setFormValid(true)\n        }else{\n            setFormValid(false)\n        }\n    }\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = {\n            uid: uid(),\n            projectName: getProject,\n            projectDesc: getProjectDes,\n            createDate: new Date(),\n            tasks: {},\n        }\n        console.log(data, formValid)\n        return\n        dispatch(projectList(data));\n    }\n    const handleInput = (e) => {\n        const { name, value } = e.target;\n        let projectValid = getProjectValid;\n        let projectDescriptionValid = getProjectDescriptionValid;\n        let getErrorList = getError;\n        switch (name) {\n            case 'projectName':\n                setProject(value);\n                projectValid = value.trim().length > 0;\n                getErrorList.projectName = projectValid ? '' : \"Enter project name\";\n                break;\n            case 'projectDescription':\n                setProjectDes(value);\n                projectDescriptionValid = value.trim().length > 0;\n                getErrorList.projectDescription = projectDescriptionValid ? '' : \"Enter project description\";\n                break;\n        }\n        setProjectValid(projectValid)\n        setProjectDescriptionValid(projectDescriptionValid)\n        validateForm();\n    }\n    return (\n        <Dialog\n            className=\"call-modal\"\n            maxWidth={'lg'}\n            open={openProjects}\n        >\n            <DialogTitle className=\"add-modal-title\" id=\"discharge-planner-dialog-title\">\n                Create Project\n                <IconButton aria-label=\"close\">\n                    <CloseIcon onClick={confirmModalClose} />\n                </IconButton>\n            </DialogTitle>\n            <form onSubmit={handleSubmit} noValidate>\n                <DialogContent>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            id=\"\"\n                            label=\"Project Name\"\n                            className=\"full-width-input\"\n                            name=\"projectName\"\n                            InputLabelProps={{ className: \"required-label\" }}\n                            value={getProject}\n                            onChange={e => handleInput(e)} />\n                        <FormErrors\n                            show={!getProjectValid}\n                            formErrors={getError}\n                            fieldName=\"projectName\"\n                        />\n                    </div>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            id=\"standard-basic\"\n                            label=\"Project Description\"\n                            className=\"full-width-input\"\n                            name=\"projectDescription\"\n                            InputLabelProps={{ className: \"required-label\" }}\n                            multiline\n                            rows={3}\n                            value={getProjectDes}\n                            onChange={e => handleInput(e)} />\n                        <FormErrors\n                            show={!getProjectDescriptionValid}\n                            formErrors={getError}\n                            fieldName=\"projectDescription\"\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions className=\"modal-actions\" justify=\"center\" >\n                    <Button type=\"submit\" className=\"btn1\" disabled={!formValid}>\n                        {loading && (\n                            <CircularProgress\n                                size={24}\n                                className=\"buttonProgress\"\n                            />\n                        )}\n                        Update\n                    </Button>\n                    <Button color=\"primary\" className=\"btn2\" onClick={confirmModalClose}>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    )\n}\n\nexport default AddProject"]},"metadata":{},"sourceType":"module"}