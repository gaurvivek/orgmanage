{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/views/Records/Records.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Link as MaterialLink, CircularProgress, FormGroup, FormControl } from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { PER_PAGE_OPTIONS, RECORD_PER_PAGE } from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from \"react-router-dom\";\nam4core.useTheme(am4themes_animated);\nvar columns = [{\n  id: \"projectName\",\n  label: \"Project Name\"\n}, {\n  id: \"projectDesc\",\n  label: \"Project Description\"\n}, {\n  id: \"projectDesc\",\n  label: \"Total Tasks\"\n}, {\n  id: \"projectDesc\",\n  label: \"Tasks List\"\n}, {\n  id: \"createDate\",\n  label: \"Created Date\"\n}, {\n  id: \"projectDesc\",\n  label: \"Actions\"\n}];\nvar ref = React.createRef();\n\nfunction mapDispatchToProps(dispatch) {\n  return {// addArticle: article => dispatch(addArticle(article))\n    // projectList: projects => dispatch(projectList(projects))\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    projectListArr: state.projectList,\n    taskListArr: state.taskList\n  };\n};\n\nvar RecordClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(RecordClass, _React$Component);\n\n  var _super = _createSuper(RecordClass);\n\n  function RecordClass(props) {\n    var _this;\n\n    _classCallCheck(this, RecordClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangePage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  page: newPage\n                }); // setPage(newPage);\n\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.validateField = function (fieldName, fieldValue) {\n      var fieldValidationErrors = _this.state.formErrors;\n      var startDateValid = _this.state.startDateValid;\n      var endDateValid = _this.state.endDateValid;\n\n      switch (fieldName) {\n        case \"startDate\":\n          startDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.startDate = !startDateValid ? enMsg.startDateRequiredMsg : \"\";\n          break;\n\n        case \"endDate\":\n          endDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.endDate = !endDateValid ? enMsg.endDateRequiredMsg : \"\";\n          break;\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        startDateValid: startDateValid,\n        endDateValid: endDateValid\n      }, _this.validateForm);\n    };\n\n    _this.GetTaskCount = function (pId, tList) {\n      var filteredTasks = tList.filter(function (list) {\n        if (list.projectId == pId) {\n          return list;\n        }\n      });\n      return filteredTasks.length;\n    };\n\n    _this.GetTaskList = function (pId, tList) {\n      var taskList = {};\n      tList.map(function (list) {\n        if (list.projectId == pId) {\n          if (list.taskStatus == \"new\") {\n            taskList[\"new\"] = taskList[\"new\"] ? taskList.taskList + 1 : 1;\n          } else if (list.taskStatus == \"process\") {\n            taskList.process = taskList.process ? taskList.taskList + 1 : 1;\n          } else {\n            taskList.done = taskList.done ? taskList.taskList + 1 : 1;\n          }\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }, taskList.done ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 26\n        }\n      }, \"Done: \", taskList.done) : null, taskList[\"new\"] ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, \"New: \", taskList[\"new\"]) : null, taskList.process ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      }, \"Process: \", taskList.process) : null);\n    };\n\n    _this.dateUtility = new DateFnsUtils();\n    _this._isMounted = false;\n    _this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      reduxLoadFlag: false,\n      openProjects: false,\n      projectList: _this.props.projectListArr ? _this.props.projectListArr : [],\n      taskList: _this.props.taskListArr ? _this.props.taskListArr : []\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_this));\n    _this.handleChangeRowsPerPage = _this.handleChangeRowsPerPage.bind(_assertThisInitialized(_this));\n    _this.confirmModalClose = _this.confirmModalClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RecordClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Projects';\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday(dateValue, server) {\n      var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n      var today = new Date(dateValue);\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var mName = monthNames[today.getMonth()];\n      var yyyy = today.getFullYear();\n      var hh = today.getHours();\n      var min = today.getMinutes();\n      var sec = today.getSeconds();\n\n      if (dd < 10) {\n        dd = \"0\".concat(dd);\n      }\n\n      if (mm < 10) {\n        mm = \"0\".concat(mm);\n      }\n\n      if (server) {\n        return \"\".concat(dd, \"-\").concat(mm, \"-\").concat(yyyy);\n      }\n\n      return \"\".concat(dd, \" \").concat(mName, \" \").concat(hh, \":\").concat(min, \":\").concat(sec);\n    } // componentDidUpdate(oldProps) {\n    //   if (oldProps.paddingRight !== this.props.paddingRight) {\n    //     this.chart.paddingRight = this.props.paddingRight;\n    //   }\n    //   if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n    //     let campaings = [];\n    //     let userInfo = {};\n    //     if (this.props.campaings) {\n    //       let campaingsList = this.props.campaings;\n    //       campaings = (campaingsList) ? campaingsList : [];\n    //       if (this.chart) {\n    //         this.chart.data = campaings;\n    //       }\n    //     }\n    //     this.setState({\n    //       pollutionData: campaings,\n    //     })\n    //   }\n    // }\n\n  }, {\n    key: \"handleChangeRowsPerPage\",\n    value: function handleChangeRowsPerPage(event) {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.startDateValid && this.state.endDateValid;\n    }\n  }, {\n    key: \"openProjects\",\n    value: function openProjects() {\n      this.setState({\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"confirmModalClose\",\n    value: function confirmModalClose() {\n      this.setState({\n        openProjects: false,\n        projectList: this.props.projectListArr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          openProjects = _this$state.openProjects,\n          projectList = _this$state.projectList,\n          taskList = _this$state.taskList;\n      console.log(projectList);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"box-with-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddProject, {\n        openProjects: openProjects,\n        confirmModalClose: this.confirmModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormHead white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      }, \"My Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.openProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }), \"Add Project\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.searchPollData();\n        },\n        disabled: !this.validateForm() || this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }\n      }), \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: (classes.root, this.cust_table_cover),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: (classes.tableWrapper, this.cust_table),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-respopnsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        className: this.tableh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 27\n        }\n      }, columns.map(function (column) {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 31\n          }\n        }, column.label);\n      }))), /*#__PURE__*/React.createElement(TableBody, {\n        key: \"TableBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }, this.state.projectList.length && this.state.projectList.length ? this.state.projectList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (row, key) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 39\n          }\n        }, row.projectName), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 39\n          }\n        }, row.projectDesc), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 39\n          }\n        }, taskList && taskList.length ? /*#__PURE__*/React.createElement(GetTaskCount, {\n          pId: row.uid,\n          taskList: taskList,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 45\n          }\n        }) : \"No task\"), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 39\n          }\n        }, taskList && taskList.length ? /*#__PURE__*/React.createElement(GetTaskList, {\n          pId: row.uid,\n          taskList: taskList,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 45\n          }\n        }) : \"No task\"), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 39\n          }\n        }, new Date(row.createDate).toDateString()), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          underline: \"none\",\n          to: {\n            pathname: basePath + baseRoutes.tasks.path,\n            state: row.uid\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 43\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 45\n          }\n        })))));\n      }) : /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        colspan: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"not-found-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 35\n        }\n      }, \"No projects available...\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: PER_PAGE_OPTIONS,\n        component: \"div\",\n        count: this.state.projectList.length && this.state.projectList.length ? this.state.projectList.length : 0,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"previous page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"next page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return RecordClass;\n}(React.Component);\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar Record = connect(mapStateToProps, mapDispatchToProps)(RecordClass); // export default Form;\n\nexport default withStyles(dashboardStyle)(Record);","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/views/Records/Records.jsx"],"names":["React","PropTypes","withStyles","GridContainer","enMsg","Button","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Link","MaterialLink","CircularProgress","FormGroup","FormControl","CardBody","dashboardStyle","userService","connect","moment","PER_PAGE_OPTIONS","RECORD_PER_PAGE","am4core","am4themes_animated","MuiPickersUtilsProvider","KeyboardDatePicker","FormErrors","DateFnsUtils","AddProject","basePath","baseRoutes","Icon","useTheme","columns","id","label","ref","createRef","mapDispatchToProps","dispatch","mapStateToProps","state","userInfo","timestamp","campaings","reduxLoadFlag","projectListArr","projectList","taskListArr","taskList","RecordClass","props","handleChangePage","event","newPage","setState","page","validateField","fieldName","fieldValue","fieldValidationErrors","formErrors","startDateValid","endDateValid","startDate","startDateRequiredMsg","endDate","endDateRequiredMsg","validateForm","GetTaskCount","pId","tList","filteredTasks","filter","list","projectId","length","GetTaskList","map","taskStatus","process","done","dateUtility","_isMounted","value","loading","rowsPerPageT","rowsPerPage","timeStampVal","Date","toLocaleTimeString","openProjects","bind","handleChangeRowsPerPage","confirmModalClose","document","title","dateValue","server","monthNames","today","dd","getDate","mm","getMonth","mName","yyyy","getFullYear","hh","getHours","min","getMinutes","sec","getSeconds","target","classes","console","log","searchPollData","root","cust_table_cover","tableWrapper","cust_table","tableh","column","align","minWidth","slice","row","key","projectName","projectDesc","uid","createDate","toDateString","pathname","tasks","path","color","Component","propTypes","object","isRequired","Record"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Link as MaterialLink,\n  CircularProgress,\n  FormGroup,\n  FormControl,\n} from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport {\n} from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  PER_PAGE_OPTIONS,\n  RECORD_PER_PAGE,\n} from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { FormErrors } from \"components/Login/FormErrors\"\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\"\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from \"react-router-dom\";\n\nam4core.useTheme(am4themes_animated);\nconst columns = [\n  { id: \"projectName\", label: \"Project Name\" },\n  { id: \"projectDesc\", label: \"Project Description\" },\n  { id: \"projectDesc\", label: \"Total Tasks\" },\n  { id: \"projectDesc\", label: \"Tasks List\" },\n  { id: \"createDate\", label: \"Created Date\" },\n  { id: \"projectDesc\", label: \"Actions\" },\n];\nconst ref = React.createRef();\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    // projectList: projects => dispatch(projectList(projects))\n  };\n}\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    projectListArr: state.projectList,\n    taskListArr: state.taskList,\n  };\n};\nclass RecordClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateUtility = new DateFnsUtils();\n    this._isMounted = false;\n    this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      reduxLoadFlag: false,\n      openProjects: false,\n      projectList: this.props.projectListArr ? this.props.projectListArr : [],\n      taskList: this.props.taskListArr ? this.props.taskListArr : [],\n    };\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n    this.confirmModalClose = this.confirmModalClose.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'Projects';\n  }\n  getToday(dateValue, server) {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n    let today = new Date(dateValue);\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let mName = monthNames[today.getMonth()];\n    const yyyy = today.getFullYear();\n    const hh = today.getHours();\n    const min = today.getMinutes();\n    const sec = today.getSeconds();\n    if (dd < 10) {\n      dd = `0${dd}`;\n    }\n    if (mm < 10) {\n      mm = `0${mm}`;\n    }\n    if (server) {\n      return `${dd}-${mm}-${yyyy}`;\n    }\n    return `${dd} ${mName} ${hh}:${min}:${sec}`;\n  }\n  // componentDidUpdate(oldProps) {\n  //   if (oldProps.paddingRight !== this.props.paddingRight) {\n  //     this.chart.paddingRight = this.props.paddingRight;\n  //   }\n\n  //   if (this.props.reduxLoadFlag != undefined && this.state.reduxLoadFlag != this.props.reduxLoadFlag) {\n  //     let campaings = [];\n  //     let userInfo = {};\n  //     if (this.props.campaings) {\n  //       let campaingsList = this.props.campaings;\n  //       campaings = (campaingsList) ? campaingsList : [];\n  //       if (this.chart) {\n  //         this.chart.data = campaings;\n  //       }\n  //     }\n  //     this.setState({\n  //       pollutionData: campaings,\n  //     })\n  //   }\n  // }\n  handleChangePage = async (event, newPage) => {\n    this.setState({\n      page: newPage\n    });\n    // setPage(newPage);\n  };\n  handleChangeRowsPerPage(event) {\n    this.setState({\n      rowsPerPage: +event.target.value,\n      page: 0\n    });\n  }\n  validateField = (fieldName, fieldValue) => {\n    let fieldValidationErrors = this.state.formErrors;\n    let startDateValid = this.state.startDateValid;\n    let endDateValid = this.state.endDateValid;\n\n    switch (fieldName) {\n      case \"startDate\":\n        startDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.startDate = !startDateValid\n          ? enMsg.startDateRequiredMsg\n          : \"\";\n        break;\n      case \"endDate\":\n        endDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.endDate = !endDateValid\n          ? enMsg.endDateRequiredMsg\n          : \"\";\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      startDateValid: startDateValid,\n      endDateValid: endDateValid,\n    }, this.validateForm);\n  }\n  validateForm() {\n    return (\n      this.state.startDateValid &&\n      this.state.endDateValid\n    )\n  }\n  openProjects() {\n    this.setState({ openProjects: true })\n  }\n  confirmModalClose() {\n    this.setState({\n      openProjects: false,\n      projectList: this.props.projectListArr,\n    })\n  }\n  GetTaskCount = (pId, tList) => {\n    const filteredTasks = tList.filter((list) => {\n      if (list.projectId == pId) {\n        return list\n      }\n    })\n    return filteredTasks.length;\n  }\n  GetTaskList = (pId, tList) => {\n    const taskList = {}\n    tList.map((list) => {\n      if (list.projectId == pId) {\n        if (list.taskStatus == \"new\") {\n          taskList.new = taskList.new ? taskList.taskList + 1 : 1;\n        } else if (list.taskStatus == \"process\") {\n          taskList.process = taskList.process ? taskList.taskList + 1 : 1;\n        } else {\n          taskList.done = taskList.done ? taskList.taskList + 1 : 1;\n        }\n      }\n    })\n    return (\n      <div>\n        {taskList.done ? <p>Done: {taskList.done}</p> : null}\n        {taskList.new ? <p>New: {taskList.new}</p> : null}\n        {taskList.process ? <p>Process: {taskList.process}</p> : null}\n      </div>\n    )\n  }\n  render() {\n    const { classes } = this.props;\n    const {\n      openProjects, projectList, taskList\n    } = this.state;\n    console.log(projectList)\n    return (\n      <div className=\"recordFormRow\">\n        <span className=\"box-with-bg\">\n          <AddProject openProjects={openProjects} confirmModalClose={this.confirmModalClose} />\n          <div className=\"recordFormHead white-text\">My Projects</div>\n          <div className=\"full-width text-right\">\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.openProjects()}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n                  Add Project\n                </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <FormControl >\n              </FormControl>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.searchPollData()}\n                disabled={!this.validateForm() || this.state.loading}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n                  Search\n                </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n            </div>\n          </div>\n          <div className=\"full-width\">\n            <GridContainer>\n              <CardBody>\n                <Paper className={(classes.root, this.cust_table_cover)}>\n                  <div className={(classes.tableWrapper, this.cust_table)}>\n                    <div className=\"table-respopnsive\">\n                      <Table>\n                        <TableHead className={this.tableh}>\n                          <TableRow>\n                            {columns.map(column => (\n                              <TableCell\n                                key={column.id}\n                                align={column.align}\n                                style={{ minWidth: column.minWidth }}\n                              >\n                                {column.label}\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody key=\"TableBody\">\n                          {\n                            this.state.projectList.length &&\n                              this.state.projectList.length\n                              ? this.state.projectList\n                                .slice(\n                                  this.state.page * this.state.rowsPerPage,\n                                  this.state.page * this.state.rowsPerPage +\n                                  this.state.rowsPerPage\n                                )\n                                .map((row, key) => {\n                                  return (\n                                    <TableRow\n                                      hover\n                                      role=\"checkbox\"\n                                      tabIndex={-1}\n                                      key={key}\n                                    >\n                                      <TableCell>{row.projectName}</TableCell>\n                                      <TableCell>{row.projectDesc}</TableCell>\n                                      <TableCell>\n                                        {\n                                          taskList && taskList.length\n                                            ?\n                                            <GetTaskCount pId={row.uid} taskList={taskList} />\n                                            :\n                                            \"No task\"\n                                        }\n                                      </TableCell>\n                                      <TableCell>\n                                        {\n                                          taskList && taskList.length\n                                            ?\n                                            <GetTaskList pId={row.uid} taskList={taskList} />\n                                            :\n                                            \"No task\"\n                                        }\n                                      </TableCell>\n                                      <TableCell>{new Date(row.createDate).toDateString()}</TableCell>\n                                      <TableCell>\n                                        <span className=\"edit-action\">\n                                          <Link\n                                            underline=\"none\"\n                                            to={\n                                              {\n                                                pathname: basePath + baseRoutes.tasks.path,\n                                                state: row.uid\n                                              }\n                                            }\n                                          >\n                                            <Icon className=\"fa fa-eye\" aria-hidden=\"true\" style={{ color: \"#fff\" }} />\n                                          </Link>\n                                        </span>\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                })\n                              :\n                              <TableRow>\n                                <TableCell colspan='7'>\n                                  <div className=\"not-found-text\">No projects available...</div>\n                                </TableCell>\n                              </TableRow>\n                          }\n                        </TableBody>\n                      </Table>\n                    </div>\n                  </div>\n                  <TablePagination\n                    rowsPerPageOptions={PER_PAGE_OPTIONS}\n                    component=\"div\"\n                    count={\n                      this.state.projectList.length &&\n                        this.state.projectList.length\n                        ? this.state.projectList.length\n                        : 0\n                    }\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                      \"aria-label\": \"previous page\"\n                    }}\n                    nextIconButtonProps={{\n                      \"aria-label\": \"next page\"\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n                </Paper>\n              </CardBody>\n            </GridContainer>\n          </div>\n        </span>\n      </div>\n    );\n  }\n}\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst Record = connect(\n  mapStateToProps, mapDispatchToProps\n)(RecordClass);\n\n// export default Form;\nexport default withStyles(dashboardStyle)(Record);"]},"metadata":{},"sourceType":"module"}