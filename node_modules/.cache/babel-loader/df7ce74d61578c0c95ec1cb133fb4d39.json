{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/components/Login/Login.jsx\";\nimport React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField, Checkbox, FormControlLabel, Slide } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport \"assets/css/login.css\";\nimport logo from \"assets/img/front-logo.png\";\nimport { basePath, baseRoutes, dpBaseRoutes, providerUserBaseRoutes, providerBaseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\nimport { apiPath } from \"api\";\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { NotificationOptions, EMAIL_REGEX, MAX_PASSWORD_LENGTH, ADMIN_USER, DP_USER, PROVIDER_USER, PROVIDER } from \"__helpers/constants\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ReactNotifications from 'react-browser-notifications';\nimport { CLIENT_TOKEN_LIFETIME } from \"__helpers/constants\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { connect } from \"react-redux\";\nimport { addUSerUInfo as _addUSerUInfo, categoryList, insuranceList, patientStatusList, hospitalList, addTimeStamp, reduxLoad as _reduxLoad } from \"../../js/actions/index\";\nimport { GOOGLE_API_KEY } from \"__helpers/constants\";\nimport { DATA_LOADING } from \"__helpers/constants\";\nimport { USER_INFO } from \"__helpers/constants\";\n\nvar AdblockDetect = /*#__PURE__*/function (_Component) {\n  _inherits(AdblockDetect, _Component);\n\n  var _super = _createSuper(AdblockDetect);\n\n  function AdblockDetect() {\n    var _this;\n\n    _classCallCheck(this, AdblockDetect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      usingAdblock: false\n    };\n    return _this;\n  }\n\n  _createClass(AdblockDetect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        usingAdblock: this.fakeAdBanner.offsetHeight === 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.usingAdblock === true) {\n        return this.props.children;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(r) {\n          return _this2.fakeAdBanner = r;\n        },\n        style: {\n          height: '1px',\n          width: '1px',\n          visiblity: 'none',\n          pointerEvents: 'none'\n        },\n        className: \"adBanner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AdblockDetect;\n}(Component);\n\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"right\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }));\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUSerUInfo: function addUSerUInfo(addUSerUInfoVal) {\n      return dispatch(_addUSerUInfo(addUSerUInfoVal));\n    },\n    reduxLoad: function reduxLoad(reduxLoadVal) {\n      return dispatch(_reduxLoad(reduxLoadVal));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    reduxLoadFlag: state.reduxLoadFlag\n  };\n};\n\nvar LoginClass = /*#__PURE__*/function (_Component2) {\n  _inherits(LoginClass, _Component2);\n\n  var _super2 = _createSuper(LoginClass);\n\n  function LoginClass(props) {\n    var _this3;\n\n    _classCallCheck(this, LoginClass);\n\n    _this3 = _super2.call(this, props);\n\n    _this3.handleChange = function (event) {};\n\n    _this3.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this3.setState(_defineProperty({}, name, value), function () {\n        _this3.validateField(name, value);\n      });\n    };\n\n    _this3.handleUserInputReset = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this3.setState(_defineProperty({}, name, value), function () {\n        _this3.validateFieldReset(name, value);\n      });\n    };\n\n    _this3.componentDidMount = function () {\n      _this3._isMounted = true;\n\n      _this3.eraseCookie('_max_mrj');\n\n      var spinner = document.getElementById('loadingSpinner');\n\n      if (spinner && !spinner.hasAttribute('hidden')) {\n        spinner.setAttribute('hidden', 'true');\n      }\n\n      _this3.showNotifications();\n\n      var currentTimeStamp = new Date().getTime();\n      var timeFlag = currentTimeStamp - _this3.state.tokenTimeStamp < CLIENT_TOKEN_LIFETIME;\n\n      if (_this3.state.accessToken && _this3.state.timeFlag) {}\n    };\n\n    _this3.componentWillMount = function () {\n      var req = null;\n      var protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\";\n    };\n\n    _this3.handleCloseDialog = function (e) {\n      window.location.reload();\n    };\n\n    _this3.checkRememberMe = function (e) {\n      var checkBoxVal = _this3.state.isRemember ? false : true;\n\n      _this3.setState({\n        isRemember: checkBoxVal\n      });\n    };\n\n    _this3.closeModal = function (e) {\n      _this3.setState({\n        forgotModal: false,\n        resendModal: false\n      });\n    };\n\n    _this3.backModal = function (e) {\n      _this3.setState({\n        forgotModal: true,\n        resendModal: false\n      });\n    };\n\n    _this3.openForgotModal = function (e) {\n      _this3.setState({\n        forgotModal: true\n      });\n    };\n\n    _this3.changePasswordType = function (e) {\n      var passwordType = _this3.state.passwordType == \"password\" ? \"text\" : \"password\";\n\n      _this3.setState({\n        passwordType: passwordType\n      });\n    };\n\n    var userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    var tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n\n    var _currentTimeStamp = new Date().getTime();\n\n    var timeFlag = false;\n\n    if (!userInfo || !tokenTimeStamp) {\n      userService.logout();\n    } else {\n      timeFlag = _currentTimeStamp - tokenTimeStamp < CLIENT_TOKEN_LIFETIME;\n    }\n\n    userService.logout();\n    _this3._isMounted = false;\n\n    var _spinner = document.getElementById('loadingSpinner');\n\n    _this3.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      resetEmail: \"\",\n      formErrors: {\n        username: \"\",\n        password: \"\"\n      },\n      emailValid: false,\n      passwordValid: false,\n      resetFormErrors: {\n        email: \"\"\n      },\n      resetEmailValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      apiPathForgot: apiPath.forgotPassword,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: userInfo && userInfo.accessToken ? userInfo.accessToken : [],\n      tokenTimeStamp: tokenTimeStamp ? tokenTimeStamp : _currentTimeStamp,\n      timeFlag: timeFlag,\n      isRemember: false,\n      forgotModal: false,\n      resendModal: false,\n      passwordType: \"password\",\n      city: '',\n      query: '',\n      reduxLoadFlag: false,\n      spinner: _spinner,\n      profileLoading: false\n    };\n    _this3.clientAuthToken = null;\n    _this3.handleChange = _this3.handleChange.bind(_assertThisInitialized(_this3));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_this3));\n    _this3.sendMailApi = _this3.sendMailApi.bind(_assertThisInitialized(_this3));\n    _this3.handleCloseDialog = _this3.handleCloseDialog.bind(_assertThisInitialized(_this3));\n    _this3.showNotifications = _this3.showNotifications.bind(_assertThisInitialized(_this3));\n    _this3.checkRememberMe = _this3.checkRememberMe.bind(_assertThisInitialized(_this3));\n    _this3.closeModal = _this3.closeModal.bind(_assertThisInitialized(_this3));\n    _this3.backModal = _this3.backModal.bind(_assertThisInitialized(_this3));\n    _this3.openForgotModal = _this3.openForgotModal.bind(_assertThisInitialized(_this3));\n    _this3.sendMail = _this3.sendMail.bind(_assertThisInitialized(_this3));\n    _this3.resendMail = _this3.resendMail.bind(_assertThisInitialized(_this3));\n    _this3.getProfileData = _this3.getProfileData.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(LoginClass, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case \"email\":\n          emailValid = value.match(EMAIL_REGEX);\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidUser;\n          emailValid = value.trim().length > 0 ? true : false;\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidUser;\n          break;\n\n        case \"password\":\n          var error = \"\";\n          passwordValid = true;\n\n          if (!value.trim().length) {\n            passwordValid = false;\n            error = enMsg.passwordRequired;\n          } else if (value.length < 1) {\n            passwordValid = false;\n            error = \"Password too short\";\n          }\n\n          fieldValidationErrors.password = error;\n          break;\n\n        default:\n          emailValid = true;\n          passwordValid = true;\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateFieldReset\",\n    value: function validateFieldReset(fieldName, value) {\n      var fieldValidationErrors = this.state.resetFormErrors;\n      var emailValid = this.state.resetEmailValid;\n\n      switch (fieldName) {\n        case \"resetEmail\":\n          emailValid = value.match(EMAIL_REGEX);\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n          break;\n\n        default:\n          emailValid = true;\n          break;\n      }\n\n      this.setState({\n        resetFormErrors: fieldValidationErrors,\n        resetEmailValid: emailValid\n      }, this.validateFormReset);\n    }\n  }, {\n    key: \"validateFormReset\",\n    value: function validateFormReset() {\n      return this.state.resetEmailValid;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.emailValid && this.state.passwordValid;\n    }\n  }, {\n    key: \"showNotifications\",\n    value: function showNotifications() {}\n  }, {\n    key: \"createCookie\",\n    value: function createCookie(name, value, days) {\n      if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n        var expires = \"; expires=\" + date.toGMTString();\n      } else var expires = \"\";\n\n      document.cookie = name + \"=\" + value + expires + \"; path=/\";\n    }\n  }, {\n    key: \"eraseCookie\",\n    value: function eraseCookie(name) {\n      this.createCookie(name, \"\", -1);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        username: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {}\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this4 = this;\n\n        var data, showNotification, response, notifiaciton;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.props.reduxLoad(false);\n                this.setState({\n                  loading: true\n                });\n                event.preventDefault();\n                data = {\n                  username: this.state.email,\n                  // username: 'admin',\n                  password: this.state.password,\n                  // password: 'admin',\n                  mail: 'fronted@mailinator.com' // rememberMe: this.state.isRemember\n\n                };\n                showNotification = {};\n                _context.prev = 5;\n                _context.next = 8;\n                return fetch(this.state.apiPath, {\n                  method: \"POST\",\n                  hheaders: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  headers: clientTokenHeader(),\n                  body: JSON.stringify(data),\n                  data: JSON.stringify(data)\n                }).then(function (response) {\n                  if (response.status === 400) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                  } else if (response.status === 401) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: \"Login Access Denied.\",\n                      type: \"danger\"\n                    };\n                  } else if (response.ok) {} else {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                    var error = new Error(response.statusText);\n                  }\n\n                  return response.json(); // return response.text();\n                }).then(function (data) {\n                  if (data.status == 401) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: data.detail,\n                      type: \"danger\"\n                    };\n                  }\n\n                  var accessToken = data.access_token;\n                  var jti = data.jti;\n                  var refreshToken = data.refresh_token;\n                  var tokenType = data.token_type;\n\n                  if (accessToken !== undefined) {\n                    var userRole = \"other\";\n\n                    if (_this4.state.email == \"admin\" || _this4.state.email == \"maxmrj.admin@yopmail.com\" || _this4.state.email == \"maxadmin\" || _this4.state.email == \"maxadmin@yopmail.com\") {\n                      userRole = \"admin\";\n                    }\n\n                    var user = {\n                      jti: jti,\n                      // accessToken: tokenType+\";\"+accessToken,\n                      accessToken: accessToken,\n                      refreshToken: refreshToken,\n                      tokenType: tokenType,\n                      userRole: userRole\n                    };\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n\n                    _this4.getProfileData(user);\n\n                    return;\n                  }\n\n                  return true;\n                })[\"catch\"](function (error) {\n                  showNotification = {\n                    title: enMsg.loginFailedTitle,\n                    message: enMsg.inValidCredentials,\n                    type: \"danger\"\n                  };\n                  return response;\n                });\n\n              case 8:\n                response = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n                showNotification = {\n                  title: enMsg.loginFailedTitle,\n                  message: enMsg.inValidCredentials,\n                  type: \"danger\"\n                };\n\n              case 14:\n                if (showNotification !== undefined && showNotification.title !== undefined && showNotification.message !== undefined && showNotification.type !== undefined) {\n                  this.notificationID = store.removeNotification(this.notificationID);\n\n                  if (this.notificationID == undefined) {\n                    notifiaciton = {\n                      title: showNotification.title,\n                      message: showNotification.message,\n                      type: showNotification.type\n                    };\n                    notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n                    this.notificationID = store.addNotification(notifiaciton);\n                  }\n\n                  userService.showNotification(showNotification);\n                }\n\n                this._isMounted && this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 11]]);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"getProfileData\",\n    value: function () {\n      var _getProfileData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userToken) {\n        var showNotification, userResp, firstName, lastName, imageRef, createdById, newUser, usrType, bbaCondition, termNcondition, userInfo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                showNotification = {};\n\n                if (!userToken) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                this.setState({\n                  loading: true\n                });\n                this.setState({\n                  reduxLoadFlag: false\n                });\n                _context2.next = 6;\n                return userService.fetchProfile();\n\n              case 6:\n                userResp = _context2.sent;\n\n                if (userResp && userResp.firstName) {\n                  firstName = userResp.firstName;\n                  lastName = userResp.lastName;\n                  imageRef = userResp.imageUrl;\n                  createdById = userResp.id;\n                  newUser = userResp.newUser;\n                  usrType = userResp.authorities;\n                  bbaCondition = userResp.bbaCondition;\n                  termNcondition = userResp.termNcondition;\n                  userInfo = {\n                    firstName: firstName,\n                    lastName: lastName,\n                    imageRef: imageRef,\n                    newUser: newUser,\n                    createdById: createdById,\n                    usrType: usrType[0],\n                    termNcondition: termNcondition,\n                    bbaCondition: bbaCondition,\n                    provider: userResp.provider ? userResp.provider : [],\n                    dischargePlanner: userResp.dischargeplanner ? userResp.dischargeplanner : []\n                  };\n                  this.props.addUSerUInfo(userInfo);\n                  localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n\n                  if (usrType[0] == ADMIN_USER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_a', 0);\n                    this.props.history.replace(baseRoutes.dashboard.path);\n                    window.location.replace(baseRoutes.dashboard.path);\n                  } else if (usrType[0] == DP_USER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_dp', 0);\n                    this.props.history.replace(dpBaseRoutes.dashboard.path, \"/\");\n                    window.location.replace(dpBaseRoutes.dashboard.path);\n                  } else if (usrType[0] == PROVIDER_USER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_pu', 0);\n                    this.props.history.replace(providerUserBaseRoutes.dashboard.path);\n                    window.location.replace(providerUserBaseRoutes.dashboard.path);\n                  } else if (usrType[0] == PROVIDER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_p', 0);\n                    this.props.history.replace(providerBaseRoutes.dashboard.path);\n                    window.location.replace(providerBaseRoutes.dashboard.path);\n                  } else {\n                    showNotification = {\n                      title: \"Login\",\n                      message: \"Login Access Denied\",\n                      type: \"dander\"\n                    };\n                  }\n\n                  this.props.reduxLoad(true);\n                  this.state.spinner.setAttribute('hidden', 'true');\n                  userService.showNotification(showNotification);\n                  this.setState({\n                    loading: false\n                  });\n                } else {\n                  showNotification = {\n                    title: \"Login\",\n                    message: \"Login Access Denied\",\n                    type: \"dander\"\n                  };\n                  this.state.spinner.setAttribute('hidden', 'true');\n                  userService.showNotification(showNotification);\n                  this.setState({\n                    loading: false\n                  });\n                }\n\n                showNotification = {\n                  title: \"Login\",\n                  message: \"Login Access Denied\",\n                  type: \"dander\"\n                };\n                this.state.spinner.setAttribute('hidden', 'true');\n                userService.showNotification(showNotification);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getProfileData(_x2) {\n        return _getProfileData.apply(this, arguments);\n      }\n\n      return getProfileData;\n    }()\n  }, {\n    key: \"sendMailApi\",\n    value: function () {\n      var _sendMailApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var _this5 = this;\n\n        var data, showNotification, response, notifiaciton;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                this.setState({\n                  loading: true\n                });\n                data = {\n                  mail: this.state.resetEmail\n                };\n                showNotification = {};\n                _context3.prev = 4;\n                _context3.next = 7;\n                return fetch(this.state.apiPathForgot + \"?mail=\" + encodeURIComponent(this.state.resetEmail), {\n                  method: \"GET\",\n                  headers: clientTokenHeader() // body: JSON.stringify(data),\n                  // data: JSON.stringify(data)\n\n                }).then(function (response) {\n                  if (response.status === 400) {\n                    showNotification = {\n                      title: enMsg.forgotPasswordTitleFail,\n                      message: enMsg.forgotPasswordMsgFail,\n                      type: \"danger\"\n                    };\n                  } else if (response.ok) {\n                    showNotification = {\n                      title: enMsg.forgotPasswordTitle,\n                      message: enMsg.forgotPasswordMsg,\n                      type: \"success\"\n                    };\n\n                    _this5.setState({\n                      forgotModal: false,\n                      resendModal: true\n                    });\n                  } else {\n                    showNotification = {\n                      title: enMsg.forgotPasswordTitleFail,\n                      message: enMsg.forgotPasswordMsgFail,\n                      type: \"danger\"\n                    };\n                    var error = new Error(response.statusText);\n                  } // return response.json();\n\n\n                  // return response.json();\n                  return response.text();\n                }).then(function (data) {\n                  return true;\n                })[\"catch\"](function (error) {\n                  showNotification = {\n                    title: enMsg.forgotPasswordTitleFail,\n                    message: enMsg.forgotPasswordMsgFail,\n                    type: \"danger\"\n                  };\n                  return response;\n                });\n\n              case 7:\n                response = _context3.sent;\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](4);\n                showNotification = {\n                  title: enMsg.forgotPasswordTitleFail,\n                  message: enMsg.forgotPasswordMsgFail,\n                  type: \"danger\"\n                };\n\n              case 13:\n                if (showNotification !== undefined && showNotification.title !== undefined && showNotification.message !== undefined && showNotification.type !== undefined) {\n                  this.notificationID = store.removeNotification(this.notificationID);\n\n                  if (this.notificationID == undefined) {\n                    notifiaciton = {\n                      title: showNotification.title,\n                      message: showNotification.message,\n                      type: showNotification.type\n                    };\n                    notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n                    this.notificationID = store.addNotification(notifiaciton);\n                  }\n\n                  userService.showNotification(showNotification);\n                }\n\n                this._isMounted && this.setState({\n                  loading: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[4, 10]]);\n      }));\n\n      function sendMailApi(_x3) {\n        return _sendMailApi.apply(this, arguments);\n      }\n\n      return sendMailApi;\n    }()\n  }, {\n    key: \"sendMail\",\n    value: function sendMail(e) {\n      e.preventDefault();\n      this.sendMailApi(e);\n    }\n  }, {\n    key: \"resendMail\",\n    value: function resendMail(e) {\n      e.preventDefault();\n      this.sendMailApi(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-outer-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ReactNotifications, {\n        onRef: function onRef(ref) {\n          return _this6.n = ref;\n        } // Required\n        ,\n        title: \"ASG\" // Required\n        ,\n        body: \"Welcome as ASG application\",\n        icon: \"icon.png\",\n        tag: \"welcome\",\n        timeout: \"1000\",\n        onClick: function onClick(event) {\n          return _this6.handleClick(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-cover gray-bg-color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: this.state.forgotModal\n      }, this.state.other, {\n        TransitionComponent: Transition,\n        maxWidth: 'lg',\n        keepMounted: true,\n        className: \"change-pass-dialog profile-content addBlockPopup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"customized-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green-header warning-header\",\n        style: {\n          top: \"0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 15\n        }\n      }, \"Forgot Your Password?\")), /*#__PURE__*/React.createElement(DialogContent, {\n        className: \"addBlockContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"addBlockDesc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }\n      }, \"Don't worry Resetting your password is easy.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 87\n        }\n      }), \" Just tell us the email ID you registered with MAXMRJ.\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.sendMail,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        style: {\n          width: \"100%\"\n        },\n        label: \"User ID/Email Address *\",\n        type: \"email\",\n        name: \"resetEmail\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this6.handleUserInputReset(event);\n        },\n        value: this.state.resetEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.resetEmailValid,\n        formErrors: this.state.resetFormErrors,\n        fieldName: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-button-cover d-flex justify-space-evenly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        className: this.state.loading ? \"btn1 buttonSuccess\" : \"btn1\",\n        type: \"submit\",\n        disabled: this.state.loading || !this.validateFormReset(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 19\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 23\n        }\n      }), \"Send\"), /*#__PURE__*/React.createElement(Button //disabled={!this.validateForm()}\n      , {\n        onClick: this.closeModal,\n        type: \"button\",\n        className: \"btn2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 19\n        }\n      }, \"Close\"))))), /*#__PURE__*/React.createElement(Dialog, Object.assign({\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: this.state.resendModal\n      }, this.state.other, {\n        TransitionComponent: Transition,\n        maxWidth: 'md',\n        keepMounted: true,\n        className: \"change-pass-dialog profile-content addBlockPopup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"customized-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green-header warning-header\",\n        style: {\n          top: \"0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 15\n        }\n      }, \"Set Your Passsword?\")), /*#__PURE__*/React.createElement(DialogContent, {\n        className: \"addBlockContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"addBlockDesc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 15\n        }\n      }, \"We have sent a password reset mail to \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 81\n        }\n      }, this.state.resetEmail), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 111\n        }\n      }), \" Please click on the reset password link to set a new password.\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 15\n        }\n      }, \"Didn't Receive your email yet?\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 15\n        }\n      }, \"Please check your spam folder or Resend the Email.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-button-cover d-flex justify-space-evenly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: this.state.loading ? \"buttonSuccess btn1\" : \"btn1\",\n        type: \"button\",\n        onClick: this.resendMail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 21\n        }\n      }), \"Re-Send\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.backModal,\n        type: \"button\",\n        className: \"btn3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 17\n        }\n      }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.closeModal,\n        type: \"button\",\n        className: \"btn2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 17\n        }\n      }, \"Close\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-content loginLogoMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginLogoInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-inner-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"User ID/Email Address *\",\n        type: \"email\",\n        name: \"email\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this6.handleUserInput(event);\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.emailValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"possword-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Password *\",\n        type: this.state.passwordType,\n        name: \"password\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this6.handleUserInput(event);\n        },\n        value: this.state.password,\n        inputProps: {\n          maxLength: MAX_PASSWORD_LENGTH\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.passwordValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginPageLink forgot-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        onClick: this.openForgotModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 23\n        }\n      }, \"Forgot Password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        className: this.state.loading ? \"buttonSuccess btn1\" : \"btn1\",\n        disabled: this.state.loading || !this.validateForm(),\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 21\n        }\n      }, \"Login\", this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 25\n        }\n      })))))))));\n    }\n  }]);\n\n  return LoginClass;\n}(Component);\n\nexport var Login = connect(mapStateToProps, mapDispatchToProps)(LoginClass);\nexport default Login;","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/components/Login/Login.jsx"],"names":["React","Component","useReducer","Button","FormGroup","TextField","Checkbox","FormControlLabel","Slide","CircularProgress","Link","logo","basePath","baseRoutes","dpBaseRoutes","providerUserBaseRoutes","providerBaseRoutes","FormErrors","fetch","apiPath","store","userService","enMsg","NotificationOptions","EMAIL_REGEX","MAX_PASSWORD_LENGTH","ADMIN_USER","DP_USER","PROVIDER_USER","PROVIDER","clientTokenHeader","NotificationContainer","DialogTitle","DialogContent","DialogActions","Dialog","ReactNotifications","CLIENT_TOKEN_LIFETIME","Visibility","VisibilityOff","connect","addUSerUInfo","categoryList","insuranceList","patientStatusList","hospitalList","addTimeStamp","reduxLoad","GOOGLE_API_KEY","DATA_LOADING","USER_INFO","AdblockDetect","state","usingAdblock","setState","fakeAdBanner","offsetHeight","props","children","r","height","width","visiblity","pointerEvents","Transition","forwardRef","ref","mapDispatchToProps","dispatch","addUSerUInfoVal","reduxLoadVal","mapStateToProps","userInfo","reduxLoadFlag","LoginClass","handleChange","event","handleUserInput","e","name","target","value","validateField","handleUserInputReset","validateFieldReset","componentDidMount","_isMounted","eraseCookie","spinner","document","getElementById","hasAttribute","setAttribute","showNotifications","currentTimeStamp","Date","getTime","timeFlag","tokenTimeStamp","accessToken","componentWillMount","req","protocol","process","env","NODE_ENV","handleCloseDialog","window","location","reload","checkRememberMe","checkBoxVal","isRemember","closeModal","forgotModal","resendModal","backModal","openForgotModal","changePasswordType","passwordType","JSON","parse","localStorage","getItem","logout","email","username","password","grantType","scope","resetEmail","formErrors","emailValid","passwordValid","resetFormErrors","resetEmailValid","formValid","login","apiPathForgot","forgotPassword","loading","showNotification","open","other","undefined","city","query","profileLoading","clientAuthToken","bind","handleSubmit","sendMailApi","sendMail","resendMail","getProfileData","fieldName","fieldValidationErrors","match","inValidUser","trim","length","error","passwordRequired","validateForm","inValidEmail","validateFormReset","days","date","setTime","expires","toGMTString","cookie","createCookie","info","preventDefault","data","mail","method","hheaders","headers","body","stringify","then","response","status","title","loginFailedTitle","message","inValidCredentials","type","ok","Error","statusText","json","detail","access_token","jti","refreshToken","refresh_token","tokenType","token_type","userRole","user","setItem","notificationID","removeNotification","notifiaciton","Object","assign","addNotification","userToken","fetchProfile","userResp","firstName","lastName","imageRef","imageUrl","createdById","id","newUser","usrType","authorities","bbaCondition","termNcondition","provider","dischargePlanner","dischargeplanner","history","replace","dashboard","path","encodeURIComponent","forgotPasswordTitleFail","forgotPasswordMsgFail","forgotPasswordTitle","forgotPasswordMsg","text","n","handleClick","top","maxLength","Login"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField, Checkbox, FormControlLabel, Slide } from \"@material-ui/core\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\n\nimport \"assets/css/login.css\";\nimport logo from \"assets/img/front-logo.png\";\n\nimport { basePath, baseRoutes, dpBaseRoutes, providerUserBaseRoutes, providerBaseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\n\nimport { apiPath } from \"api\";\n\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport {\n  NotificationOptions, EMAIL_REGEX, MAX_PASSWORD_LENGTH,\n  ADMIN_USER,\n  DP_USER,\n  PROVIDER_USER,\n  PROVIDER,\n} from \"__helpers/constants\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ReactNotifications from 'react-browser-notifications';\nimport { CLIENT_TOKEN_LIFETIME } from \"__helpers/constants\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { connect } from \"react-redux\";\nimport {\n  addUSerUInfo,\n  categoryList,\n  insuranceList,\n  patientStatusList,\n  hospitalList,\n  addTimeStamp,\n  reduxLoad,\n} from \"../../js/actions/index\";\nimport {\n  GOOGLE_API_KEY\n} from \"__helpers/constants\";\nimport { DATA_LOADING } from \"__helpers/constants\";\nimport { USER_INFO } from \"__helpers/constants\";\n\nclass AdblockDetect extends Component {\n  state = {\n    usingAdblock: false,\n  }\n\n  componentDidMount() {\n    this.setState({ usingAdblock: this.fakeAdBanner.offsetHeight === 0 });\n  }\n\n  render() {\n    if (this.state.usingAdblock === true) {\n      return this.props.children;\n    }\n\n    return (\n      <div\n        ref={r => (this.fakeAdBanner = r)}\n        style={{ height: '1px', width: '1px', visiblity: 'none', pointerEvents: 'none' }}\n        className=\"adBanner\"\n      />\n    );\n  }\n}\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"right\" ref={ref} {...props} />;\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUSerUInfo: addUSerUInfoVal => dispatch(addUSerUInfo(addUSerUInfoVal)),\n    reduxLoad: reduxLoadVal => dispatch(reduxLoad(reduxLoadVal)),\n  };\n}\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.userInfo,\n    reduxLoadFlag: state.reduxLoadFlag,\n  };\n};\nclass LoginClass extends Component {\n  constructor(props) {\n    super(props);\n\n    let userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    let currentTimeStamp = new Date().getTime();\n    let timeFlag = false;\n    if (!userInfo || !tokenTimeStamp) {\n      userService.logout();\n    } else {\n      timeFlag = (currentTimeStamp - tokenTimeStamp) < CLIENT_TOKEN_LIFETIME;\n    }\n    userService.logout();\n    this._isMounted = false;\n    let spinner = document.getElementById('loadingSpinner');\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      resetEmail: \"\",\n      formErrors: { username: \"\", password: \"\" },\n      emailValid: false,\n      passwordValid: false,\n      resetFormErrors: { email: \"\" },\n      resetEmailValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      apiPathForgot: apiPath.forgotPassword,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: (userInfo && userInfo.accessToken) ? userInfo.accessToken : [],\n      tokenTimeStamp: (tokenTimeStamp) ? tokenTimeStamp : currentTimeStamp,\n      timeFlag: timeFlag,\n      isRemember: false,\n      forgotModal: false,\n      resendModal: false,\n      passwordType: \"password\",\n      city: '',\n      query: '',\n      reduxLoadFlag: false,\n      spinner: spinner,\n      profileLoading: false,\n    };\n    this.clientAuthToken = null;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendMailApi = this.sendMailApi.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.showNotifications = this.showNotifications.bind(this);\n    this.checkRememberMe = this.checkRememberMe.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.backModal = this.backModal.bind(this);\n    this.openForgotModal = this.openForgotModal.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.resendMail = this.resendMail.bind(this);\n    this.getProfileData = this.getProfileData.bind(this);\n  }\n\n  handleChange = event => {\n  };\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n  handleUserInputReset = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value }, () => {\n      this.validateFieldReset(name, value);\n    });\n  };\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(EMAIL_REGEX);\n        fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidUser;\n\n        emailValid = value.trim().length > 0 ? true : false;\n        fieldValidationErrors.email = emailValid\n          ? \"\"\n          : enMsg.inValidUser;\n        break;\n      case \"password\":\n        let error = \"\";\n        passwordValid = true;\n        if (!value.trim().length) {\n          passwordValid = false;\n          error = enMsg.passwordRequired;\n        } else if (value.length < 1) {\n          passwordValid = false;\n          error = \"Password too short\";\n        }\n        fieldValidationErrors.password = error;\n        break;\n      default:\n        emailValid = true;\n        passwordValid = true;\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      },\n      this.validateForm\n    );\n  }\n  validateFieldReset(fieldName, value) {\n    let fieldValidationErrors = this.state.resetFormErrors;\n    let emailValid = this.state.resetEmailValid;\n    switch (fieldName) {\n      case \"resetEmail\":\n        emailValid = value.match(EMAIL_REGEX);\n        fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidEmail;\n        break;\n      default:\n        emailValid = true;\n        break;\n    }\n    this.setState(\n      {\n        resetFormErrors: fieldValidationErrors,\n        resetEmailValid: emailValid,\n      },\n      this.validateFormReset\n    );\n  }\n  validateFormReset() {\n    return this.state.resetEmailValid;\n  }\n  validateForm() {\n    return this.state.emailValid && this.state.passwordValid;\n  }\n  showNotifications() {\n  }\n  createCookie(name, value, days) {\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      var expires = \"; expires=\" + date.toGMTString();\n    }\n    else var expires = \"\";\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n  }\n  eraseCookie(name) {\n    this.createCookie(name, \"\", -1);\n  }\n  componentDidMount = () => {\n    this._isMounted = true;\n    this.eraseCookie('_max_mrj')\n    const spinner = document.getElementById('loadingSpinner');\n    if (spinner && !spinner.hasAttribute('hidden')) {\n      spinner.setAttribute('hidden', 'true');\n    }\n    this.showNotifications();\n    let currentTimeStamp = new Date().getTime();\n    let timeFlag = (currentTimeStamp - this.state.tokenTimeStamp) < CLIENT_TOKEN_LIFETIME;\n    if (this.state.accessToken && this.state.timeFlag) {\n\n    }\n\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillMount = () => {\n    const req = null;\n    const protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\";\n  };\n  handleChange(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  componentDidCatch(error, info) {\n  }\n  handleCloseDialog = e => {\n    window.location.reload();\n  };\n\n  async handleSubmit(event) {\n    this.props.reduxLoad(false);\n    this.setState({ loading: true });\n    event.preventDefault();\n    const data = {\n      username: this.state.email,\n      // username: 'admin',\n      password: this.state.password,\n      // password: 'admin',\n      mail: 'fronted@mailinator.com',\n      // rememberMe: this.state.isRemember\n    };\n\n    let showNotification = {};\n\n    try {\n      const response = await fetch(this.state.apiPath, {\n        method: \"POST\",\n        hheaders: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        headers: clientTokenHeader(),\n        body: JSON.stringify(data),\n        data: JSON.stringify(data)\n      })\n        .then(response => {\n          if (response.status === 400) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n          } else if (response.status === 401) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: \"Login Access Denied.\",\n              type: \"danger\"\n            };\n          } else if (response.ok) {\n          } else {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n            let error = new Error(response.statusText);\n          }\n          return response.json();\n          // return response.text();\n        })\n        .then(data => {\n          if (data.status == 401) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: data.detail,\n              type: \"danger\"\n            };\n          }\n          let accessToken = data.access_token;\n          let jti = data.jti;\n          let refreshToken = data.refresh_token;\n          let tokenType = data.token_type;\n          if (accessToken !== undefined) {\n            let userRole = \"other\"\n            if (this.state.email == \"admin\" || this.state.email == \"maxmrj.admin@yopmail.com\" || this.state.email == \"maxadmin\" || this.state.email == \"maxadmin@yopmail.com\") {\n              userRole = \"admin\"\n            }\n            let user = {\n              jti: jti,\n              // accessToken: tokenType+\";\"+accessToken,\n              accessToken: accessToken,\n              refreshToken: refreshToken,\n              tokenType: tokenType,\n              userRole: userRole,\n            };\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            this.getProfileData(user);\n            return;\n          }\n          return true;\n        })\n        .catch(error => {\n          showNotification = {\n            title: enMsg.loginFailedTitle,\n            message: enMsg.inValidCredentials,\n            type: \"danger\"\n          };\n\n          return response;\n        });\n\n    } catch (error) {\n      showNotification = {\n        title: enMsg.loginFailedTitle,\n        message: enMsg.inValidCredentials,\n        type: \"danger\"\n      };\n    }\n    if (\n      showNotification !== undefined &&\n      showNotification.title !== undefined &&\n      showNotification.message !== undefined &&\n      showNotification.type !== undefined\n    ) {\n      this.notificationID = store.removeNotification(this.notificationID);\n      if (this.notificationID == undefined) {\n        let notifiaciton = {\n          title: showNotification.title,\n          message: showNotification.message,\n          type: showNotification.type\n        };\n        notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n        this.notificationID = store.addNotification(notifiaciton);\n      }\n      userService.showNotification(showNotification)\n    }\n\n    this._isMounted && this.setState({ loading: false });\n  }\n  async getProfileData(userToken) {\n    let showNotification = {};\n    if (userToken) {\n      this.setState({ loading: true });\n      this.setState({ reduxLoadFlag: false })\n      let userResp = await userService.fetchProfile();\n      if (userResp && userResp.firstName) {\n        let firstName = userResp.firstName;\n        let lastName = userResp.lastName;\n        let imageRef = userResp.imageUrl;\n        let createdById = userResp.id;\n        let newUser = userResp.newUser;\n        let usrType = userResp.authorities;\n        let bbaCondition = userResp.bbaCondition;\n        let termNcondition = userResp.termNcondition;\n        let userInfo = {\n          firstName: firstName,\n          lastName: lastName,\n          imageRef: imageRef,\n          newUser: newUser,\n          createdById: createdById,\n          usrType: usrType[0],\n          termNcondition: termNcondition,\n          bbaCondition: bbaCondition,\n          provider: (userResp.provider) ? userResp.provider : [],\n          dischargePlanner: (userResp.dischargeplanner) ? userResp.dischargeplanner : []\n        };\n        this.props.addUSerUInfo(userInfo);\n        localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n        if (usrType[0] == ADMIN_USER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_a', 0)\n          this.props.history.replace(baseRoutes.dashboard.path);\n          window.location.replace(baseRoutes.dashboard.path);\n        } else if (usrType[0] == DP_USER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_dp', 0)\n          this.props.history.replace(dpBaseRoutes.dashboard.path, \"/\");\n          window.location.replace(dpBaseRoutes.dashboard.path);\n        } else if (usrType[0] == PROVIDER_USER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_pu', 0)\n          this.props.history.replace(providerUserBaseRoutes.dashboard.path);\n          window.location.replace(providerUserBaseRoutes.dashboard.path);\n        } else if (usrType[0] == PROVIDER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_p', 0)\n          this.props.history.replace(providerBaseRoutes.dashboard.path);\n          window.location.replace(providerBaseRoutes.dashboard.path);\n        } else {\n          showNotification = {\n            title: \"Login\",\n            message: \"Login Access Denied\",\n            type: \"dander\"\n          };\n        }\n        this.props.reduxLoad(true);\n        this.state.spinner.setAttribute('hidden', 'true');\n        userService.showNotification(showNotification)\n        this.setState({ loading: false });\n      } else {\n        showNotification = {\n          title: \"Login\",\n          message: \"Login Access Denied\",\n          type: \"dander\"\n        };\n        this.state.spinner.setAttribute('hidden', 'true');\n        userService.showNotification(showNotification);\n        this.setState({ loading: false });\n      }\n      showNotification = {\n        title: \"Login\",\n        message: \"Login Access Denied\",\n        type: \"dander\"\n      };\n      this.state.spinner.setAttribute('hidden', 'true');\n      userService.showNotification(showNotification)\n    }\n    // this.props.addUSerUInfo(users);\n  }\n  async sendMailApi(event) {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const data = {\n      mail: this.state.resetEmail,\n    };\n    let showNotification = {};\n    try {\n      const response = await fetch(this.state.apiPathForgot + \"?mail=\" + encodeURIComponent(this.state.resetEmail), {\n        method: \"GET\",\n        headers: clientTokenHeader(),\n        // body: JSON.stringify(data),\n        // data: JSON.stringify(data)\n      })\n        .then(response => {\n          if (response.status === 400) {\n            showNotification = {\n              title: enMsg.forgotPasswordTitleFail,\n              message: enMsg.forgotPasswordMsgFail,\n              type: \"danger\"\n            };\n          } else if (response.ok) {\n            showNotification = {\n              title: enMsg.forgotPasswordTitle,\n              message: enMsg.forgotPasswordMsg,\n              type: \"success\"\n            };\n            this.setState({\n              forgotModal: false,\n              resendModal: true,\n            });\n          } else {\n            showNotification = {\n              title: enMsg.forgotPasswordTitleFail,\n              message: enMsg.forgotPasswordMsgFail,\n              type: \"danger\"\n            };\n            let error = new Error(response.statusText);\n          }\n          // return response.json();\n          return response.text();\n        })\n        .then(data => {\n          return true;\n        })\n        .catch(error => {\n          showNotification = {\n            title: enMsg.forgotPasswordTitleFail,\n            message: enMsg.forgotPasswordMsgFail,\n            type: \"danger\"\n          };\n\n          return response;\n        });\n\n    } catch (error) {\n      showNotification = {\n        title: enMsg.forgotPasswordTitleFail,\n        message: enMsg.forgotPasswordMsgFail,\n        type: \"danger\"\n      };\n    }\n    if (\n      showNotification !== undefined &&\n      showNotification.title !== undefined &&\n      showNotification.message !== undefined &&\n      showNotification.type !== undefined\n    ) {\n      this.notificationID = store.removeNotification(this.notificationID);\n      if (this.notificationID == undefined) {\n        let notifiaciton = {\n          title: showNotification.title,\n          message: showNotification.message,\n          type: showNotification.type\n        };\n        notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n        this.notificationID = store.addNotification(notifiaciton);\n      }\n      userService.showNotification(showNotification)\n    }\n\n    this._isMounted && this.setState({ loading: false });\n  }\n  checkRememberMe = e => {\n    let checkBoxVal = (this.state.isRemember) ? false : true;\n    this.setState({ isRemember: checkBoxVal });\n  }\n  closeModal = e => {\n    this.setState({\n      forgotModal: false,\n      resendModal: false,\n    });\n  }\n  backModal = e => {\n    this.setState({\n      forgotModal: true,\n      resendModal: false,\n    });\n  }\n  sendMail(e) {\n    e.preventDefault();\n    this.sendMailApi(e);\n  }\n  resendMail(e) {\n    e.preventDefault();\n    this.sendMailApi(e);\n  }\n  openForgotModal = e => {\n    this.setState({\n      forgotModal: true\n    });\n  }\n  changePasswordType = e => {\n    let passwordType = (this.state.passwordType == \"password\") ? \"text\" : \"password\";\n    this.setState({\n      passwordType: passwordType\n    });\n  }\n  render() {\n    return (\n      <div className=\"login-outer-cover\">\n        <ReactNotifications\n          onRef={ref => (this.n = ref)} // Required\n          title=\"ASG\" // Required\n          body=\"Welcome as ASG application\"\n          icon=\"icon.png\"\n          tag=\"welcome\"\n          timeout=\"1000\"\n          onClick={event => this.handleClick(event)}\n        />\n        <div className=\"login-cover gray-bg-color\">\n          <Dialog\n            aria-labelledby=\"customized-dialog-title\"\n            open={this.state.forgotModal}\n            {...this.state.other}\n            TransitionComponent={Transition}\n            maxWidth={'lg'}\n            keepMounted\n            className={\"change-pass-dialog profile-content addBlockPopup\"}\n          >\n            <DialogTitle id=\"customized-dialog-title\">\n              <div className=\"green-header warning-header\" style={{ top: \"0\" }}>Forgot Your Password?</div>\n            </DialogTitle>\n            <DialogContent className=\"addBlockContent\">\n              <p className=\"addBlockDesc\">Don't worry Resetting your password is easy.<br></br> Just tell us the email ID you registered with MAXMRJ.</p>\n              <form onSubmit={this.sendMail} noValidate>\n                <FormGroup style={{ width: \"100%\" }}>\n                  <TextField\n                    style={{ width: \"100%\" }}\n                    label=\"User ID/Email Address *\"\n                    type=\"email\"\n                    name=\"resetEmail\"\n                    data-validators=\"isRequired,isAlpha\"\n                    onChange={event => this.handleUserInputReset(event)}\n                    value={this.state.resetEmail}\n                  />\n                  <FormErrors\n                    show={!this.state.resetEmailValid}\n                    formErrors={this.state.resetFormErrors}\n                    fieldName=\"email\"\n                  />\n                </FormGroup>\n                <div className=\"form-button-cover d-flex justify-space-evenly\">\n                  <Button\n                    color=\"primary\"\n                    className={this.state.loading ? \"btn1 buttonSuccess\" : \"btn1\"}\n                    type=\"submit\"\n                    disabled={this.state.loading || !this.validateFormReset()}\n                  >\n                    {this.state.loading && (\n                      <CircularProgress\n                        size={24}\n                        className=\"buttonProgress\"\n                      />\n                    )}\n                    Send\n                  </Button>\n                  <Button\n                    //disabled={!this.validateForm()}\n                    onClick={this.closeModal}\n                    type=\"button\"\n                    className=\"btn2\"\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            aria-labelledby=\"customized-dialog-title\"\n            open={this.state.resendModal}\n            {...this.state.other}\n            TransitionComponent={Transition}\n            maxWidth={'md'}\n            keepMounted\n            className={\"change-pass-dialog profile-content addBlockPopup\"}\n          >\n            <DialogTitle id=\"customized-dialog-title\">\n              <div className=\"green-header warning-header\" style={{ top: \"0\" }}>Set Your Passsword?</div>\n            </DialogTitle>\n            <DialogContent className=\"addBlockContent\">\n              <p className=\"addBlockDesc\">We have sent a password reset mail to <b>{this.state.resetEmail}</b><br></br> Please click on the reset password link to set a new password.</p>\n              <br></br>\n              <p>Didn't Receive your email yet?</p>\n              <p>Please check your spam folder or Resend the Email.</p>\n              <div className=\"form-button-cover d-flex justify-space-evenly\">\n                <Button\n                  className={this.state.loading ? \"buttonSuccess btn1\" : \"btn1\"}\n                  type=\"button\"\n                  onClick={this.resendMail}\n                >\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                    />\n                  )}\n                  Re-Send\n                </Button>\n                <Button\n                  onClick={this.backModal}\n                  type=\"button\"\n                  className=\"btn3\"\n                >\n                  Back\n                </Button>\n                <Button\n                  onClick={this.closeModal}\n                  type=\"button\"\n                  className=\"btn2\"\n                >\n                  Close\n                </Button>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <div className=\"logo-content loginLogoMain\">\n            <div className=\"loginLogoInner\">\n              <img src={logo} alt=\"logo\" />\n            </div>\n          </div>\n          <div className=\"login-inner-cover\">\n            <div className=\"login-content\">\n              <div className=\"Login\">\n                <form onSubmit={this.handleSubmit} noValidate>\n                  <FormGroup>\n                    {/* <InputLabel>Email Address</InputLabel> */}\n                    <TextField\n                      label=\"User ID/Email Address *\"\n                      type=\"email\"\n                      name=\"email\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.email}\n                    />\n                    <FormErrors\n                      show={!this.state.emailValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"email\"\n                    />\n                  </FormGroup>\n\n                  <FormGroup className=\"possword-input\">\n                    <TextField\n                      label=\"Password *\"\n                      type={this.state.passwordType}\n                      name=\"password\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.password}\n                      inputProps={{ maxLength: MAX_PASSWORD_LENGTH }}\n                    />\n                    <FormErrors\n                      show={!this.state.passwordValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"password\"\n                    />\n\n                  </FormGroup>\n                  <div className=\"action-btns d-flex justify-content-between\">\n                    <div className=\"loginPageLink forgot-link\">\n                      <Link\n                        to=\"#\"\n                        onClick={this.openForgotModal}\n                      >\n                        Forgot Password?\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"action-btns\">\n                    <Button\n                      color=\"primary\"\n                      className={this.state.loading ? \"buttonSuccess btn1\" : \"btn1\"}\n                      disabled={this.state.loading || !this.validateForm()}\n                      type=\"submit\"\n                    >\n                      Login\n                      {this.state.loading && (\n                        <CircularProgress\n                          size={24}\n                          className=\"buttonProgress\"\n                        />\n                      )}\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport const Login = connect(\n  mapStateToProps, mapDispatchToProps\n)(LoginClass);\nexport default Login;"]},"metadata":{},"sourceType":"module"}