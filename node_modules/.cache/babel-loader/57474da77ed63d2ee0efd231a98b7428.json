{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/components/Login/Login.jsx\";\nimport React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField, Checkbox, FormControlLabel, Slide } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport \"assets/css/login.css\";\nimport logo from \"assets/img/front-logo.png\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { connect } from \"react-redux\";\nimport { addUSerUInfo as _addUSerUInfo, reduxLoad as _reduxLoad } from \"../../js/actions/index\";\nimport { DATA_LOADING } from \"__helpers/constants\";\nimport { USER_INFO } from \"__helpers/constants\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUSerUInfo: function addUSerUInfo(addUSerUInfoVal) {\n      return dispatch(_addUSerUInfo(addUSerUInfoVal));\n    },\n    reduxLoad: function reduxLoad(reduxLoadVal) {\n      return dispatch(_reduxLoad(reduxLoadVal));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    reduxLoadFlag: state.reduxLoadFlag\n  };\n};\n\nvar LoginClass = /*#__PURE__*/function (_Component) {\n  _inherits(LoginClass, _Component);\n\n  var _super = _createSuper(LoginClass);\n\n  function LoginClass(props) {\n    var _this;\n\n    _classCallCheck(this, LoginClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.componentDidMount = function () {\n      _this._isMounted = true;\n\n      _this.eraseCookie('_max_mrj');\n\n      var spinner = document.getElementById('loadingSpinner');\n\n      if (spinner && !spinner.hasAttribute('hidden')) {\n        spinner.setAttribute('hidden', 'true');\n      }\n\n      _this.showNotifications();\n\n      var currentTimeStamp = new Date().getTime();\n      var timeFlag = currentTimeStamp - _this.state.tokenTimeStamp < CLIENT_TOKEN_LIFETIME;\n\n      if (_this.state.accessToken && _this.state.timeFlag) {}\n    };\n\n    _this.handleCloseDialog = function (e) {\n      window.location.reload();\n    };\n\n    _this.checkRememberMe = function (e) {\n      var checkBoxVal = _this.state.isRemember ? false : true;\n\n      _this.setState({\n        isRemember: checkBoxVal\n      });\n    };\n\n    _this.changePasswordType = function (e) {\n      var passwordType = _this.state.passwordType == \"password\" ? \"text\" : \"password\";\n\n      _this.setState({\n        passwordType: passwordType\n      });\n    };\n\n    var userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    var tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n\n    var _currentTimeStamp = new Date().getTime();\n\n    var timeFlag = false;\n\n    if (!userInfo || !tokenTimeStamp) {\n      userService.logout();\n    }\n\n    userService.logout();\n    _this._isMounted = false;\n\n    var _spinner = document.getElementById('loadingSpinner');\n\n    _this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      resetEmail: \"\",\n      formErrors: {\n        username: \"\",\n        password: \"\"\n      },\n      emailValid: false,\n      passwordValid: false,\n      resetFormErrors: {\n        email: \"\"\n      },\n      resetEmailValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      apiPathForgot: apiPath.forgotPassword,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: userInfo && userInfo.accessToken ? userInfo.accessToken : [],\n      tokenTimeStamp: tokenTimeStamp ? tokenTimeStamp : _currentTimeStamp,\n      timeFlag: timeFlag,\n      isRemember: false,\n      forgotModal: false,\n      resendModal: false,\n      passwordType: \"password\",\n      city: '',\n      query: '',\n      reduxLoadFlag: false,\n      spinner: _spinner,\n      profileLoading: false\n    };\n    _this.clientAuthToken = null;\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.sendMailApi = _this.sendMailApi.bind(_assertThisInitialized(_this));\n    _this.handleCloseDialog = _this.handleCloseDialog.bind(_assertThisInitialized(_this));\n    _this.showNotifications = _this.showNotifications.bind(_assertThisInitialized(_this));\n    _this.checkRememberMe = _this.checkRememberMe.bind(_assertThisInitialized(_this));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_this));\n    _this.backModal = _this.backModal.bind(_assertThisInitialized(_this));\n    _this.openForgotModal = _this.openForgotModal.bind(_assertThisInitialized(_this));\n    _this.sendMail = _this.sendMail.bind(_assertThisInitialized(_this));\n    _this.resendMail = _this.resendMail.bind(_assertThisInitialized(_this));\n    _this.getProfileData = _this.getProfileData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginClass, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case \"email\":\n          emailValid = value.match(EMAIL_REGEX);\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidUser;\n          emailValid = value.trim().length > 0 ? true : false;\n          fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidUser;\n          break;\n\n        case \"password\":\n          var error = \"\";\n          passwordValid = true;\n\n          if (!value.trim().length) {\n            passwordValid = false;\n            error = enMsg.passwordRequired;\n          } else if (value.length < 1) {\n            passwordValid = false;\n            error = \"Password too short\";\n          }\n\n          fieldValidationErrors.password = error;\n          break;\n\n        default:\n          emailValid = true;\n          passwordValid = true;\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.emailValid && this.state.passwordValid;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        username: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this2 = this;\n\n        var data, showNotification, response, notifiaciton;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.props.reduxLoad(false);\n                this.setState({\n                  loading: true\n                });\n                event.preventDefault();\n                data = {\n                  username: this.state.email,\n                  // username: 'admin',\n                  password: this.state.password,\n                  // password: 'admin',\n                  mail: 'fronted@mailinator.com' // rememberMe: this.state.isRemember\n\n                };\n                showNotification = {};\n                _context.prev = 5;\n                _context.next = 8;\n                return fetch(this.state.apiPath, {\n                  method: \"POST\",\n                  hheaders: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  headers: clientTokenHeader(),\n                  body: JSON.stringify(data),\n                  data: JSON.stringify(data)\n                }).then(function (response) {\n                  if (response.status === 400) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                  } else if (response.status === 401) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: \"Login Access Denied.\",\n                      type: \"danger\"\n                    };\n                  } else if (response.ok) {} else {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: enMsg.inValidCredentials,\n                      type: \"danger\"\n                    };\n                    var error = new Error(response.statusText);\n                  }\n\n                  return response.json(); // return response.text();\n                }).then(function (data) {\n                  if (data.status == 401) {\n                    showNotification = {\n                      title: enMsg.loginFailedTitle,\n                      message: data.detail,\n                      type: \"danger\"\n                    };\n                  }\n\n                  var accessToken = data.access_token;\n                  var jti = data.jti;\n                  var refreshToken = data.refresh_token;\n                  var tokenType = data.token_type;\n\n                  if (accessToken !== undefined) {\n                    var userRole = \"other\";\n\n                    if (_this2.state.email == \"admin\" || _this2.state.email == \"maxmrj.admin@yopmail.com\" || _this2.state.email == \"maxadmin\" || _this2.state.email == \"maxadmin@yopmail.com\") {\n                      userRole = \"admin\";\n                    }\n\n                    var user = {\n                      jti: jti,\n                      // accessToken: tokenType+\";\"+accessToken,\n                      accessToken: accessToken,\n                      refreshToken: refreshToken,\n                      tokenType: tokenType,\n                      userRole: userRole\n                    };\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n\n                    _this2.getProfileData(user);\n\n                    return;\n                  }\n\n                  return true;\n                })[\"catch\"](function (error) {\n                  showNotification = {\n                    title: enMsg.loginFailedTitle,\n                    message: enMsg.inValidCredentials,\n                    type: \"danger\"\n                  };\n                  return response;\n                });\n\n              case 8:\n                response = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n                showNotification = {\n                  title: enMsg.loginFailedTitle,\n                  message: enMsg.inValidCredentials,\n                  type: \"danger\"\n                };\n\n              case 14:\n                if (showNotification !== undefined && showNotification.title !== undefined && showNotification.message !== undefined && showNotification.type !== undefined) {\n                  this.notificationID = store.removeNotification(this.notificationID);\n\n                  if (this.notificationID == undefined) {\n                    notifiaciton = {\n                      title: showNotification.title,\n                      message: showNotification.message,\n                      type: showNotification.type\n                    };\n                    notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n                    this.notificationID = store.addNotification(notifiaciton);\n                  }\n\n                  userService.showNotification(showNotification);\n                }\n\n                this._isMounted && this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 11]]);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"getProfileData\",\n    value: function () {\n      var _getProfileData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userToken) {\n        var showNotification, userResp, firstName, lastName, imageRef, createdById, newUser, usrType, bbaCondition, termNcondition, userInfo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                showNotification = {};\n\n                if (!userToken) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                this.setState({\n                  loading: true\n                });\n                this.setState({\n                  reduxLoadFlag: false\n                });\n                _context2.next = 6;\n                return userService.fetchProfile();\n\n              case 6:\n                userResp = _context2.sent;\n\n                if (userResp && userResp.firstName) {\n                  firstName = userResp.firstName;\n                  lastName = userResp.lastName;\n                  imageRef = userResp.imageUrl;\n                  createdById = userResp.id;\n                  newUser = userResp.newUser;\n                  usrType = userResp.authorities;\n                  bbaCondition = userResp.bbaCondition;\n                  termNcondition = userResp.termNcondition;\n                  userInfo = {\n                    firstName: firstName,\n                    lastName: lastName,\n                    imageRef: imageRef,\n                    newUser: newUser,\n                    createdById: createdById,\n                    usrType: usrType[0],\n                    termNcondition: termNcondition,\n                    bbaCondition: bbaCondition,\n                    provider: userResp.provider ? userResp.provider : [],\n                    dischargePlanner: userResp.dischargeplanner ? userResp.dischargeplanner : []\n                  };\n                  this.props.addUSerUInfo(userInfo);\n                  localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n\n                  if (usrType[0] == ADMIN_USER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_a', 0);\n                    this.props.history.replace(baseRoutes.dashboard.path);\n                    window.location.replace(baseRoutes.dashboard.path);\n                  } else if (usrType[0] == DP_USER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_dp', 0);\n                    this.props.history.replace(dpBaseRoutes.dashboard.path, \"/\");\n                    window.location.replace(dpBaseRoutes.dashboard.path);\n                  } else if (usrType[0] == PROVIDER_USER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_pu', 0);\n                    this.props.history.replace(providerUserBaseRoutes.dashboard.path);\n                    window.location.replace(providerUserBaseRoutes.dashboard.path);\n                  } else if (usrType[0] == PROVIDER) {\n                    this.createCookie('_max_mrj', '_login_max_mrj_p', 0);\n                    this.props.history.replace(providerBaseRoutes.dashboard.path);\n                    window.location.replace(providerBaseRoutes.dashboard.path);\n                  } else {\n                    showNotification = {\n                      title: \"Login\",\n                      message: \"Login Access Denied\",\n                      type: \"dander\"\n                    };\n                  }\n\n                  this.props.reduxLoad(true);\n                  this.state.spinner.setAttribute('hidden', 'true');\n                  userService.showNotification(showNotification);\n                  this.setState({\n                    loading: false\n                  });\n                } else {\n                  showNotification = {\n                    title: \"Login\",\n                    message: \"Login Access Denied\",\n                    type: \"dander\"\n                  };\n                  this.state.spinner.setAttribute('hidden', 'true');\n                  userService.showNotification(showNotification);\n                  this.setState({\n                    loading: false\n                  });\n                }\n\n                showNotification = {\n                  title: \"Login\",\n                  message: \"Login Access Denied\",\n                  type: \"dander\"\n                };\n                this.state.spinner.setAttribute('hidden', 'true');\n                userService.showNotification(showNotification);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getProfileData(_x2) {\n        return _getProfileData.apply(this, arguments);\n      }\n\n      return getProfileData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-outer-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-cover gray-bg-color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-content loginLogoMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginLogoInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-inner-cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"User ID/Email Address *\",\n        type: \"email\",\n        name: \"email\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this3.handleUserInput(event);\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.emailValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"possword-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Password *\",\n        type: this.state.passwordType,\n        name: \"password\",\n        \"data-validators\": \"isRequired,isAlpha\",\n        onChange: function onChange(event) {\n          return _this3.handleUserInput(event);\n        },\n        value: this.state.password,\n        inputProps: {\n          maxLength: MAX_PASSWORD_LENGTH\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormErrors, {\n        show: !this.state.passwordValid,\n        formErrors: this.state.formErrors,\n        fieldName: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginPageLink forgot-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        onClick: this.openForgotModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 23\n        }\n      }, \"Forgot Password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        className: this.state.loading ? \"buttonSuccess btn1\" : \"btn1\",\n        disabled: this.state.loading || !this.validateForm(),\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }\n      }, \"Login\", this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      })))))))));\n    }\n  }]);\n\n  return LoginClass;\n}(Component);\n\nexport var Login = connect(mapStateToProps, mapDispatchToProps)(LoginClass);\nexport default Login;","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/components/Login/Login.jsx"],"names":["React","Component","useReducer","Button","FormGroup","TextField","Checkbox","FormControlLabel","Slide","CircularProgress","Link","logo","basePath","baseRoutes","FormErrors","fetch","store","userService","enMsg","clientTokenHeader","connect","addUSerUInfo","reduxLoad","DATA_LOADING","USER_INFO","mapDispatchToProps","dispatch","addUSerUInfoVal","reduxLoadVal","mapStateToProps","state","userInfo","reduxLoadFlag","LoginClass","props","handleUserInput","e","name","target","value","setState","validateField","componentDidMount","_isMounted","eraseCookie","spinner","document","getElementById","hasAttribute","setAttribute","showNotifications","currentTimeStamp","Date","getTime","timeFlag","tokenTimeStamp","CLIENT_TOKEN_LIFETIME","accessToken","handleCloseDialog","window","location","reload","checkRememberMe","checkBoxVal","isRemember","changePasswordType","passwordType","JSON","parse","localStorage","getItem","logout","email","username","password","grantType","scope","resetEmail","formErrors","emailValid","passwordValid","resetFormErrors","resetEmailValid","formValid","apiPath","login","apiPathForgot","forgotPassword","loading","showNotification","open","other","undefined","forgotModal","resendModal","city","query","profileLoading","clientAuthToken","handleChange","bind","handleSubmit","sendMailApi","closeModal","backModal","openForgotModal","sendMail","resendMail","getProfileData","fieldName","fieldValidationErrors","match","EMAIL_REGEX","inValidUser","trim","length","error","passwordRequired","validateForm","event","preventDefault","data","mail","method","hheaders","headers","body","stringify","then","response","status","title","loginFailedTitle","message","inValidCredentials","type","ok","Error","statusText","json","detail","access_token","jti","refreshToken","refresh_token","tokenType","token_type","userRole","user","setItem","notificationID","removeNotification","notifiaciton","Object","assign","NotificationOptions","addNotification","userToken","fetchProfile","userResp","firstName","lastName","imageRef","imageUrl","createdById","id","newUser","usrType","authorities","bbaCondition","termNcondition","provider","dischargePlanner","dischargeplanner","ADMIN_USER","createCookie","history","replace","dashboard","path","DP_USER","dpBaseRoutes","PROVIDER_USER","providerUserBaseRoutes","PROVIDER","providerBaseRoutes","maxLength","MAX_PASSWORD_LENGTH","Login"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from \"react\";\nimport { Button, FormGroup, TextField, Checkbox, FormControlLabel, Slide } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport \"assets/css/login.css\";\nimport logo from \"assets/img/front-logo.png\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport { FormErrors } from \"./FormErrors\";\nimport fetch from \"isomorphic-fetch\";\nimport { store } from \"react-notifications-component\";\nimport { userService } from \"_services/user.service\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { clientTokenHeader } from \"__helpers/auth-header\";\nimport { connect } from \"react-redux\";\nimport {\n  addUSerUInfo,\n  reduxLoad,\n} from \"../../js/actions/index\";\nimport { DATA_LOADING } from \"__helpers/constants\";\nimport { USER_INFO } from \"__helpers/constants\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUSerUInfo: addUSerUInfoVal => dispatch(addUSerUInfo(addUSerUInfoVal)),\n    reduxLoad: reduxLoadVal => dispatch(reduxLoad(reduxLoadVal)),\n  };\n}\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.userInfo,\n    reduxLoadFlag: state.reduxLoadFlag,\n  };\n};\nclass LoginClass extends Component {\n  constructor(props) {\n    super(props);\n\n    let userInfo = JSON.parse(localStorage.getItem(\"user\"));\n    let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    let currentTimeStamp = new Date().getTime();\n    let timeFlag = false;\n    if (!userInfo || !tokenTimeStamp) {\n      userService.logout();\n    }\n    userService.logout();\n    this._isMounted = false;\n    let spinner = document.getElementById('loadingSpinner');\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      grantType: \"\",\n      scope: \"\",\n      resetEmail: \"\",\n      formErrors: { username: \"\", password: \"\" },\n      emailValid: false,\n      passwordValid: false,\n      resetFormErrors: { email: \"\" },\n      resetEmailValid: false,\n      formValid: false,\n      apiPath: apiPath.login,\n      apiPathForgot: apiPath.forgotPassword,\n      loading: false,\n      showNotification: {},\n      open: true,\n      other: undefined,\n      accessToken: (userInfo && userInfo.accessToken) ? userInfo.accessToken : [],\n      tokenTimeStamp: (tokenTimeStamp) ? tokenTimeStamp : currentTimeStamp,\n      timeFlag: timeFlag,\n      isRemember: false,\n      forgotModal: false,\n      resendModal: false,\n      passwordType: \"password\",\n      city: '',\n      query: '',\n      reduxLoadFlag: false,\n      spinner: spinner,\n      profileLoading: false,\n    };\n    this.clientAuthToken = null;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendMailApi = this.sendMailApi.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.showNotifications = this.showNotifications.bind(this);\n    this.checkRememberMe = this.checkRememberMe.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.backModal = this.backModal.bind(this);\n    this.openForgotModal = this.openForgotModal.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.resendMail = this.resendMail.bind(this);\n    this.getProfileData = this.getProfileData.bind(this);\n  }\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(EMAIL_REGEX);\n        fieldValidationErrors.email = emailValid ? \"\" : enMsg.inValidUser;\n\n        emailValid = value.trim().length > 0 ? true : false;\n        fieldValidationErrors.email = emailValid\n          ? \"\"\n          : enMsg.inValidUser;\n        break;\n      case \"password\":\n        let error = \"\";\n        passwordValid = true;\n        if (!value.trim().length) {\n          passwordValid = false;\n          error = enMsg.passwordRequired;\n        } else if (value.length < 1) {\n          passwordValid = false;\n          error = \"Password too short\";\n        }\n        fieldValidationErrors.password = error;\n        break;\n      default:\n        emailValid = true;\n        passwordValid = true;\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      },\n      this.validateForm\n    );\n  }\n  validateForm() {\n    return this.state.emailValid && this.state.passwordValid;\n  }\n  componentDidMount = () => {\n    this._isMounted = true;\n    this.eraseCookie('_max_mrj')\n    const spinner = document.getElementById('loadingSpinner');\n    if (spinner && !spinner.hasAttribute('hidden')) {\n      spinner.setAttribute('hidden', 'true');\n    }\n    this.showNotifications();\n    let currentTimeStamp = new Date().getTime();\n    let timeFlag = (currentTimeStamp - this.state.tokenTimeStamp) < CLIENT_TOKEN_LIFETIME;\n    if (this.state.accessToken && this.state.timeFlag) {\n\n    }\n\n  };\n  handleChange(event) {\n    this.setState({ username: event.target.value });\n  }\n  handleCloseDialog = e => {\n    window.location.reload();\n  };\n  async handleSubmit(event) {\n    this.props.reduxLoad(false);\n    this.setState({ loading: true });\n    event.preventDefault();\n    const data = {\n      username: this.state.email,\n      // username: 'admin',\n      password: this.state.password,\n      // password: 'admin',\n      mail: 'fronted@mailinator.com',\n      // rememberMe: this.state.isRemember\n    };\n\n    let showNotification = {};\n\n    try {\n      const response = await fetch(this.state.apiPath, {\n        method: \"POST\",\n        hheaders: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        headers: clientTokenHeader(),\n        body: JSON.stringify(data),\n        data: JSON.stringify(data)\n      })\n        .then(response => {\n          if (response.status === 400) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n          } else if (response.status === 401) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: \"Login Access Denied.\",\n              type: \"danger\"\n            };\n          } else if (response.ok) {\n          } else {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: enMsg.inValidCredentials,\n              type: \"danger\"\n            };\n            let error = new Error(response.statusText);\n          }\n          return response.json();\n          // return response.text();\n        })\n        .then(data => {\n          if (data.status == 401) {\n            showNotification = {\n              title: enMsg.loginFailedTitle,\n              message: data.detail,\n              type: \"danger\"\n            };\n          }\n          let accessToken = data.access_token;\n          let jti = data.jti;\n          let refreshToken = data.refresh_token;\n          let tokenType = data.token_type;\n          if (accessToken !== undefined) {\n            let userRole = \"other\"\n            if (this.state.email == \"admin\" || this.state.email == \"maxmrj.admin@yopmail.com\" || this.state.email == \"maxadmin\" || this.state.email == \"maxadmin@yopmail.com\") {\n              userRole = \"admin\"\n            }\n            let user = {\n              jti: jti,\n              // accessToken: tokenType+\";\"+accessToken,\n              accessToken: accessToken,\n              refreshToken: refreshToken,\n              tokenType: tokenType,\n              userRole: userRole,\n            };\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            this.getProfileData(user);\n            return;\n          }\n          return true;\n        })\n        .catch(error => {\n          showNotification = {\n            title: enMsg.loginFailedTitle,\n            message: enMsg.inValidCredentials,\n            type: \"danger\"\n          };\n\n          return response;\n        });\n\n    } catch (error) {\n      showNotification = {\n        title: enMsg.loginFailedTitle,\n        message: enMsg.inValidCredentials,\n        type: \"danger\"\n      };\n    }\n    if (\n      showNotification !== undefined &&\n      showNotification.title !== undefined &&\n      showNotification.message !== undefined &&\n      showNotification.type !== undefined\n    ) {\n      this.notificationID = store.removeNotification(this.notificationID);\n      if (this.notificationID == undefined) {\n        let notifiaciton = {\n          title: showNotification.title,\n          message: showNotification.message,\n          type: showNotification.type\n        };\n        notifiaciton = Object.assign(NotificationOptions, notifiaciton);\n        this.notificationID = store.addNotification(notifiaciton);\n      }\n      userService.showNotification(showNotification)\n    }\n\n    this._isMounted && this.setState({ loading: false });\n  }\n  async getProfileData(userToken) {\n    let showNotification = {};\n    if (userToken) {\n      this.setState({ loading: true });\n      this.setState({ reduxLoadFlag: false })\n      let userResp = await userService.fetchProfile();\n      if (userResp && userResp.firstName) {\n        let firstName = userResp.firstName;\n        let lastName = userResp.lastName;\n        let imageRef = userResp.imageUrl;\n        let createdById = userResp.id;\n        let newUser = userResp.newUser;\n        let usrType = userResp.authorities;\n        let bbaCondition = userResp.bbaCondition;\n        let termNcondition = userResp.termNcondition;\n        let userInfo = {\n          firstName: firstName,\n          lastName: lastName,\n          imageRef: imageRef,\n          newUser: newUser,\n          createdById: createdById,\n          usrType: usrType[0],\n          termNcondition: termNcondition,\n          bbaCondition: bbaCondition,\n          provider: (userResp.provider) ? userResp.provider : [],\n          dischargePlanner: (userResp.dischargeplanner) ? userResp.dischargeplanner : []\n        };\n        this.props.addUSerUInfo(userInfo);\n        localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n        if (usrType[0] == ADMIN_USER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_a', 0)\n          this.props.history.replace(baseRoutes.dashboard.path);\n          window.location.replace(baseRoutes.dashboard.path);\n        } else if (usrType[0] == DP_USER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_dp', 0)\n          this.props.history.replace(dpBaseRoutes.dashboard.path, \"/\");\n          window.location.replace(dpBaseRoutes.dashboard.path);\n        } else if (usrType[0] == PROVIDER_USER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_pu', 0)\n          this.props.history.replace(providerUserBaseRoutes.dashboard.path);\n          window.location.replace(providerUserBaseRoutes.dashboard.path);\n        } else if (usrType[0] == PROVIDER) {\n          this.createCookie('_max_mrj', '_login_max_mrj_p', 0)\n          this.props.history.replace(providerBaseRoutes.dashboard.path);\n          window.location.replace(providerBaseRoutes.dashboard.path);\n        } else {\n          showNotification = {\n            title: \"Login\",\n            message: \"Login Access Denied\",\n            type: \"dander\"\n          };\n        }\n        this.props.reduxLoad(true);\n        this.state.spinner.setAttribute('hidden', 'true');\n        userService.showNotification(showNotification)\n        this.setState({ loading: false });\n      } else {\n        showNotification = {\n          title: \"Login\",\n          message: \"Login Access Denied\",\n          type: \"dander\"\n        };\n        this.state.spinner.setAttribute('hidden', 'true');\n        userService.showNotification(showNotification);\n        this.setState({ loading: false });\n      }\n      showNotification = {\n        title: \"Login\",\n        message: \"Login Access Denied\",\n        type: \"dander\"\n      };\n      this.state.spinner.setAttribute('hidden', 'true');\n      userService.showNotification(showNotification)\n    }\n    // this.props.addUSerUInfo(users);\n  }\n  checkRememberMe = e => {\n    let checkBoxVal = (this.state.isRemember) ? false : true;\n    this.setState({ isRemember: checkBoxVal });\n  }\n  changePasswordType = e => {\n    let passwordType = (this.state.passwordType == \"password\") ? \"text\" : \"password\";\n    this.setState({\n      passwordType: passwordType\n    });\n  }\n  render() {\n    return (\n      <div className=\"login-outer-cover\">\n        <div className=\"login-cover gray-bg-color\">\n          <div className=\"logo-content loginLogoMain\">\n            <div className=\"loginLogoInner\">\n              <img src={logo} alt=\"logo\" />\n            </div>\n          </div>\n          <div className=\"login-inner-cover\">\n            <div className=\"login-content\">\n              <div className=\"Login\">\n                <form onSubmit={this.handleSubmit} noValidate>\n                  <FormGroup>\n                    {/* <InputLabel>Email Address</InputLabel> */}\n                    <TextField\n                      label=\"User ID/Email Address *\"\n                      type=\"email\"\n                      name=\"email\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.email}\n                    />\n                    <FormErrors\n                      show={!this.state.emailValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"email\"\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"possword-input\">\n                    <TextField\n                      label=\"Password *\"\n                      type={this.state.passwordType}\n                      name=\"password\"\n                      data-validators=\"isRequired,isAlpha\"\n                      onChange={event => this.handleUserInput(event)}\n                      value={this.state.password}\n                      inputProps={{ maxLength: MAX_PASSWORD_LENGTH }}\n                    />\n                    <FormErrors\n                      show={!this.state.passwordValid}\n                      formErrors={this.state.formErrors}\n                      fieldName=\"password\"\n                    />\n                  </FormGroup>\n                  <div className=\"action-btns d-flex justify-content-between\">\n                    <div className=\"loginPageLink forgot-link\">\n                      <Link\n                        to=\"#\"\n                        onClick={this.openForgotModal}\n                      >\n                        Forgot Password?\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"action-btns\">\n                    <Button\n                      color=\"primary\"\n                      className={this.state.loading ? \"buttonSuccess btn1\" : \"btn1\"}\n                      disabled={this.state.loading || !this.validateForm()}\n                      type=\"submit\"\n                    >\n                      Login\n                      {this.state.loading && (\n                        <CircularProgress\n                          size={24}\n                          className=\"buttonProgress\"\n                        />\n                      )}\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport const Login = connect(\n  mapStateToProps, mapDispatchToProps\n)(LoginClass);\nexport default Login;"]},"metadata":{},"sourceType":"module"}