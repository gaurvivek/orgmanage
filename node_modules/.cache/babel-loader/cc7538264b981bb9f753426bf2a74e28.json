{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/html/reactjs/OrgManage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/reactjs/OrgManage/src/views/Records/ProjectPopup.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogActions, DialogContent, Select, DialogTitle, IconButton, TextField, MenuItem, InputLabel, Button } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uid } from \"__helpers/utils\";\nimport { empList, reduxLoad } from 'js/actions';\nimport { userService } from \"_services/user.service\";\n\nvar AddEmp = function AddEmp(props) {\n  var openProjects = props.openProjects,\n      confirmModalClose = props.confirmModalClose,\n      loading = props.loading,\n      projectId = props.projectId,\n      empId = props.empId;\n  var dispatch = useDispatch();\n  var empListArr = useSelector(function (state) {\n    return state.empList;\n  });\n  var empDetails = [];\n  var errorList = {\n    eName: \"\",\n    eAge: \"\",\n    eEmail: \"\",\n    ePhone: \"\"\n  };\n  var errorValidList = {\n    eNameValid: true,\n    eAgeValid: true,\n    eEmailValid: true,\n    ePhoneValid: true\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      eName = _useState2[0],\n      setEName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eAge = _useState4[0],\n      setEAge = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      eEmail = _useState6[0],\n      setEEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ePhone = _useState8[0],\n      setEPhone = _useState8[1];\n\n  var _useState9 = useState(\"male\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      eGender = _useState10[0],\n      setEGender = _useState10[1];\n\n  var _useState11 = useState(errorList),\n      _useState12 = _slicedToArray(_useState11, 2),\n      getError = _useState12[0],\n      setError = _useState12[1];\n\n  var _useState13 = useState(errorValidList),\n      _useState14 = _slicedToArray(_useState13, 2),\n      formValid = _useState14[0],\n      setFormValid = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loader = _useState16[0],\n      setLoader = _useState16[1];\n\n  useEffect(function () {\n    if (empId) {\n      if (empDetails && empDetails.length) {\n        setEName(empDetails[0].name);\n        setEAge(empDetails[0].age);\n        setEEmail(empDetails[0].email);\n        setEPhone(empDetails[0].phoneNo);\n        setEGender(empDetails[0].gender);\n        setFormValid({});\n      } else {\n        var showNotification = {\n          title: 'Employee Update',\n          message: 'Employee details not found',\n          type: \"danger\"\n        };\n        userService.showNotification(showNotification);\n        setTimeout(function () {\n          confirmModalClose();\n        }, 1000);\n      }\n    }\n  }, [openProjects]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var updatedEmp, _data, data, showNotification;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setLoader(true);\n              dispatch(reduxLoad(false));\n              empListArr = empListArr && empListArr.length ? empListArr : [];\n\n              if (empId) {\n                updatedEmp = empListArr.filter(function (tList) {\n                  if (tList.id == empId) {\n                    tList.name = eName;\n                    tList.email = eEmail;\n                    tList.gender = eGender;\n                    tList.age = eAge;\n                    tList.age = ePhone;\n                  }\n\n                  return tList;\n                });\n                dispatch(empList(updatedEmp));\n              } else {\n                data = (_data = {\n                  id: uid(),\n                  name: eName,\n                  email: eEmail,\n                  gender: eGender,\n                  age: eAge\n                }, _defineProperty(_data, \"age\", ePhone), _defineProperty(_data, \"createDate\", new Date()), _data);\n                empListArr.push(data);\n                dispatch(empList(empListArr));\n              }\n\n              setEName(\"\");\n              setEAge(\"\");\n              setEEmail(\"\");\n              setEPhone(\"\");\n              setEGender(\"male\");\n              setLoader(false);\n              setFormValid(errorValidList);\n              dispatch(reduxLoad(true));\n              showNotification = {\n                title: empId ? 'Update Employee' : 'Create Employee',\n                message: empId ? 'Employee updated successfully.' : 'Employee created successfully.',\n                type: \"success\"\n              };\n              userService.showNotification(showNotification);\n              setTimeout(function () {\n                confirmModalClose();\n              }, 100);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleInput = function handleInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    var getErrorList = getError;\n    var getFormValid = formValid;\n\n    switch (name) {\n      case 'eName':\n        setEName(value);\n        var eNameValid = value.trim().length > 0;\n        getErrorList.taskName = projectValid ? '' : \"Enter employee name\";\n\n        if (eNameValid) {\n          delete getFormValid.eNameValid;\n        } else {\n          getFormValid.eNameValid = true;\n        }\n\n        break;\n\n      case 'eEmail':\n        setEEmail(value);\n        var eEmailValid = value.trim().length > 0;\n        getErrorList.taskName = projectValid ? '' : \"Enter employee email\";\n\n        if (eEmailValid) {\n          delete getFormValid.eEmailValid;\n        } else {\n          getFormValid.eEmailValid = true;\n        }\n\n        break;\n\n      case 'eAge':\n        setEAge(value);\n        var eAgeValid = value.trim().length > 0;\n        getErrorList.taskName = projectValid ? '' : \"Enter employee age\";\n\n        if (eAgeValid) {\n          delete getFormValid.eAgeValid;\n        } else {\n          getFormValid.eAgeValid = true;\n        }\n\n        break;\n\n      case 'ePhone':\n        setEPhone(value);\n        var ePhoneValid = value.trim().length > 0;\n        getErrorList.taskName = projectValid ? '' : \"Enter employee phone number\";\n\n        if (ePhoneValid) {\n          delete getFormValid.ePhoneValid;\n        } else {\n          getFormValid.ePhoneValid = true;\n        }\n\n        break;\n\n      case 'taskStatus': // setTaskStatus(value);\n\n      case 'taskPriority': // setTaskPriority(value);\n\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    className: \"call-modal\",\n    maxWidth: 'lg',\n    open: openProjects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    className: \"add-modal-title\",\n    id: \"discharge-planner-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, empId ? \"Update\" : \"Create\", \" Employee\", /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: confirmModalClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"\",\n    label: \"Employee Name\",\n    className: \"full-width-input\",\n    name: \"eName\",\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    value: eName,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormErrors, {\n    show: formValid.eNameValid,\n    formErrors: getError,\n    fieldName: \"eName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"\",\n    label: \"Employee Email\",\n    className: \"full-width-input\",\n    name: \"eEmail\",\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    value: eEmail,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormErrors, {\n    show: formValid.eEmailValid,\n    formErrors: getError,\n    fieldName: \"eEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"\",\n    label: \"Employee Phone\",\n    className: \"full-width-input\",\n    name: \"ePhone\",\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    value: ePhone,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormErrors, {\n    show: formValid.ePhoneValid,\n    formErrors: getError,\n    fieldName: \"ePhone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"\",\n    label: \"Employee Age\",\n    className: \"full-width-input\",\n    name: \"eAge\",\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    value: eAge,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormErrors, {\n    show: formValid.eAgeValid,\n    formErrors: getError,\n    fieldName: \"eAge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollar_modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Employee Gender\",\n    select: true,\n    InputLabelProps: {\n      className: \"required-label\"\n    },\n    name: \"eGender\",\n    className: \"full-width-input\",\n    autoComplete: \"off\",\n    value: eGender,\n    \"data-validators\": \"isRequired,isAlpha\",\n    onChange: function onChange(e) {\n      return setEGender(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"other\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, \"Other\")))), /*#__PURE__*/React.createElement(DialogActions, {\n    className: \"modal-actions\",\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn1\",\n    disabled: Object.entries(formValid || {}).length > 0 || loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: \"buttonProgress\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }), empId ? \"Update\" : \"Create\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn2\",\n    onClick: confirmModalClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))));\n};\n\nexport default AddEmp;","map":{"version":3,"sources":["/var/www/html/reactjs/OrgManage/src/views/Records/ProjectPopup.jsx"],"names":["React","useState","useEffect","Dialog","DialogActions","DialogContent","Select","DialogTitle","IconButton","TextField","MenuItem","InputLabel","Button","CloseIcon","CircularProgress","FormErrors","useDispatch","useSelector","uid","empList","reduxLoad","userService","AddEmp","props","openProjects","confirmModalClose","loading","projectId","empId","dispatch","empListArr","state","empDetails","errorList","eName","eAge","eEmail","ePhone","errorValidList","eNameValid","eAgeValid","eEmailValid","ePhoneValid","setEName","setEAge","setEEmail","setEPhone","eGender","setEGender","getError","setError","formValid","setFormValid","loader","setLoader","length","name","age","email","phoneNo","gender","showNotification","title","message","type","setTimeout","handleSubmit","event","preventDefault","updatedEmp","filter","tList","id","data","Date","push","handleInput","e","target","value","getErrorList","getFormValid","trim","taskName","projectValid","className","Object","entries"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Select,\n    DialogTitle,\n    IconButton,\n    TextField,\n    MenuItem,\n    InputLabel,\n    Button\n} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uid } from \"__helpers/utils\";\nimport { empList, reduxLoad } from 'js/actions';\nimport { userService } from \"_services/user.service\";\n\nconst AddEmp = (props) => {\n    const { openProjects, confirmModalClose, loading, projectId, empId } = props;\n    const dispatch = useDispatch();\n    let empListArr = useSelector((state) => state.empList);\n    const empDetails = [];\n    const errorList = {\n        eName: \"\",\n        eAge: \"\",\n        eEmail: \"\",\n        ePhone: \"\",\n    }\n    const errorValidList = {\n        eNameValid: true,\n        eAgeValid: true,\n        eEmailValid: true,\n        ePhoneValid: true,\n    }\n    const [eName, setEName] = useState(\"\")\n    const [eAge, setEAge] = useState(\"\")\n    const [eEmail, setEEmail] = useState(\"\")\n    const [ePhone, setEPhone] = useState(\"\")\n    const [eGender, setEGender] = useState(\"male\")\n    const [getError, setError] = useState(errorList)\n    const [formValid, setFormValid] = useState(errorValidList)\n    const [loader, setLoader] = useState(false)\n\n    useEffect(() => {\n        if (empId) {\n            if (empDetails && empDetails.length) {\n                setEName(empDetails[0].name);\n                setEAge(empDetails[0].age);\n                setEEmail(empDetails[0].email);\n                setEPhone(empDetails[0].phoneNo);\n                setEGender(empDetails[0].gender);\n                setFormValid({})\n            } else {\n                const showNotification = {\n                    title: 'Employee Update',\n                    message: 'Employee details not found',\n                    type: \"danger\",\n                }\n                userService.showNotification(showNotification);\n                setTimeout(function () {\n                    confirmModalClose();\n                }, 1000);\n            }\n        }\n    }, [openProjects])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setLoader(true);\n        dispatch(reduxLoad(false))\n        empListArr = empListArr && empListArr.length ? empListArr : [];\n        if (empId) {\n            const updatedEmp = empListArr.filter((tList) => {\n                if (tList.id == empId) {\n                    tList.name = eName;\n                    tList.email = eEmail;\n                    tList.gender = eGender;\n                    tList.age = eAge;\n                    tList.age = ePhone;\n                }\n                return tList;\n            })\n            dispatch(empList(updatedEmp));\n        } else {\n            const data = {\n                id: uid(),\n                name: eName,\n                email: eEmail,\n                gender: eGender,\n                age: eAge,\n                age: ePhone,\n                createDate: new Date(),\n            }\n            empListArr.push(data)\n            dispatch(empList(empListArr));\n        }\n        setEName(\"\")\n        setEAge(\"\")\n        setEEmail(\"\")\n        setEPhone(\"\")\n        setEGender(\"male\")\n        setLoader(false);\n        setFormValid(errorValidList)\n        dispatch(reduxLoad(true))\n        const showNotification = {\n            title: empId ? 'Update Employee' : 'Create Employee',\n            message: empId ? 'Employee updated successfully.' : 'Employee created successfully.',\n            type: \"success\",\n        }\n        userService.showNotification(showNotification);\n        setTimeout(function () {\n            confirmModalClose();\n        }, 100);\n    }\n    const handleInput = (e) => {\n        const { name, value } = e.target;\n        let getErrorList = getError;\n        let getFormValid = formValid;\n        switch (name) {\n            case 'eName':\n                setEName(value);\n                let eNameValid = value.trim().length > 0;\n                getErrorList.taskName = projectValid ? '' : \"Enter employee name\";\n                if (eNameValid) {\n                    delete getFormValid.eNameValid;\n                } else {\n                    getFormValid.eNameValid = true;\n                }\n                break;\n            case 'eEmail':\n                setEEmail(value);\n                let eEmailValid = value.trim().length > 0;\n                getErrorList.taskName = projectValid ? '' : \"Enter employee email\";\n                if (eEmailValid) {\n                    delete getFormValid.eEmailValid;\n                } else {\n                    getFormValid.eEmailValid = true;\n                }\n                break;\n            case 'eAge':\n                setEAge(value);\n                let eAgeValid = value.trim().length > 0;\n                getErrorList.taskName = projectValid ? '' : \"Enter employee age\";\n                if (eAgeValid) {\n                    delete getFormValid.eAgeValid;\n                } else {\n                    getFormValid.eAgeValid = true;\n                }\n                break;\n            case 'ePhone':\n                setEPhone(value);\n                let ePhoneValid = value.trim().length > 0;\n                getErrorList.taskName = projectValid ? '' : \"Enter employee phone number\";\n                if (ePhoneValid) {\n                    delete getFormValid.ePhoneValid;\n                } else {\n                    getFormValid.ePhoneValid = true;\n                }\n                break;\n            case 'taskStatus':\n            // setTaskStatus(value);\n            case 'taskPriority':\n            // setTaskPriority(value);\n        }\n    }\n    return (\n        <Dialog\n            className=\"call-modal\"\n            maxWidth={'lg'}\n            open={openProjects}\n        >\n            <DialogTitle className=\"add-modal-title\" id=\"discharge-planner-dialog-title\">\n                {empId ? \"Update\" : \"Create\"} Employee\n                <IconButton aria-label=\"close\">\n                    <CloseIcon onClick={confirmModalClose} />\n                </IconButton>\n            </DialogTitle>\n            <form onSubmit={handleSubmit} noValidate>\n                <DialogContent>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            id=\"\"\n                            label=\"Employee Name\"\n                            className=\"full-width-input\"\n                            name=\"eName\"\n                            InputLabelProps={{ className: \"required-label\" }}\n                            value={eName}\n                            onChange={e => handleInput(e)} />\n                        <FormErrors\n                            show={formValid.eNameValid}\n                            formErrors={getError}\n                            fieldName=\"eName\"\n                        />\n                    </div>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            id=\"\"\n                            label=\"Employee Email\"\n                            className=\"full-width-input\"\n                            name=\"eEmail\"\n                            InputLabelProps={{ className: \"required-label\" }}\n                            value={eEmail}\n                            onChange={e => handleInput(e)} />\n                        <FormErrors\n                            show={formValid.eEmailValid}\n                            formErrors={getError}\n                            fieldName=\"eEmail\"\n                        />\n                    </div>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            id=\"\"\n                            label=\"Employee Phone\"\n                            className=\"full-width-input\"\n                            name=\"ePhone\"\n                            InputLabelProps={{ className: \"required-label\" }}\n                            value={ePhone}\n                            onChange={e => handleInput(e)} />\n                        <FormErrors\n                            show={formValid.ePhoneValid}\n                            formErrors={getError}\n                            fieldName=\"ePhone\"\n                        />\n                    </div>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            id=\"\"\n                            label=\"Employee Age\"\n                            className=\"full-width-input\"\n                            name=\"eAge\"\n                            InputLabelProps={{ className: \"required-label\" }}\n                            value={eAge}\n                            onChange={e => handleInput(e)} />\n                        <FormErrors\n                            show={formValid.eAgeValid}\n                            formErrors={getError}\n                            fieldName=\"eAge\"\n                        />\n                    </div>\n                    <div className=\"dollar_modal\">\n                        <TextField\n                            label=\"Employee Gender\"\n                            select\n                            InputLabelProps={{ className: \"required-label\" }}\n                            name=\"eGender\"\n                            className=\"full-width-input\"\n                            autoComplete=\"off\"\n                            value={eGender}\n                            data-validators=\"isRequired,isAlpha\"\n                            onChange={e => setEGender(e.target.value)}\n                        >\n                            <MenuItem\n                                value={\"male\"}\n                            >\n                                Male\n                            </MenuItem>\n                            <MenuItem\n                                value={\"female\"}\n                            >\n                                Female\n                            </MenuItem>\n                            <MenuItem\n                                value={\"other\"}\n                            >\n                                Other\n                            </MenuItem>\n                        </TextField>\n                    </div>\n                </DialogContent>\n                <DialogActions className=\"modal-actions\" justify=\"center\">\n                    <Button type=\"submit\" className=\"btn1\" disabled={Object.entries(formValid || {}).length > 0 || loader}>\n                        {loading && (\n                            <CircularProgress\n                                size={24}\n                                className=\"buttonProgress\"\n                            />\n                        )}\n                        {empId ? \"Update\" : \"Create\"}\n                    </Button>\n                    <Button color=\"primary\" className=\"btn2\" onClick={confirmModalClose}>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    )\n}\n\nexport default AddEmp"]},"metadata":{},"sourceType":"module"}