{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/var/www/html/reactjs/ManagerWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/var/www/html/reactjs/ManagerWork/src/views/Records/Records.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Link as MaterialLink, CircularProgress, FormGroup, FormControl, TextField } from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { PER_PAGE_OPTIONS, RECORD_PER_PAGE } from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { FormErrors } from \"components/Login/FormErrors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\";\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from \"react-router-dom\";\nimport { projectList as _projectList, reduxLoad } from 'js/actions';\nam4core.useTheme(am4themes_animated);\nvar columns = [{\n  id: \"projectName\",\n  label: \"Project Name\"\n}, {\n  id: \"projectDesc\",\n  label: \"Project Description\"\n}, {\n  id: \"projectDesc\",\n  label: \"Total Tasks\"\n}, {\n  id: \"projectDesc\",\n  label: \"Tasks List\"\n}, {\n  id: \"createDate\",\n  label: \"Created Date\"\n}, {\n  id: \"projectDesc\",\n  label: \"Actions\"\n}];\nvar ref = React.createRef();\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    projectList: function projectList(projects) {\n      return dispatch(_projectList(projects));\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    projectListArr: state.projectList,\n    taskListArr: state.taskList\n  };\n};\n\nvar RecordClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(RecordClass, _React$Component);\n\n  var _super = _createSuper(RecordClass);\n\n  function RecordClass(props) {\n    var _this;\n\n    _classCallCheck(this, RecordClass);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangePage = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, newPage) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  page: newPage\n                }); // setPage(newPage);\n\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.validateField = function (fieldName, fieldValue) {\n      var fieldValidationErrors = _this.state.formErrors;\n      var startDateValid = _this.state.startDateValid;\n      var endDateValid = _this.state.endDateValid;\n\n      switch (fieldName) {\n        case \"startDate\":\n          startDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.startDate = !startDateValid ? enMsg.startDateRequiredMsg : \"\";\n          break;\n\n        case \"endDate\":\n          endDateValid = fieldValue && fieldValue != \"\" ? true : false;\n          fieldValidationErrors.endDate = !endDateValid ? enMsg.endDateRequiredMsg : \"\";\n          break;\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        startDateValid: startDateValid,\n        endDateValid: endDateValid\n      }, _this.validateForm);\n    };\n\n    _this.GetTaskCount = function (pId, tList) {\n      var filteredTasks = tList.filter(function (list) {\n        if (list.projectId == pId) {\n          return list;\n        }\n      });\n      return filteredTasks.length;\n    };\n\n    _this.GetTaskList = function (pId, tList) {\n      var taskList = {};\n      tList.map(function (list) {\n        if (list.projectId == pId) {\n          console.log(list.taskStatus);\n\n          if (list.taskStatus == \"new\") {\n            taskList[\"new\"] = taskList[\"new\"] ? taskList[\"new\"] + 1 : 1;\n          } else if (list.taskStatus == \"progress\") {\n            taskList.progress = taskList.progress ? taskList.progress + 1 : 1;\n          } else {\n            taskList.done = taskList.done ? taskList.done + 1 : 1;\n          }\n        }\n      });\n      console.log(taskList);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }\n      }, taskList.done ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 26\n        }\n      }, \"Done: \", taskList.done) : null, taskList[\"new\"] ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }, \"New: \", taskList[\"new\"]) : null, taskList.progress ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 30\n        }\n      }, \"Progress: \", taskList.progress) : null);\n    };\n\n    _this.dateUtility = new DateFnsUtils();\n    _this._isMounted = false;\n    _this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      reduxLoadFlag: false,\n      openProjects: false,\n      projectListArr: _this.props.projectListArr ? _this.props.projectListArr : [],\n      taskList: _this.props.taskListArr ? _this.props.taskListArr : [],\n      projectId: \"\",\n      search: \"\"\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_this));\n    _this.handleChangeRowsPerPage = _this.handleChangeRowsPerPage.bind(_assertThisInitialized(_this));\n    _this.confirmModalClose = _this.confirmModalClose.bind(_assertThisInitialized(_this));\n    _this.filterProjects = _this.filterProjects.bind(_assertThisInitialized(_this));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RecordClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Projects';\n    }\n  }, {\n    key: \"handleChangeRowsPerPage\",\n    value: function handleChangeRowsPerPage(event) {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var value = e.target.value.value;\n      this.setState({\n        search: value\n      });\n    }\n  }, {\n    key: \"filterProjects\",\n    value: function filterProjects() {\n      var allProjects = this.props.projectListArr;\n      var searchRes = this.state.search;\n      console.log(searchRes, allProjects, this.state.search);\n\n      if (!searchRes) {\n        return false;\n      }\n\n      var updatedProjects = allProjects.filter(function (pList) {\n        if (pList.projectName.includes(searchRes) || pList.projectDesc.includes(searchRes)) {\n          return pList;\n        }\n      });\n      this.setState({\n        projectListArr: updatedProjects\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.startDateValid && this.state.endDateValid;\n    }\n  }, {\n    key: \"openProjects\",\n    value: function openProjects() {\n      this.setState({\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"confirmModalClose\",\n    value: function confirmModalClose() {\n      this.setState({\n        projectId: \"\",\n        openProjects: false,\n        projectListArr: this.props.projectListArr\n      });\n    }\n  }, {\n    key: \"editProject\",\n    value: function editProject(projectId) {\n      this.setState({\n        projectId: projectId,\n        openProjects: true\n      });\n    }\n  }, {\n    key: \"deleteProject\",\n    value: function deleteProject(projectId) {\n      var projectListArr = this.state.projectListArr;\n      var updatedTaskList = projectListArr.filter(function (tList) {\n        return tList.uid == projectId ? null : tList;\n      });\n      this.props.projectList(updatedTaskList);\n      this.setState({\n        projectListArr: updatedTaskList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          openProjects = _this$state.openProjects,\n          projectListArr = _this$state.projectListArr,\n          taskList = _this$state.taskList,\n          projectId = _this$state.projectId,\n          search = _this$state.search;\n      console, log(search);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"box-with-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddProject, {\n        projectId: projectId,\n        openProjects: openProjects,\n        confirmModalClose: this.confirmModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormHead white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, \"My Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.openProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }), \"Add Project\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"full-width setting_cards p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-input-box\",\n        label: \"Search\",\n        placeholder: \"Search\",\n        text: \"text\",\n        name: \"search\",\n        variant: \"filled\",\n        value: search,\n        onChange: function onChange(e) {\n          return _this2.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"client newbtn greenbtn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.filterProjects();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 24,\n        className: \"buttonProgress\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }), \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recordFormCol widthauto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: (classes.root, this.cust_table_cover),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: (classes.tableWrapper, this.cust_table),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-respopnsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        className: this.tableh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 27\n        }\n      }, columns.map(function (column) {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 31\n          }\n        }, column.label);\n      }))), /*#__PURE__*/React.createElement(TableBody, {\n        key: \"TableBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }\n      }, this.state.projectListArr.length && this.state.projectListArr.length ? this.state.projectListArr.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (row, key) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 39\n          }\n        }, row.projectName), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 39\n          }\n        }, row.projectDesc), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 39\n          }\n        }, taskList && taskList.length ? _this2.GetTaskCount(row.uid, taskList) : \"No task\"), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 39\n          }\n        }, taskList && taskList.length ? _this2.GetTaskList(row.uid, taskList) : \"No task\"), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 39\n          }\n        }, new Date(row.createDate).toDateString()), /*#__PURE__*/React.createElement(TableCell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          underline: \"none\",\n          to: {\n            pathname: basePath + baseRoutes.tasks.path,\n            state: row.uid\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 43\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 45\n          }\n        }))), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-pencil\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this2.editProject(row.uid);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 43\n          }\n        })), _this2.GetTaskCount(row.uid, taskList) == 0 ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"edit-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: \"fa fa-trash\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: \"#fff\"\n          },\n          onClick: function onClick() {\n            return _this2.deleteProject(row.uid);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 47\n          }\n        })) : null));\n      }) : /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        colspan: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"not-found-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 35\n        }\n      }, \"No projects available...\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: PER_PAGE_OPTIONS,\n        component: \"div\",\n        count: this.state.projectListArr.length && this.state.projectListArr.length ? this.state.projectListArr.length : 0,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"previous page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"next page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return RecordClass;\n}(React.Component);\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar Record = connect(mapStateToProps, mapDispatchToProps)(RecordClass); // export default Form;\n\nexport default withStyles(dashboardStyle)(Record);","map":{"version":3,"sources":["/var/www/html/reactjs/ManagerWork/src/views/Records/Records.jsx"],"names":["React","PropTypes","withStyles","GridContainer","enMsg","Button","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Link","MaterialLink","CircularProgress","FormGroup","FormControl","TextField","CardBody","dashboardStyle","userService","connect","moment","PER_PAGE_OPTIONS","RECORD_PER_PAGE","am4core","am4themes_animated","MuiPickersUtilsProvider","KeyboardDatePicker","FormErrors","DateFnsUtils","AddProject","basePath","baseRoutes","Icon","projectList","reduxLoad","useTheme","columns","id","label","ref","createRef","mapDispatchToProps","dispatch","projects","mapStateToProps","state","userInfo","timestamp","campaings","reduxLoadFlag","projectListArr","taskListArr","taskList","RecordClass","props","handleChangePage","event","newPage","setState","page","validateField","fieldName","fieldValue","fieldValidationErrors","formErrors","startDateValid","endDateValid","startDate","startDateRequiredMsg","endDate","endDateRequiredMsg","validateForm","GetTaskCount","pId","tList","filteredTasks","filter","list","projectId","length","GetTaskList","map","console","log","taskStatus","progress","done","dateUtility","_isMounted","value","loading","rowsPerPageT","rowsPerPage","timeStampVal","Date","toLocaleTimeString","openProjects","search","bind","handleChangeRowsPerPage","confirmModalClose","filterProjects","handleInput","document","title","target","e","allProjects","searchRes","updatedProjects","pList","projectName","includes","projectDesc","updatedTaskList","uid","classes","root","cust_table_cover","tableWrapper","cust_table","tableh","column","align","minWidth","slice","row","key","createDate","toDateString","pathname","tasks","path","color","editProject","deleteProject","Component","propTypes","object","isRequired","Record"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport enMsg from \"__helpers/locale/en/en\";\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Link as MaterialLink,\n  CircularProgress,\n  FormGroup,\n  FormControl, TextField\n} from \"@material-ui/core\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/views/dashboardStyle.jsx\";\nimport { userService } from \"_services/user.service\";\nimport {\n} from \"__helpers/constants\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  PER_PAGE_OPTIONS,\n  RECORD_PER_PAGE,\n} from \"__helpers/constants\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { FormErrors } from \"components/Login/FormErrors\"\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport AddProject from \"./ProjectPopup\"\nimport { basePath, baseRoutes } from \"base-routes\";\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from \"react-router-dom\";\nimport { projectList, reduxLoad } from 'js/actions';\n\nam4core.useTheme(am4themes_animated);\nconst columns = [\n  { id: \"projectName\", label: \"Project Name\" },\n  { id: \"projectDesc\", label: \"Project Description\" },\n  { id: \"projectDesc\", label: \"Total Tasks\" },\n  { id: \"projectDesc\", label: \"Tasks List\" },\n  { id: \"createDate\", label: \"Created Date\" },\n  { id: \"projectDesc\", label: \"Actions\" },\n];\nconst ref = React.createRef();\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // addArticle: article => dispatch(addArticle(article))\n    projectList: projects => dispatch(projectList(projects))\n  };\n}\nconst mapStateToProps = state => {\n  return {\n    userInfo: state.userInfo,\n    timestamp: state.timestamp,\n    campaings: state.campaings,\n    reduxLoadFlag: state.reduxLoadFlag,\n    projectListArr: state.projectList,\n    taskListArr: state.taskList,\n  };\n};\nclass RecordClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateUtility = new DateFnsUtils();\n    this._isMounted = false;\n    this.state = {\n      value: 0,\n      page: 0,\n      loading: false,\n      rowsPerPageT: RECORD_PER_PAGE,\n      rowsPerPage: RECORD_PER_PAGE,\n      timeStampVal: new Date().toLocaleTimeString(),\n      reduxLoadFlag: false,\n      openProjects: false,\n      projectListArr: this.props.projectListArr ? this.props.projectListArr : [],\n      taskList: this.props.taskListArr ? this.props.taskListArr : [],\n      projectId: \"\",\n      search: \"\",\n    };\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n    this.confirmModalClose = this.confirmModalClose.bind(this);\n    this.filterProjects = this.filterProjects.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'Projects';\n  }\n  handleChangePage = async (event, newPage) => {\n    this.setState({\n      page: newPage\n    });\n    // setPage(newPage);\n  };\n  handleChangeRowsPerPage(event) {\n    this.setState({\n      rowsPerPage: +event.target.value,\n      page: 0\n    });\n  }\n  handleInput(e) {\n    const { value } = e.target.value;\n    this.setState({\n      search: value,\n    })\n  }\n  filterProjects() {\n    const allProjects = this.props.projectListArr;\n    const searchRes = this.state.search;\n    console.log(searchRes, allProjects, this.state.search)\n    if (!searchRes) {\n      return false;\n    }\n    const updatedProjects = allProjects.filter((pList) => {\n      if (pList.projectName.includes(searchRes) || pList.projectDesc.includes(searchRes)) {\n        return pList;\n      }\n    })\n    this.setState({\n      projectListArr: updatedProjects\n    })\n  }\n  validateField = (fieldName, fieldValue) => {\n    let fieldValidationErrors = this.state.formErrors;\n    let startDateValid = this.state.startDateValid;\n    let endDateValid = this.state.endDateValid;\n\n    switch (fieldName) {\n      case \"startDate\":\n        startDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.startDate = !startDateValid\n          ? enMsg.startDateRequiredMsg\n          : \"\";\n        break;\n      case \"endDate\":\n        endDateValid = (fieldValue && fieldValue != \"\") ? true : false;\n        fieldValidationErrors.endDate = !endDateValid\n          ? enMsg.endDateRequiredMsg\n          : \"\";\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      startDateValid: startDateValid,\n      endDateValid: endDateValid,\n    }, this.validateForm);\n  }\n  validateForm() {\n    return (\n      this.state.startDateValid &&\n      this.state.endDateValid\n    )\n  }\n  openProjects() {\n    this.setState({ openProjects: true })\n  }\n  confirmModalClose() {\n    this.setState({\n      projectId: \"\",\n      openProjects: false,\n      projectListArr: this.props.projectListArr,\n    })\n  }\n  GetTaskCount = (pId, tList) => {\n    const filteredTasks = tList.filter((list) => {\n      if (list.projectId == pId) {\n        return list\n      }\n    })\n    return filteredTasks.length;\n  }\n  GetTaskList = (pId, tList) => {\n    const taskList = {}\n    tList.map((list) => {\n      if (list.projectId == pId) {\n        console.log(list.taskStatus)\n        if (list.taskStatus == \"new\") {\n          taskList.new = taskList.new ? taskList.new + 1 : 1;\n        } else if (list.taskStatus == \"progress\") {\n          taskList.progress = taskList.progress ? taskList.progress + 1 : 1;\n        } else {\n          taskList.done = taskList.done ? taskList.done + 1 : 1;\n        }\n      }\n    })\n    console.log(taskList)\n    return (\n      <div>\n        {taskList.done ? <p>Done: {taskList.done}</p> : null}\n        {taskList.new ? <p>New: {taskList.new}</p> : null}\n        {taskList.progress ? <p>Progress: {taskList.progress}</p> : null}\n      </div>\n    )\n  }\n  editProject(projectId) {\n    this.setState({\n      projectId: projectId,\n      openProjects: true,\n    })\n  }\n  deleteProject(projectId) {\n    const projectListArr = this.state.projectListArr;\n    const updatedTaskList = projectListArr.filter((tList) => {\n      return tList.uid == projectId ? null : tList;\n    })\n    this.props.projectList(updatedTaskList);\n    this.setState({\n      projectListArr: updatedTaskList,\n    })\n  }\n  render() {\n    const { classes } = this.props;\n    const {\n      openProjects, projectListArr, taskList, projectId, search\n    } = this.state;\n    console,log(search)\n    return (\n      <div className=\"recordFormRow\">\n        <span className=\"box-with-bg\">\n          <AddProject projectId={projectId} openProjects={openProjects} confirmModalClose={this.confirmModalClose} />\n          <div className=\"recordFormHead white-text\">My Projects</div>\n          <div className=\"full-width text-right\">\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.openProjects()}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n                  Add Project\n                </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <FormControl >\n                <FormGroup className=\"full-width setting_cards p-10\">\n                  <input\n                    className=\"custom-input-box\"\n                    label=\"Search\"\n                    placeholder=\"Search\"\n                    text=\"text\"\n                    name=\"search\"\n                    variant=\"filled\"\n                    value={search}\n                    onChange={e => this.handleInput(e)}\n                  />\n                </FormGroup>\n              </FormControl>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n              <Button\n                className=\"client newbtn greenbtn\"\n                type=\"button\"\n                onClick={() => this.filterProjects()}\n              >\n                <p>\n                  {this.state.loading && (\n                    <CircularProgress\n                      size={24}\n                      className=\"buttonProgress\"\n                      color=\"secondary\"\n                    />\n                  )}\n                  Search\n                </p>\n              </Button>\n            </div>\n            <div className=\"recordFormCol widthauto\">\n            </div>\n          </div>\n          <div className=\"full-width\">\n            <GridContainer>\n              <CardBody>\n                <Paper className={(classes.root, this.cust_table_cover)}>\n                  <div className={(classes.tableWrapper, this.cust_table)}>\n                    <div className=\"table-respopnsive\">\n                      <Table>\n                        <TableHead className={this.tableh}>\n                          <TableRow>\n                            {columns.map(column => (\n                              <TableCell\n                                key={column.id}\n                                align={column.align}\n                                style={{ minWidth: column.minWidth }}\n                              >\n                                {column.label}\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody key=\"TableBody\">\n                          {\n                            this.state.projectListArr.length &&\n                              this.state.projectListArr.length\n                              ? this.state.projectListArr\n                                .slice(\n                                  this.state.page * this.state.rowsPerPage,\n                                  this.state.page * this.state.rowsPerPage +\n                                  this.state.rowsPerPage\n                                )\n                                .map((row, key) => {\n                                  return (\n                                    <TableRow\n                                      hover\n                                      role=\"checkbox\"\n                                      tabIndex={-1}\n                                      key={key}\n                                    >\n                                      <TableCell>{row.projectName}</TableCell>\n                                      <TableCell>{row.projectDesc}</TableCell>\n                                      <TableCell>\n                                        {\n                                          taskList && taskList.length\n                                            ?\n                                            this.GetTaskCount(row.uid, taskList)\n                                            :\n                                            \"No task\"\n                                        }\n                                      </TableCell>\n                                      <TableCell>\n                                        {\n                                          taskList && taskList.length\n                                            ?\n                                            this.GetTaskList(row.uid, taskList)\n                                            :\n                                            \"No task\"\n                                        }\n                                      </TableCell>\n                                      <TableCell>{new Date(row.createDate).toDateString()}</TableCell>\n                                      <TableCell>\n                                        <span className=\"edit-action\">\n                                          <Link\n                                            underline=\"none\"\n                                            to={\n                                              {\n                                                pathname: basePath + baseRoutes.tasks.path,\n                                                state: row.uid\n                                              }\n                                            }\n                                          >\n                                            <Icon className=\"fa fa-eye\" aria-hidden=\"true\" style={{ color: \"#fff\" }} />\n                                          </Link>\n                                        </span>\n                                        <span className=\"edit-action\">\n                                          <Icon className=\"fa fa-pencil\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.editProject(row.uid)} />\n                                        </span>\n                                        {\n                                          this.GetTaskCount(row.uid, taskList) == 0\n                                            ?\n                                            <span className=\"edit-action\">\n                                              <Icon className=\"fa fa-trash\" aria-hidden=\"true\" style={{ color: \"#fff\" }} onClick={() => this.deleteProject(row.uid)} />\n                                            </span>\n                                            :\n                                            null\n                                        }\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                })\n                              :\n                              <TableRow>\n                                <TableCell colspan='7'>\n                                  <div className=\"not-found-text\">No projects available...</div>\n                                </TableCell>\n                              </TableRow>\n                          }\n                        </TableBody>\n                      </Table>\n                    </div>\n                  </div>\n                  <TablePagination\n                    rowsPerPageOptions={PER_PAGE_OPTIONS}\n                    component=\"div\"\n                    count={\n                      this.state.projectListArr.length &&\n                        this.state.projectListArr.length\n                        ? this.state.projectListArr.length\n                        : 0\n                    }\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                      \"aria-label\": \"previous page\"\n                    }}\n                    nextIconButtonProps={{\n                      \"aria-label\": \"next page\"\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n                </Paper>\n              </CardBody>\n            </GridContainer>\n          </div>\n        </span>\n      </div>\n    );\n  }\n}\n\nRecordClass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst Record = connect(\n  mapStateToProps, mapDispatchToProps\n)(RecordClass);\n\n// export default Form;\nexport default withStyles(dashboardStyle)(Record);"]},"metadata":{},"sourceType":"module"}